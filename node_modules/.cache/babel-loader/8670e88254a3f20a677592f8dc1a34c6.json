{"ast":null,"code":"import _toConsumableArray from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{selector}from\"recoil\";import{GameSelector}from\"../../types/game\";import{checkConnectionSelectedPokemons}from\"../../utils/game\";import gameState from\"../atoms/gameState\";import gameOverlayState from\"../atoms/gameOverlayState\";import selectedPokemonsState from\"../atoms/selectedPokemonsState\";var selectedPokemonsSelector=selector({key:GameSelector.SELECTED_POKEMONS_SELECTOR,get:function get(_ref){var _get=_ref.get;var selectedPokemons=_get(selectedPokemonsState);return selectedPokemons;},set:function set(_ref2,newValue){var _set=_ref2.set,get=_ref2.get;var _get2=get(gameState),row=_get2.row,col=_get2.col,status=_get2.status,matrix=_get2.matrix,pokemons=_get2.pokemons,level=_get2.level;var selectedPokemons=get(selectedPokemonsState);var cloneSelectedPokemons=_toConsumableArray(selectedPokemons);cloneSelectedPokemons.push(newValue);var _checkConnectionSelec=checkConnectionSelectedPokemons(cloneSelectedPokemons,pokemons,matrix,row,col),connectingLinePoints=_checkConnectionSelec.connectingLinePoints,newMatrix=_checkConnectionSelec.newMatrix,newPokemons=_checkConnectionSelec.newPokemons,newSelectedPokemons=_checkConnectionSelec.newSelectedPokemons;if(connectingLinePoints.length>=1){if(connectingLinePoints.length>1){_set(gameState,{row:row,col:col,status:status,level:level,matrix:newMatrix,pokemons:newPokemons});}_set(gameOverlayState,{suggestPoints:[undefined,undefined],connectingLinePoints:connectingLinePoints});}_set(selectedPokemonsState,newSelectedPokemons);}});export default selectedPokemonsSelector;","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/recoil/selectors/selectedPokemonsSelector.ts"],"names":["selector","GameSelector","checkConnectionSelectedPokemons","gameState","gameOverlayState","selectedPokemonsState","selectedPokemonsSelector","key","SELECTED_POKEMONS_SELECTOR","get","selectedPokemons","set","newValue","row","col","status","matrix","pokemons","level","cloneSelectedPokemons","push","connectingLinePoints","newMatrix","newPokemons","newSelectedPokemons","length","suggestPoints","undefined"],"mappings":"yJAAA,OAASA,QAAT,KAAyB,QAAzB,CACA,OAASC,YAAT,KAA4C,kBAA5C,CACA,OAASC,+BAAT,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,SAAP,KAAsB,oBAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,gCAAlC,CAEA,GAAMC,CAAAA,wBAAwB,CAAGN,QAAQ,CAAC,CACxCO,GAAG,CAAEN,YAAY,CAACO,0BADsB,CAExCC,GAAG,CAAE,kBAAa,IAAVA,CAAAA,IAAU,MAAVA,GAAU,CAChB,GAAMC,CAAAA,gBAAgB,CAAGD,IAAG,CAACJ,qBAAD,CAA5B,CACA,MAAOK,CAAAA,gBAAP,CACD,CALuC,CAMxCC,GAAG,CAAE,mBAAeC,QAAf,CAA4B,IAAzBD,CAAAA,IAAyB,OAAzBA,GAAyB,CAApBF,GAAoB,OAApBA,GAAoB,CAC/B,UAAsDA,GAAG,CAACN,SAAD,CAAzD,CAAQU,GAAR,OAAQA,GAAR,CAAaC,GAAb,OAAaA,GAAb,CAAkBC,MAAlB,OAAkBA,MAAlB,CAA0BC,MAA1B,OAA0BA,MAA1B,CAAkCC,QAAlC,OAAkCA,QAAlC,CAA4CC,KAA5C,OAA4CA,KAA5C,CACA,GAAMR,CAAAA,gBAAgB,CAAGD,GAAG,CAACJ,qBAAD,CAA5B,CAEA,GAAMc,CAAAA,qBAAqB,oBAAOT,gBAAP,CAA3B,CACAS,qBAAqB,CAACC,IAAtB,CAA2BR,QAA3B,EAEA,0BAKIV,+BAA+B,CACjCiB,qBADiC,CAEjCF,QAFiC,CAGjCD,MAHiC,CAIjCH,GAJiC,CAKjCC,GALiC,CALnC,CACEO,oBADF,uBACEA,oBADF,CAEEC,SAFF,uBAEEA,SAFF,CAGEC,WAHF,uBAGEA,WAHF,CAIEC,mBAJF,uBAIEA,mBAJF,CAaA,GAAIH,oBAAoB,CAACI,MAArB,EAA+B,CAAnC,CAAsC,CACpC,GAAIJ,oBAAoB,CAACI,MAArB,CAA8B,CAAlC,CAAqC,CACnCd,IAAG,CAACR,SAAD,CAAY,CACbU,GAAG,CAAHA,GADa,CAEbC,GAAG,CAAHA,GAFa,CAGbC,MAAM,CAANA,MAHa,CAIbG,KAAK,CAALA,KAJa,CAKbF,MAAM,CAAEM,SALK,CAMbL,QAAQ,CAAEM,WANG,CAAZ,CAAH,CAQD,CACDZ,IAAG,CAACP,gBAAD,CAAmB,CACpBsB,aAAa,CAAE,CAACC,SAAD,CAAYA,SAAZ,CADK,CAEpBN,oBAAoB,CAApBA,oBAFoB,CAAnB,CAAH,CAID,CAEDV,IAAG,CAACN,qBAAD,CAAwBmB,mBAAxB,CAAH,CACD,CA5CuC,CAAD,CAAzC,CA+CA,cAAelB,CAAAA,wBAAf","sourcesContent":["import { selector } from \"recoil\";\r\nimport { GameSelector, PokemonCoords } from \"../../types/game\";\r\nimport { checkConnectionSelectedPokemons } from \"../../utils/game\";\r\nimport gameState from \"../atoms/gameState\";\r\nimport gameOverlayState from \"../atoms/gameOverlayState\";\r\nimport selectedPokemonsState from \"../atoms/selectedPokemonsState\";\r\n\r\nconst selectedPokemonsSelector = selector({\r\n  key: GameSelector.SELECTED_POKEMONS_SELECTOR,\r\n  get: ({ get }) => {\r\n    const selectedPokemons = get(selectedPokemonsState);\r\n    return selectedPokemons;\r\n  },\r\n  set: ({ set, get }, newValue) => {\r\n    const { row, col, status, matrix, pokemons, level } = get(gameState);\r\n    const selectedPokemons = get(selectedPokemonsState);\r\n\r\n    const cloneSelectedPokemons = [...selectedPokemons];\r\n    cloneSelectedPokemons.push(newValue as PokemonCoords);\r\n\r\n    const {\r\n      connectingLinePoints,\r\n      newMatrix,\r\n      newPokemons,\r\n      newSelectedPokemons,\r\n    } = checkConnectionSelectedPokemons(\r\n      cloneSelectedPokemons,\r\n      pokemons,\r\n      matrix,\r\n      row,\r\n      col\r\n    );\r\n\r\n    if (connectingLinePoints.length >= 1) {\r\n      if (connectingLinePoints.length > 1) {\r\n        set(gameState, {\r\n          row,\r\n          col,\r\n          status,\r\n          level,\r\n          matrix: newMatrix,\r\n          pokemons: newPokemons,\r\n        });\r\n      }\r\n      set(gameOverlayState, {\r\n        suggestPoints: [undefined, undefined],\r\n        connectingLinePoints,\r\n      });\r\n    }\r\n\r\n    set(selectedPokemonsState, newSelectedPokemons);\r\n  },\r\n});\r\n\r\nexport default selectedPokemonsSelector;\r\n"]},"metadata":{},"sourceType":"module"}