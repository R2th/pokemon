{"ast":null,"code":"import _toConsumableArray from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useCallback,useEffect,useState}from\"react\";import{useTranslation}from\"react-i18next\";import useWebSocket,{ReadyState}from\"react-use-websocket\";import{useRecoilValue,useSetRecoilState}from\"recoil\";import gameSoundState from\"../recoil/atoms/gameSoundState\";import messagesState from\"../recoil/atoms/messagesState\";import playerState from\"../recoil/atoms/playerState\";import ChatBox from\"./Chat/ChatBox\";import MessagesBox from\"./Chat/MessagesBox\";import ListActivePlayers from\"./Chat/ListActivePlayers\";import{BASE_WS_URL}from\"../types/chat\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ChatRoom=function ChatRoom(_ref){var room=_ref.room;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useRecoilValue=useRecoilValue(playerState),playerName=_useRecoilValue.playerName;var _useRecoilValue2=useRecoilValue(gameSoundState),playPopUpOffSound=_useRecoilValue2.playPopUpOffSound;var setMessagesState=useSetRecoilState(messagesState);var _useState=useState(\"\".concat(BASE_WS_URL,\"/chat\")),_useState2=_slicedToArray(_useState,1),socketUrl=_useState2[0];var _useWebSocket=useWebSocket(socketUrl,{reconnectAttempts:10,reconnectInterval:3000,retryOnError:true,shouldReconnect:function shouldReconnect(){return true;},queryParams:{username:playerName},onMessage:function onMessage(event){playPopUpOffSound&&playPopUpOffSound();}}),sendJsonMessage=_useWebSocket.sendJsonMessage,readyState=_useWebSocket.readyState,lastJsonMessage=_useWebSocket.lastJsonMessage,lastMessage=_useWebSocket.lastMessage;var reTryConnectSocket=function reTryConnectSocket(){window.location.reload();};useEffect(function(){lastJsonMessage&&setMessagesState(function(_ref2){var messages=_ref2.messages;return{messages:[].concat(_toConsumableArray(messages),[lastJsonMessage])};});},[lastMessage]);var handleClickSendMessage=useCallback(function(message){var messageJson={command:2,channel:\"general\",name:playerName,content:message,timestamp:Date.now()};// playPopUpOnSound();\nsendJsonMessage(messageJson);},[]);var handleSubmit=function handleSubmit(event){event.preventDefault();var inputMessage=event.currentTarget.message;inputMessage.setAttribute(\"disabled\",\"true\");var message=inputMessage.value.replace(/\\b(dit|du|fuck|cu|dcm|dm|dcm|cat)\\b/g,\"*\");if(message&&message.trim()!==\"\"){handleClickSendMessage(message);inputMessage.value=\"\";}else{alert(t(\"Please enter your message\"));}inputMessage.removeAttribute(\"disabled\");inputMessage.focus();};return/*#__PURE__*/_jsx(\"div\",{className:\"chat-room\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[readyState===ReadyState.OPEN&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box-container\",children:[/*#__PURE__*/_jsx(MessagesBox,{}),/*#__PURE__*/_jsx(ChatBox,{handleSubmit:handleSubmit})]}),/*#__PURE__*/_jsx(ListActivePlayers,{})]}),readyState===ReadyState.CLOSED&&/*#__PURE__*/_jsxs(\"div\",{className:\"service-status\",children:[t(\"Service is not available now.\"),/*#__PURE__*/_jsx(\"strong\",{className:\"clickable\",onClick:reTryConnectSocket,children:t(\"Please try again\")})]})]})});};export default ChatRoom;","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/components/ChatRoom.tsx"],"names":["useCallback","useEffect","useState","useTranslation","useWebSocket","ReadyState","useRecoilValue","useSetRecoilState","gameSoundState","messagesState","playerState","ChatBox","MessagesBox","ListActivePlayers","BASE_WS_URL","ChatRoom","room","t","playerName","playPopUpOffSound","setMessagesState","socketUrl","reconnectAttempts","reconnectInterval","retryOnError","shouldReconnect","queryParams","username","onMessage","event","sendJsonMessage","readyState","lastJsonMessage","lastMessage","reTryConnectSocket","window","location","reload","messages","handleClickSendMessage","message","messageJson","command","channel","name","content","timestamp","Date","now","handleSubmit","preventDefault","inputMessage","currentTarget","setAttribute","value","replace","trim","alert","removeAttribute","focus","OPEN","CLOSED"],"mappings":"0SAAA,OAA+BA,WAA/B,CAA4CC,SAA5C,CAAuDC,QAAvD,KAAuE,OAAvE,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,YAAP,EAAuBC,UAAvB,KAAyC,qBAAzC,CACA,OAASC,cAAT,CAAyBC,iBAAzB,KAAkD,QAAlD,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,0BAA9B,CACA,OAASC,WAAT,KAA4B,eAA5B,C,6IAMA,GAAMC,CAAAA,QAA2B,CAAG,QAA9BA,CAAAA,QAA8B,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAChD,oBAAcb,cAAc,EAA5B,CAAQc,CAAR,iBAAQA,CAAR,CACA,oBAAuBX,cAAc,CAACI,WAAD,CAArC,CAAQQ,UAAR,iBAAQA,UAAR,CACA,qBAA8BZ,cAAc,CAACE,cAAD,CAA5C,CAAQW,iBAAR,kBAAQA,iBAAR,CACA,GAAMC,CAAAA,gBAAgB,CAAGb,iBAAiB,CAACE,aAAD,CAA1C,CACA,cAAoBP,QAAQ,WAAIY,WAAJ,UAA5B,wCAAOO,SAAP,eACA,kBACEjB,YAAY,CAACiB,SAAD,CAAY,CACtBC,iBAAiB,CAAE,EADG,CAEtBC,iBAAiB,CAAE,IAFG,CAGtBC,YAAY,CAAE,IAHQ,CAItBC,eAAe,CAAE,iCAAM,KAAN,EAJK,CAKtBC,WAAW,CAAE,CACXC,QAAQ,CAAET,UADC,CALS,CAQtBU,SAAS,CAAE,mBAACC,KAAD,CAAW,CACpBV,iBAAiB,EAAIA,iBAAiB,EAAtC,CACD,CAVqB,CAAZ,CADd,CAAQW,eAAR,eAAQA,eAAR,CAAyBC,UAAzB,eAAyBA,UAAzB,CAAqCC,eAArC,eAAqCA,eAArC,CAAsDC,WAAtD,eAAsDA,WAAtD,CAcA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/BC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CAFD,CAIApC,SAAS,CAAC,UAAM,CACd+B,eAAe,EACbZ,gBAAgB,CAAC,mBAAGkB,CAAAA,QAAH,OAAGA,QAAH,OAAmB,CAClCA,QAAQ,8BAAMA,QAAN,GAAgBN,eAAhB,EAD0B,CAAnB,EAAD,CADlB,CAID,CALQ,CAKN,CAACC,WAAD,CALM,CAAT,CAOA,GAAMM,CAAAA,sBAAsB,CAAGvC,WAAW,CAAC,SAACwC,OAAD,CAAa,CACtD,GAAMC,CAAAA,WAAW,CAAG,CAClBC,OAAO,CAAE,CADS,CAElBC,OAAO,CAAE,SAFS,CAGlBC,IAAI,CAAE1B,UAHY,CAIlB2B,OAAO,CAAEL,OAJS,CAKlBM,SAAS,CAAEC,IAAI,CAACC,GAAL,EALO,CAApB,CAOA;AACAlB,eAAe,CAACW,WAAD,CAAf,CACD,CAVyC,CAUvC,EAVuC,CAA1C,CAYA,GAAMQ,CAAAA,YAA+C,CAAG,QAAlDA,CAAAA,YAAkD,CAACpB,KAAD,CAAW,CACjEA,KAAK,CAACqB,cAAN,GACA,GAAMC,CAAAA,YAAY,CAAGtB,KAAK,CAACuB,aAAN,CAAoBZ,OAAzC,CACAW,YAAY,CAACE,YAAb,CAA0B,UAA1B,CAAsC,MAAtC,EACA,GAAMb,CAAAA,OAAO,CAAGW,YAAY,CAACG,KAAb,CAAmBC,OAAnB,CACd,sCADc,CAEd,GAFc,CAAhB,CAIA,GAAIf,OAAO,EAAIA,OAAO,CAACgB,IAAR,KAAmB,EAAlC,CAAsC,CACpCjB,sBAAsB,CAACC,OAAD,CAAtB,CACAW,YAAY,CAACG,KAAb,CAAqB,EAArB,CACD,CAHD,IAGO,CACLG,KAAK,CAACxC,CAAC,CAAC,2BAAD,CAAF,CAAL,CACD,CACDkC,YAAY,CAACO,eAAb,CAA6B,UAA7B,EACAP,YAAY,CAACQ,KAAb,GACD,CAhBD,CAkBA,mBACE,YAAK,SAAS,CAAC,WAAf,uBACE,aAAK,SAAS,CAAC,gBAAf,WACG5B,UAAU,GAAK1B,UAAU,CAACuD,IAA1B,eACC,wCACE,aAAK,SAAS,CAAC,oBAAf,wBACE,KAAC,WAAD,IADF,cAEE,KAAC,OAAD,EAAS,YAAY,CAAEX,YAAvB,EAFF,GADF,cAKE,KAAC,iBAAD,IALF,GAFJ,CAUGlB,UAAU,GAAK1B,UAAU,CAACwD,MAA1B,eACC,aAAK,SAAS,CAAC,gBAAf,WACG5C,CAAC,CAAC,+BAAD,CADJ,cAEE,eAAQ,SAAS,CAAC,WAAlB,CAA8B,OAAO,CAAEiB,kBAAvC,UACGjB,CAAC,CAAC,kBAAD,CADJ,EAFF,GAXJ,GADF,EADF,CAuBD,CApFD,CAsFA,cAAeF,CAAAA,QAAf","sourcesContent":["import { FC, FormEventHandler, useCallback, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport messagesState from \"../recoil/atoms/messagesState\";\r\nimport playerState from \"../recoil/atoms/playerState\";\r\nimport ChatBox from \"./Chat/ChatBox\";\r\nimport MessagesBox from \"./Chat/MessagesBox\";\r\nimport ListActivePlayers from \"./Chat/ListActivePlayers\";\r\nimport { BASE_WS_URL } from \"../types/chat\";\r\n\r\ninterface ChatRoomProps {\r\n  room: string;\r\n}\r\n\r\nconst ChatRoom: FC<ChatRoomProps> = ({ room }) => {\r\n  const { t } = useTranslation();\r\n  const { playerName } = useRecoilValue(playerState);\r\n  const { playPopUpOffSound } = useRecoilValue(gameSoundState);\r\n  const setMessagesState = useSetRecoilState(messagesState);\r\n  const [socketUrl] = useState(`${BASE_WS_URL}/chat`);\r\n  const { sendJsonMessage, readyState, lastJsonMessage, lastMessage } =\r\n    useWebSocket(socketUrl, {\r\n      reconnectAttempts: 10,\r\n      reconnectInterval: 3000,\r\n      retryOnError: true,\r\n      shouldReconnect: () => true,\r\n      queryParams: {\r\n        username: playerName,\r\n      },\r\n      onMessage: (event) => {\r\n        playPopUpOffSound && playPopUpOffSound();\r\n      },\r\n    });\r\n\r\n  const reTryConnectSocket = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    lastJsonMessage &&\r\n      setMessagesState(({ messages }) => ({\r\n        messages: [...messages, lastJsonMessage],\r\n      }));\r\n  }, [lastMessage]);\r\n\r\n  const handleClickSendMessage = useCallback((message) => {\r\n    const messageJson = {\r\n      command: 2,\r\n      channel: \"general\",\r\n      name: playerName,\r\n      content: message,\r\n      timestamp: Date.now(),\r\n    };\r\n    // playPopUpOnSound();\r\n    sendJsonMessage(messageJson);\r\n  }, []);\r\n\r\n  const handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\r\n    event.preventDefault();\r\n    const inputMessage = event.currentTarget.message;\r\n    inputMessage.setAttribute(\"disabled\", \"true\");\r\n    const message = inputMessage.value.replace(\r\n      /\\b(dit|du|fuck|cu|dcm|dm|dcm|cat)\\b/g,\r\n      \"*\"\r\n    );\r\n    if (message && message.trim() !== \"\") {\r\n      handleClickSendMessage(message);\r\n      inputMessage.value = \"\";\r\n    } else {\r\n      alert(t(\"Please enter your message\"));\r\n    }\r\n    inputMessage.removeAttribute(\"disabled\");\r\n    inputMessage.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-room\">\r\n      <div className=\"chat-container\">\r\n        {readyState === ReadyState.OPEN && (\r\n          <>\r\n            <div className=\"chat-box-container\">\r\n              <MessagesBox />\r\n              <ChatBox handleSubmit={handleSubmit} />\r\n            </div>\r\n            <ListActivePlayers />\r\n          </>\r\n        )}\r\n        {readyState === ReadyState.CLOSED && (\r\n          <div className=\"service-status\">\r\n            {t(\"Service is not available now.\")}\r\n            <strong className=\"clickable\" onClick={reTryConnectSocket}>\r\n              {t(\"Please try again\")}\r\n            </strong>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n"]},"metadata":{},"sourceType":"module"}