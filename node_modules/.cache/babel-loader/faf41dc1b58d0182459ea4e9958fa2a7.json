{"ast":null,"code":"import _slicedToArray from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{nanoid}from\"nanoid\";import{Direction,PointType}from\"../types/game\";var BASE_URL=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white\";export var pokemonList=[{id:\"poke-0\",matched:false,image:\"\".concat(BASE_URL,\"/1.png\")},{id:\"poke-1\",matched:false,image:\"\".concat(BASE_URL,\"/2.png\")},{id:\"poke-2\",matched:false,image:\"\".concat(BASE_URL,\"/3.png\")},{id:\"poke-3\",matched:false,image:\"\".concat(BASE_URL,\"/4.png\")},{id:\"poke-5\",matched:false,image:\"\".concat(BASE_URL,\"/5.png\")},{id:\"poke-4\",matched:false,image:\"\".concat(BASE_URL,\"/6.png\")},{id:\"poke-6\",matched:false,image:\"\".concat(BASE_URL,\"/7.png\")},{id:\"poke-7\",matched:false,image:\"\".concat(BASE_URL,\"/8.png\")},{id:\"poke-8\",matched:false,image:\"\".concat(BASE_URL,\"/9.png\")},{id:\"poke-9\",matched:false,image:\"\".concat(BASE_URL,\"/10.png\")},{id:\"poke-10\",matched:false,image:\"\".concat(BASE_URL,\"/11.png\")},{id:\"poke-11\",matched:false,image:\"\".concat(BASE_URL,\"/12.png\")},{id:\"poke-12\",matched:false,image:\"\".concat(BASE_URL,\"/13.png\")},{id:\"poke-13\",matched:false,image:\"\".concat(BASE_URL,\"/14.png\")},{id:\"poke-14\",matched:false,image:\"\".concat(BASE_URL,\"/15.png\")},{id:\"poke-15\",matched:false,image:\"\".concat(BASE_URL,\"/16.png\")},{id:\"poke-16\",matched:false,image:\"\".concat(BASE_URL,\"/17.png\")},{id:\"poke-17\",matched:false,image:\"\".concat(BASE_URL,\"/18.png\")},{id:\"poke-18\",matched:false,image:\"\".concat(BASE_URL,\"/19.png\")},{id:\"poke-19\",matched:false,image:\"\".concat(BASE_URL,\"/20.png\")},{id:\"poke-20\",matched:false,image:\"\".concat(BASE_URL,\"/21.png\")},{id:\"poke-21\",matched:false,image:\"\".concat(BASE_URL,\"/22.png\")},{id:\"poke-22\",matched:false,image:\"\".concat(BASE_URL,\"/23.png\")},{id:\"poke-23\",matched:false,image:\"\".concat(BASE_URL,\"/24.png\")},{id:\"poke-24\",matched:false,image:\"\".concat(BASE_URL,\"/25.png\")},{id:\"poke-25\",matched:false,image:\"\".concat(BASE_URL,\"/26.png\")},{id:\"poke-26\",matched:false,image:\"\".concat(BASE_URL,\"/27.png\")},{id:\"poke-27\",matched:false,image:\"\".concat(BASE_URL,\"/28.png\")},{id:\"poke-28\",matched:false,image:\"\".concat(BASE_URL,\"/29.png\")},{id:\"poke-29\",matched:false,image:\"\".concat(BASE_URL,\"/30.png\")},{id:\"poke-30\",matched:false,image:\"\".concat(BASE_URL,\"/31.png\")},{id:\"poke-31\",matched:false,image:\"\".concat(BASE_URL,\"/32.png\")},{id:\"poke-32\",matched:false,image:\"\".concat(BASE_URL,\"/33.png\")},{id:\"poke-33\",matched:false,image:\"\".concat(BASE_URL,\"/34.png\")},{id:\"poke-34\",matched:false,image:\"\".concat(BASE_URL,\"/35.png\")},{id:\"poke-35\",matched:false,image:\"\".concat(BASE_URL,\"/36.png\")},{id:\"poke-36\",matched:false,image:\"\".concat(BASE_URL,\"/37.png\")},{id:\"poke-37\",matched:false,image:\"\".concat(BASE_URL,\"/38.png\")},{id:\"poke-38\",matched:false,image:\"\".concat(BASE_URL,\"/39.png\")},{id:\"poke-39\",matched:false,image:\"\".concat(BASE_URL,\"/40.png\")}];var convertObjectToArrayList=function convertObjectToArrayList(objectList){var arrayList=[];Object.keys(objectList).map(function(key){arrayList.push(objectList[key]);return key;});return arrayList;};export var shufflePokemonList=function shufflePokemonList(nonShuffleList){var shuffledPokemonList=nonShuffleList.sort(function(){return Math.random()-0.5;});var shuffledlistPokemon={};shuffledPokemonList.map(function(pokemon){var nid=nanoid();shuffledlistPokemon[nid]=pokemon;return pokemon;});return shuffledlistPokemon;};export var reShufflePokemonList=function reShufflePokemonList(pokemonList){var arrayPokemons=convertObjectToArrayList(pokemonList);return shufflePokemonList(arrayPokemons);};export var makeListPokemons=function makeListPokemons(row,col){var clonePokemonList=pokemonList.sort(function(){return Math.random()-0.5;});// pokemonList.map((pokemon) => {\n//   clonePokemonList.push(pokemon);\n//   return pokemon;\n// });\nvar total=row*col/4;var slicePokemonList=clonePokemonList.slice(0,total);var nonShufflePokemonList=[].concat(_toConsumableArray(slicePokemonList),_toConsumableArray(slicePokemonList),_toConsumableArray(slicePokemonList),_toConsumableArray(slicePokemonList));return shufflePokemonList(nonShufflePokemonList);};export var generatePokemonMatrix=function generatePokemonMatrix(pokemons){var rowSetting=arguments.length>1&&arguments[1]!==undefined?arguments[1]:8;var colSetting=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;var newPokemons=_objectSpread({},pokemons);var totalCol=colSetting+2;var totalRow=rowSetting+2;var pokemonKeys=Object.keys(pokemons);var pokemonMatrix=[];for(var row=0;row<totalRow;row++){if(pokemonMatrix[row]===undefined)pokemonMatrix[row]=[];for(var col=0;col<totalCol;col++){if(row===0||row===totalRow-1||col===0||col===totalCol-1){var id=nanoid();var borderPoint={nid:id,id:id,matched:true};pokemonMatrix[row].push(borderPoint);}else{var pokemonKey=pokemonKeys.pop();if(pokemonKey){var pokemon=_objectSpread(_objectSpread({},newPokemons[pokemonKey]),{},{nid:pokemonKey,row:row,col:col});newPokemons[pokemonKey]=_objectSpread(_objectSpread({},newPokemons[pokemonKey]),{},{rowIndex:row,colIndex:col});pokemonMatrix[row].push(pokemon);}}}}return{pokemonMatrix:pokemonMatrix,pokemons:newPokemons};};var cloneMatrix=function cloneMatrix(matrix){var newMatrix=[];var length=matrix.length;for(var i=0;i<length;i++){newMatrix[i]=matrix[i].slice();}return newMatrix;};export var findPath=function findPath(fromPoint,toPoint,matrix,totalRow,totalCol){var matrixTotalRow=totalRow+2;var matrixTotalCol=totalCol+2;var tempMatrix=cloneMatrix(matrix);var matrixPoints=[];var matrixTrackingPoints=[];for(var rowIndex=0;rowIndex<matrixTotalRow;++rowIndex){matrixPoints.push([]);matrixTrackingPoints.push([]);for(var colIndex=0;colIndex<matrixTotalCol;++colIndex){var pokemon=_objectSpread({},tempMatrix[rowIndex][colIndex]);matrixPoints[rowIndex].push(pokemon.matched);matrixTrackingPoints[rowIndex].push(undefined);}}var dRow=[-1,0,1,0];var dCol=[0,1,0,-1];var queue=[];queue.push(toPoint);matrixTrackingPoints[toPoint.rowIndex][toPoint.colIndex]={rowIndex:-2,colIndex:-2};matrixPoints[fromPoint.rowIndex][fromPoint.colIndex]=true;matrixPoints[toPoint.rowIndex][toPoint.colIndex]=true;while(queue.length){var currentPoint=queue.shift();if(currentPoint){if((currentPoint===null||currentPoint===void 0?void 0:currentPoint.rowIndex)===fromPoint.rowIndex&&(currentPoint===null||currentPoint===void 0?void 0:currentPoint.colIndex)===fromPoint.colIndex){break;}for(var index=0;index<4;index++){var _rowIndex=currentPoint.rowIndex+dRow[index];var _colIndex=currentPoint.colIndex+dCol[index];while(_rowIndex>=0&&_rowIndex<matrixTotalRow&&_colIndex>=0&&_colIndex<matrixTotalCol&&matrixPoints[_rowIndex][_colIndex]===true){if(matrixTrackingPoints[_rowIndex][_colIndex]===undefined){matrixTrackingPoints[_rowIndex][_colIndex]=currentPoint;queue.push({rowIndex:_rowIndex,colIndex:_colIndex});}_rowIndex+=dRow[index];_colIndex+=dCol[index];}}}}var trackedPoints=[];var trackPoint=_objectSpread({},fromPoint);if(matrixTrackingPoints[trackPoint.rowIndex][trackPoint.colIndex]){while(trackPoint.rowIndex!==-2&&trackPoint.colIndex!==-2){trackedPoints.push({rowIndex:trackPoint.rowIndex,colIndex:trackPoint.colIndex});trackPoint=_objectSpread({},matrixTrackingPoints[trackPoint.rowIndex][trackPoint.colIndex]);}}return trackedPoints;};export var hasConnectLine=function hasConnectLine(point1,point2,matrix,totalRow,totalCol){var pathPoints=findPath(point1,point2,matrix,totalRow,totalCol);return{connected:pathPoints.length>=2&&pathPoints.length<=4,pathPoints:pathPoints};};export var checkPointInLine=function checkPointInLine(connectingLinePoints,currentPosition){var rowIndex=currentPosition.rowIndex,colIndex=currentPosition.colIndex;return connectingLinePoints.find(function(matchingLinePoint){return matchingLinePoint.rowIndex===rowIndex&&matchingLinePoint.colIndex===colIndex;});};export var drawPath=function drawPath(pathPoints,totalRow,totalCol){var limitRow=totalRow+2;var limitCol=totalCol+2;// console.log(pathPoints);\nreturn pathPoints.reduce(function(newPathPoints,currentPoint,index,arrayPoints){var type=PointType.LINE;var direction=undefined;var nextIndex=index+1;var prevIndex=index-1;if(arrayPoints[nextIndex]===undefined){type=PointType.END;}if(arrayPoints[prevIndex]){var prevPoint=arrayPoints[prevIndex];if(prevPoint.rowIndex>currentPoint.rowIndex){direction=Direction.TOP;}else if(prevPoint.rowIndex<currentPoint.rowIndex){direction=Direction.BOTTOM;}else{if(prevPoint.colIndex>currentPoint.colIndex){direction=Direction.LEFT;}else if(prevPoint.colIndex<currentPoint.colIndex){direction=Direction.RIGHT;}else{if(prevPoint.rowIndex>currentPoint.rowIndex){direction=Direction.TOP;}else if(prevPoint.rowIndex<currentPoint.rowIndex){direction=Direction.BOTTOM;}}}var extraPoint=_objectSpread(_objectSpread({},currentPoint),{},{direction:direction,type:PointType.LINE});// console.log(extraPoint);\ndo{switch(extraPoint.direction){case Direction.BOTTOM:extraPoint.rowIndex--;if(extraPoint.rowIndex<0){extraPoint=undefined;}break;case Direction.TOP:extraPoint.rowIndex++;if(extraPoint.rowIndex>=limitRow){extraPoint=undefined;}break;case Direction.LEFT:extraPoint.colIndex++;if(extraPoint.colIndex>=limitCol){extraPoint=undefined;}break;case Direction.RIGHT:extraPoint.colIndex--;if(extraPoint.colIndex<0){extraPoint=undefined;}break;default:break;}if(extraPoint===undefined){break;}if(extraPoint.rowIndex===prevPoint.rowIndex&&extraPoint.colIndex===prevPoint.colIndex){break;}newPathPoints.push(_objectSpread({},extraPoint));}while(extraPoint!==undefined);}else{type=PointType.START;}var newCurrentPoint=_objectSpread(_objectSpread({},currentPoint),{},{direction:direction,type:type});newPathPoints.push(newCurrentPoint);return newPathPoints;},[]);};export var checkConnectionSelectedPokemons=function checkConnectionSelectedPokemons(selectedPokemons,pokemons,matrix,rowSetting,colSetting){var newPokemons=_objectSpread({},pokemons);var newSelectedPokemons=_toConsumableArray(selectedPokemons);var _newSelectedPokemons=_slicedToArray(newSelectedPokemons,2),selectedPokemon1=_newSelectedPokemons[0],selectedPokemon2=_newSelectedPokemons[1];var connectingLinePoints=[];var newMatrix=_toConsumableArray(matrix);if((selectedPokemon1===null||selectedPokemon1===void 0?void 0:selectedPokemon1.nid)&&(selectedPokemon2===null||selectedPokemon2===void 0?void 0:selectedPokemon2.nid)&&pokemons[selectedPokemon1.nid].id===pokemons[selectedPokemon2.nid].id){var _hasConnectLine=hasConnectLine(selectedPokemon1,selectedPokemon2,matrix,rowSetting,colSetting),connected=_hasConnectLine.connected,pathPoints=_hasConnectLine.pathPoints;if(connected){connectingLinePoints=drawPath(pathPoints,rowSetting,colSetting);newPokemons[selectedPokemon1.nid]=_objectSpread(_objectSpread({},newPokemons[selectedPokemon1.nid]),{},{matched:true});newPokemons[selectedPokemon2.nid]=_objectSpread(_objectSpread({},newPokemons[selectedPokemon2.nid]),{},{matched:true});var _generatePokemonMatri=generatePokemonMatrix(newPokemons,rowSetting,colSetting),pokemonMatrix=_generatePokemonMatri.pokemonMatrix;newMatrix=pokemonMatrix;}else{connectingLinePoints=[{rowIndex:-1,colIndex:-1}];}newSelectedPokemons.length=0;}else{if(selectedPokemons.length===2){newSelectedPokemons.length=0;connectingLinePoints=[{rowIndex:-1,colIndex:-1}];}}return{newSelectedPokemons:newSelectedPokemons,newMatrix:newMatrix,newPokemons:newPokemons,connectingLinePoints:connectingLinePoints};};export var checkCompletedLevel=function checkCompletedLevel(pokemons){return Object.keys(pokemons).length&&Object.entries(pokemons).findIndex(function(_ref){var _ref2=_slicedToArray(_ref,2),_=_ref2[0],pokemon=_ref2[1];return pokemon.matched===false;})===-1;};export var hasAnyConnectLine=function hasAnyConnectLine(pokemons,matrix,totalRow,totalCol){var foundConnectLine=false;var fromPoint=undefined;var toPoint=undefined;var entriesPokemons=Object.entries(pokemons);var _loop=function _loop(){var entryPokemon=entriesPokemons.pop();if(entryPokemon===undefined){return\"break\";}var _entryPokemon=_slicedToArray(entryPokemon,2),nid=_entryPokemon[0],currentPokemon=_entryPokemon[1];if(currentPokemon.matched===false){foundConnectLine=entriesPokemons.some(function(_ref3){var _ref4=_slicedToArray(_ref3,2),nid=_ref4[0],pokemon=_ref4[1];if(currentPokemon.id===pokemon.id&&pokemon.matched===false){var _hasConnectLine2=hasConnectLine(currentPokemon,pokemon,matrix,totalRow,totalCol),connected=_hasConnectLine2.connected;if(connected){if(currentPokemon.rowIndex&&currentPokemon.colIndex){fromPoint={rowIndex:currentPokemon.rowIndex,colIndex:currentPokemon.colIndex};}if(pokemon.rowIndex&&pokemon.colIndex){toPoint={rowIndex:pokemon.rowIndex,colIndex:pokemon.colIndex};}}return connected;}return false;});if(foundConnectLine){return\"break\";}}};while(entriesPokemons.length){var _ret=_loop();if(_ret===\"break\")break;}return{foundConnectLine:foundConnectLine,fromPoint:fromPoint,toPoint:toPoint};};","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/utils/game.ts"],"names":["nanoid","Direction","PointType","BASE_URL","pokemonList","id","matched","image","convertObjectToArrayList","objectList","arrayList","Object","keys","map","key","push","shufflePokemonList","nonShuffleList","shuffledPokemonList","sort","Math","random","shuffledlistPokemon","pokemon","nid","reShufflePokemonList","arrayPokemons","makeListPokemons","row","col","clonePokemonList","total","slicePokemonList","slice","nonShufflePokemonList","generatePokemonMatrix","pokemons","rowSetting","colSetting","newPokemons","totalCol","totalRow","pokemonKeys","pokemonMatrix","undefined","borderPoint","pokemonKey","pop","rowIndex","colIndex","cloneMatrix","matrix","newMatrix","length","i","findPath","fromPoint","toPoint","matrixTotalRow","matrixTotalCol","tempMatrix","matrixPoints","matrixTrackingPoints","dRow","dCol","queue","currentPoint","shift","index","trackedPoints","trackPoint","hasConnectLine","point1","point2","pathPoints","connected","checkPointInLine","connectingLinePoints","currentPosition","find","matchingLinePoint","drawPath","limitRow","limitCol","reduce","newPathPoints","arrayPoints","type","LINE","direction","nextIndex","prevIndex","END","prevPoint","TOP","BOTTOM","LEFT","RIGHT","extraPoint","START","newCurrentPoint","checkConnectionSelectedPokemons","selectedPokemons","newSelectedPokemons","selectedPokemon1","selectedPokemon2","checkCompletedLevel","entries","findIndex","_","hasAnyConnectLine","foundConnectLine","entriesPokemons","entryPokemon","currentPokemon","some"],"mappings":"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","sourcesContent":["import { nanoid } from \"nanoid\";\r\nimport {\r\n  PointCoords,\r\n  Pokemon,\r\n  PokemonCoords,\r\n  Direction,\r\n  PointType,\r\n} from \"../types/game\";\r\n\r\nconst BASE_URL =\r\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white\";\r\n\r\nexport let pokemonList: Pokemon[] = [\r\n  { id: \"poke-0\", matched: false, image: `${BASE_URL}/1.png` },\r\n  { id: \"poke-1\", matched: false, image: `${BASE_URL}/2.png` },\r\n  { id: \"poke-2\", matched: false, image: `${BASE_URL}/3.png` },\r\n  { id: \"poke-3\", matched: false, image: `${BASE_URL}/4.png` },\r\n  { id: \"poke-5\", matched: false, image: `${BASE_URL}/5.png` },\r\n  { id: \"poke-4\", matched: false, image: `${BASE_URL}/6.png` },\r\n  { id: \"poke-6\", matched: false, image: `${BASE_URL}/7.png` },\r\n  { id: \"poke-7\", matched: false, image: `${BASE_URL}/8.png` },\r\n  { id: \"poke-8\", matched: false, image: `${BASE_URL}/9.png` },\r\n  { id: \"poke-9\", matched: false, image: `${BASE_URL}/10.png` },\r\n  { id: \"poke-10\", matched: false, image: `${BASE_URL}/11.png` },\r\n  { id: \"poke-11\", matched: false, image: `${BASE_URL}/12.png` },\r\n  { id: \"poke-12\", matched: false, image: `${BASE_URL}/13.png` },\r\n  { id: \"poke-13\", matched: false, image: `${BASE_URL}/14.png` },\r\n  { id: \"poke-14\", matched: false, image: `${BASE_URL}/15.png` },\r\n  { id: \"poke-15\", matched: false, image: `${BASE_URL}/16.png` },\r\n  { id: \"poke-16\", matched: false, image: `${BASE_URL}/17.png` },\r\n  { id: \"poke-17\", matched: false, image: `${BASE_URL}/18.png` },\r\n  { id: \"poke-18\", matched: false, image: `${BASE_URL}/19.png` },\r\n  { id: \"poke-19\", matched: false, image: `${BASE_URL}/20.png` },\r\n  { id: \"poke-20\", matched: false, image: `${BASE_URL}/21.png` },\r\n  { id: \"poke-21\", matched: false, image: `${BASE_URL}/22.png` },\r\n  { id: \"poke-22\", matched: false, image: `${BASE_URL}/23.png` },\r\n  { id: \"poke-23\", matched: false, image: `${BASE_URL}/24.png` },\r\n  { id: \"poke-24\", matched: false, image: `${BASE_URL}/25.png` },\r\n  { id: \"poke-25\", matched: false, image: `${BASE_URL}/26.png` },\r\n  { id: \"poke-26\", matched: false, image: `${BASE_URL}/27.png` },\r\n  { id: \"poke-27\", matched: false, image: `${BASE_URL}/28.png` },\r\n  { id: \"poke-28\", matched: false, image: `${BASE_URL}/29.png` },\r\n  { id: \"poke-29\", matched: false, image: `${BASE_URL}/30.png` },\r\n  { id: \"poke-30\", matched: false, image: `${BASE_URL}/31.png` },\r\n  { id: \"poke-31\", matched: false, image: `${BASE_URL}/32.png` },\r\n  { id: \"poke-32\", matched: false, image: `${BASE_URL}/33.png` },\r\n  { id: \"poke-33\", matched: false, image: `${BASE_URL}/34.png` },\r\n  { id: \"poke-34\", matched: false, image: `${BASE_URL}/35.png` },\r\n  { id: \"poke-35\", matched: false, image: `${BASE_URL}/36.png` },\r\n  { id: \"poke-36\", matched: false, image: `${BASE_URL}/37.png` },\r\n  { id: \"poke-37\", matched: false, image: `${BASE_URL}/38.png` },\r\n  { id: \"poke-38\", matched: false, image: `${BASE_URL}/39.png` },\r\n  { id: \"poke-39\", matched: false, image: `${BASE_URL}/40.png` },\r\n];\r\n\r\nconst convertObjectToArrayList = <Model>(\r\n  objectList: Record<string, Model>\r\n): Model[] => {\r\n  const arrayList: Model[] = [];\r\n  Object.keys(objectList).map((key) => {\r\n    arrayList.push(objectList[key]);\r\n    return key;\r\n  });\r\n  return arrayList;\r\n};\r\n\r\nexport const shufflePokemonList = (nonShuffleList: Pokemon[]) => {\r\n  const shuffledPokemonList = nonShuffleList.sort(() => Math.random() - 0.5);\r\n  const shuffledlistPokemon: Record<string, Pokemon> = {};\r\n  shuffledPokemonList.map((pokemon) => {\r\n    const nid = nanoid();\r\n    shuffledlistPokemon[nid] = pokemon;\r\n    return pokemon;\r\n  });\r\n\r\n  return shuffledlistPokemon;\r\n};\r\n\r\nexport const reShufflePokemonList = (pokemonList: Record<string, Pokemon>) => {\r\n  const arrayPokemons = convertObjectToArrayList(pokemonList);\r\n\r\n  return shufflePokemonList(arrayPokemons);\r\n};\r\n\r\nexport const makeListPokemons = (row: number, col: number) => {\r\n  const clonePokemonList: Pokemon[] = pokemonList.sort(\r\n    () => Math.random() - 0.5\r\n  );\r\n  // pokemonList.map((pokemon) => {\r\n  //   clonePokemonList.push(pokemon);\r\n  //   return pokemon;\r\n  // });\r\n  const total = (row * col) / 4;\r\n  const slicePokemonList = clonePokemonList.slice(0, total);\r\n  const nonShufflePokemonList = [\r\n    ...slicePokemonList,\r\n    ...slicePokemonList,\r\n    ...slicePokemonList,\r\n    ...slicePokemonList,\r\n  ];\r\n\r\n  return shufflePokemonList(nonShufflePokemonList);\r\n};\r\n\r\nexport const generatePokemonMatrix = (\r\n  pokemons: Record<string, Pokemon>,\r\n  rowSetting: number = 8,\r\n  colSetting: number = 10\r\n): { pokemonMatrix: Pokemon[][]; pokemons: Record<string, Pokemon> } => {\r\n  const newPokemons = { ...pokemons };\r\n  const totalCol = colSetting + 2;\r\n  const totalRow = rowSetting + 2;\r\n  const pokemonKeys = Object.keys(pokemons);\r\n  const pokemonMatrix: Pokemon[][] = [];\r\n\r\n  for (let row = 0; row < totalRow; row++) {\r\n    if (pokemonMatrix[row] === undefined) pokemonMatrix[row] = [];\r\n    for (let col = 0; col < totalCol; col++) {\r\n      if (\r\n        row === 0 ||\r\n        row === totalRow - 1 ||\r\n        col === 0 ||\r\n        col === totalCol - 1\r\n      ) {\r\n        const id = nanoid();\r\n        const borderPoint = { nid: id, id, matched: true };\r\n        pokemonMatrix[row].push(borderPoint);\r\n      } else {\r\n        const pokemonKey = pokemonKeys.pop();\r\n        if (pokemonKey) {\r\n          const pokemon = {\r\n            ...newPokemons[pokemonKey],\r\n            nid: pokemonKey,\r\n            row,\r\n            col,\r\n          };\r\n          newPokemons[pokemonKey] = {\r\n            ...newPokemons[pokemonKey],\r\n            rowIndex: row,\r\n            colIndex: col,\r\n          };\r\n          pokemonMatrix[row].push(pokemon);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return { pokemonMatrix, pokemons: newPokemons };\r\n};\r\n\r\nconst cloneMatrix = (matrix: Pokemon[][]) => {\r\n  const newMatrix = [];\r\n  const length = matrix.length;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    newMatrix[i] = matrix[i].slice();\r\n  }\r\n\r\n  return newMatrix;\r\n};\r\n\r\nexport const findPath = (\r\n  fromPoint: PointCoords,\r\n  toPoint: PointCoords,\r\n  matrix: Pokemon[][],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  const matrixTotalRow = totalRow + 2;\r\n  const matrixTotalCol = totalCol + 2;\r\n  const tempMatrix = cloneMatrix(matrix);\r\n  const matrixPoints: boolean[][] = [];\r\n  const matrixTrackingPoints: (PointCoords | undefined)[][] = [];\r\n\r\n  for (let rowIndex = 0; rowIndex < matrixTotalRow; ++rowIndex) {\r\n    matrixPoints.push([]);\r\n    matrixTrackingPoints.push([]);\r\n    for (let colIndex = 0; colIndex < matrixTotalCol; ++colIndex) {\r\n      const pokemon = { ...tempMatrix[rowIndex][colIndex] };\r\n      matrixPoints[rowIndex].push(pokemon.matched);\r\n      matrixTrackingPoints[rowIndex].push(undefined);\r\n    }\r\n  }\r\n  const dRow: number[] = [-1, 0, 1, 0];\r\n  const dCol: number[] = [0, 1, 0, -1];\r\n  const queue = [];\r\n  queue.push(toPoint);\r\n  matrixTrackingPoints[toPoint.rowIndex][toPoint.colIndex] = {\r\n    rowIndex: -2,\r\n    colIndex: -2,\r\n  };\r\n\r\n  matrixPoints[fromPoint.rowIndex][fromPoint.colIndex] = true;\r\n  matrixPoints[toPoint.rowIndex][toPoint.colIndex] = true;\r\n\r\n  while (queue.length) {\r\n    const currentPoint = queue.shift();\r\n\r\n    if (currentPoint) {\r\n      if (\r\n        currentPoint?.rowIndex === fromPoint.rowIndex &&\r\n        currentPoint?.colIndex === fromPoint.colIndex\r\n      ) {\r\n        break;\r\n      }\r\n      for (let index = 0; index < 4; index++) {\r\n        let rowIndex: number = currentPoint.rowIndex + dRow[index];\r\n        let colIndex: number = currentPoint.colIndex + dCol[index];\r\n        while (\r\n          rowIndex >= 0 &&\r\n          rowIndex < matrixTotalRow &&\r\n          colIndex >= 0 &&\r\n          colIndex < matrixTotalCol &&\r\n          matrixPoints[rowIndex][colIndex] === true\r\n        ) {\r\n          if (matrixTrackingPoints[rowIndex][colIndex] === undefined) {\r\n            matrixTrackingPoints[rowIndex][colIndex] = currentPoint;\r\n            queue.push({ rowIndex, colIndex });\r\n          }\r\n          rowIndex += dRow[index];\r\n          colIndex += dCol[index];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const trackedPoints: PointCoords[] = [];\r\n  let trackPoint: PointCoords = { ...fromPoint };\r\n\r\n  if (matrixTrackingPoints[trackPoint.rowIndex][trackPoint.colIndex]) {\r\n    while (trackPoint.rowIndex !== -2 && trackPoint.colIndex !== -2) {\r\n      trackedPoints.push({\r\n        rowIndex: trackPoint.rowIndex,\r\n        colIndex: trackPoint.colIndex,\r\n      });\r\n      trackPoint = {\r\n        ...(matrixTrackingPoints[trackPoint.rowIndex][\r\n          trackPoint.colIndex\r\n        ] as PointCoords),\r\n      };\r\n    }\r\n  }\r\n\r\n  return trackedPoints;\r\n};\r\n\r\nexport const hasConnectLine = (\r\n  point1: PokemonCoords,\r\n  point2: PokemonCoords,\r\n  matrix: Pokemon[][],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  const pathPoints = findPath(point1, point2, matrix, totalRow, totalCol);\r\n\r\n  return {\r\n    connected: pathPoints.length >= 2 && pathPoints.length <= 4,\r\n    pathPoints,\r\n  };\r\n};\r\n\r\nexport const checkPointInLine = (\r\n  connectingLinePoints: PointCoords[],\r\n  currentPosition: PointCoords\r\n) => {\r\n  const { rowIndex, colIndex } = currentPosition;\r\n\r\n  return connectingLinePoints.find(\r\n    (matchingLinePoint) =>\r\n      matchingLinePoint.rowIndex === rowIndex &&\r\n      matchingLinePoint.colIndex === colIndex\r\n  );\r\n};\r\n\r\nexport const drawPath = (\r\n  pathPoints: PointCoords[],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  const limitRow = totalRow + 2;\r\n  const limitCol = totalCol + 2;\r\n  // console.log(pathPoints);\r\n  return pathPoints.reduce(\r\n    (newPathPoints, currentPoint, index, arrayPoints) => {\r\n      let type: PointType = PointType.LINE;\r\n      let direction: Direction | undefined = undefined;\r\n      const nextIndex = index + 1;\r\n      const prevIndex = index - 1;\r\n\r\n      if (arrayPoints[nextIndex] === undefined) {\r\n        type = PointType.END;\r\n      }\r\n\r\n      if (arrayPoints[prevIndex]) {\r\n        const prevPoint = arrayPoints[prevIndex];\r\n        if (prevPoint.rowIndex > currentPoint.rowIndex) {\r\n          direction = Direction.TOP;\r\n        } else if (prevPoint.rowIndex < currentPoint.rowIndex) {\r\n          direction = Direction.BOTTOM;\r\n        } else {\r\n          if (prevPoint.colIndex > currentPoint.colIndex) {\r\n            direction = Direction.LEFT;\r\n          } else if (prevPoint.colIndex < currentPoint.colIndex) {\r\n            direction = Direction.RIGHT;\r\n          } else {\r\n            if (prevPoint.rowIndex > currentPoint.rowIndex) {\r\n              direction = Direction.TOP;\r\n            } else if (prevPoint.rowIndex < currentPoint.rowIndex) {\r\n              direction = Direction.BOTTOM;\r\n            }\r\n          }\r\n        }\r\n\r\n        let extraPoint: PointCoords | undefined = {\r\n          ...currentPoint,\r\n          direction,\r\n          type: PointType.LINE,\r\n        };\r\n\r\n        // console.log(extraPoint);\r\n\r\n        do {\r\n          switch (extraPoint.direction) {\r\n            case Direction.BOTTOM:\r\n              extraPoint.rowIndex--;\r\n              if (extraPoint.rowIndex < 0) {\r\n                extraPoint = undefined;\r\n              }\r\n\r\n              break;\r\n\r\n            case Direction.TOP:\r\n              extraPoint.rowIndex++;\r\n              if (extraPoint.rowIndex >= limitRow) {\r\n                extraPoint = undefined;\r\n              }\r\n              break;\r\n\r\n            case Direction.LEFT:\r\n              extraPoint.colIndex++;\r\n              if (extraPoint.colIndex >= limitCol) {\r\n                extraPoint = undefined;\r\n              }\r\n              break;\r\n\r\n            case Direction.RIGHT:\r\n              extraPoint.colIndex--;\r\n              if (extraPoint.colIndex < 0) {\r\n                extraPoint = undefined;\r\n              }\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          if (extraPoint === undefined) {\r\n            break;\r\n          }\r\n          if (\r\n            extraPoint.rowIndex === prevPoint.rowIndex &&\r\n            extraPoint.colIndex === prevPoint.colIndex\r\n          ) {\r\n            break;\r\n          }\r\n\r\n          newPathPoints.push({ ...extraPoint });\r\n        } while (extraPoint !== undefined);\r\n      } else {\r\n        type = PointType.START;\r\n      }\r\n      const newCurrentPoint = { ...currentPoint, direction, type };\r\n\r\n      newPathPoints.push(newCurrentPoint);\r\n\r\n      return newPathPoints;\r\n    },\r\n    [] as PointCoords[]\r\n  );\r\n};\r\n\r\nexport const checkConnectionSelectedPokemons = (\r\n  selectedPokemons: PokemonCoords[],\r\n  pokemons: Record<string, Pokemon>,\r\n  matrix: Pokemon[][],\r\n  rowSetting: number,\r\n  colSetting: number\r\n) => {\r\n  const newPokemons = { ...pokemons };\r\n  const newSelectedPokemons = [...selectedPokemons];\r\n  const [selectedPokemon1, selectedPokemon2] = newSelectedPokemons;\r\n  let connectingLinePoints: PointCoords[] = [];\r\n  let newMatrix = [...matrix];\r\n\r\n  if (\r\n    selectedPokemon1?.nid &&\r\n    selectedPokemon2?.nid &&\r\n    pokemons[selectedPokemon1.nid].id === pokemons[selectedPokemon2.nid].id\r\n  ) {\r\n    const { connected, pathPoints } = hasConnectLine(\r\n      selectedPokemon1,\r\n      selectedPokemon2,\r\n      matrix,\r\n      rowSetting,\r\n      colSetting\r\n    );\r\n\r\n    if (connected) {\r\n      connectingLinePoints = drawPath(pathPoints, rowSetting, colSetting);\r\n\r\n      newPokemons[selectedPokemon1.nid] = {\r\n        ...newPokemons[selectedPokemon1.nid],\r\n        matched: true,\r\n      };\r\n      newPokemons[selectedPokemon2.nid] = {\r\n        ...newPokemons[selectedPokemon2.nid],\r\n        matched: true,\r\n      };\r\n      const { pokemonMatrix } = generatePokemonMatrix(\r\n        newPokemons,\r\n        rowSetting,\r\n        colSetting\r\n      );\r\n      newMatrix = pokemonMatrix;\r\n    } else {\r\n      connectingLinePoints = [{ rowIndex: -1, colIndex: -1 }];\r\n    }\r\n\r\n    newSelectedPokemons.length = 0;\r\n  } else {\r\n    if (selectedPokemons.length === 2) {\r\n      newSelectedPokemons.length = 0;\r\n      connectingLinePoints = [{ rowIndex: -1, colIndex: -1 }];\r\n    }\r\n  }\r\n\r\n  return {\r\n    newSelectedPokemons,\r\n    newMatrix,\r\n    newPokemons,\r\n    connectingLinePoints,\r\n  };\r\n};\r\n\r\nexport const checkCompletedLevel = (pokemons: Record<string, Pokemon>) => {\r\n  return (\r\n    Object.keys(pokemons).length &&\r\n    Object.entries(pokemons).findIndex(\r\n      ([_, pokemon]) => pokemon.matched === false\r\n    ) === -1\r\n  );\r\n};\r\n\r\nexport const hasAnyConnectLine = (\r\n  pokemons: Record<string, Pokemon>,\r\n  matrix: Pokemon[][],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  let foundConnectLine = false;\r\n  let fromPoint: PointCoords | undefined = undefined;\r\n  let toPoint: PointCoords | undefined = undefined;\r\n  const entriesPokemons = Object.entries(pokemons);\r\n\r\n  while (entriesPokemons.length) {\r\n    const entryPokemon = entriesPokemons.pop();\r\n\r\n    if (entryPokemon === undefined) {\r\n      break;\r\n    }\r\n    const [nid, currentPokemon] = entryPokemon;\r\n\r\n    if (currentPokemon.matched === false) {\r\n      foundConnectLine = entriesPokemons.some(([nid, pokemon]) => {\r\n        if (currentPokemon.id === pokemon.id && pokemon.matched === false) {\r\n          const { connected } = hasConnectLine(\r\n            currentPokemon as PointCoords,\r\n            pokemon as PointCoords,\r\n            matrix,\r\n            totalRow,\r\n            totalCol\r\n          );\r\n\r\n          if (connected) {\r\n            if (currentPokemon.rowIndex && currentPokemon.colIndex) {\r\n              fromPoint = {\r\n                rowIndex: currentPokemon.rowIndex,\r\n                colIndex: currentPokemon.colIndex,\r\n              };\r\n            }\r\n            if (pokemon.rowIndex && pokemon.colIndex) {\r\n              toPoint = {\r\n                rowIndex: pokemon.rowIndex,\r\n                colIndex: pokemon.colIndex,\r\n              };\r\n            }\r\n          }\r\n\r\n          return connected;\r\n        }\r\n\r\n        return false;\r\n      });\r\n      if (foundConnectLine) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return { foundConnectLine, fromPoint, toPoint };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}