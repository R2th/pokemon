{"ast":null,"code":"import{checkPointInLine}from\"../../utils/game\";import LineCard from\"./LineCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LineRow=function LineRow(_ref){var cards=_ref.cards,rowIndex=_ref.rowIndex,connectingLinePoints=_ref.connectingLinePoints,suggestPoints=_ref.suggestPoints;return/*#__PURE__*/_jsx(_Fragment,{children:cards.map(function(_,colIndex){return/*#__PURE__*/_jsx(LineCard,{rowIndex:rowIndex,colIndex:colIndex,point:checkPointInLine(connectingLinePoints,{rowIndex:rowIndex,colIndex:colIndex}),suggested:suggestPoints&&suggestPoints.findIndex(function(suggestPoint){return(suggestPoint===null||suggestPoint===void 0?void 0:suggestPoint.rowIndex)===rowIndex&&(suggestPoint===null||suggestPoint===void 0?void 0:suggestPoint.colIndex)===colIndex;})>=0},\"card-\".concat(colIndex));})});};export default LineRow;","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/components/Game/LineRow.tsx"],"names":["checkPointInLine","LineCard","LineRow","cards","rowIndex","connectingLinePoints","suggestPoints","map","_","colIndex","findIndex","suggestPoint"],"mappings":"AAEA,OAASA,gBAAT,KAAiC,kBAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,gGASA,GAAMC,CAAAA,OAAyB,CAAG,QAA5BA,CAAAA,OAA4B,MAK5B,IAJJC,CAAAA,KAII,MAJJA,KAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,oBAEI,MAFJA,oBAEI,CADJC,aACI,MADJA,aACI,CACJ,mBACE,yBACGH,KAAK,CAACI,GAAN,CAAU,SAACC,CAAD,CAAIC,QAAJ,qBACT,KAAC,QAAD,EAEE,QAAQ,CAAEL,QAFZ,CAGE,QAAQ,CAAEK,QAHZ,CAIE,KAAK,CAAET,gBAAgB,CAACK,oBAAD,CAAuB,CAAED,QAAQ,CAARA,QAAF,CAAYK,QAAQ,CAARA,QAAZ,CAAvB,CAJzB,CAKE,SAAS,CACPH,aAAa,EACbA,aAAa,CAACI,SAAd,CACE,SAACC,YAAD,QACE,CAAAA,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEP,QAAd,IAA2BA,QAA3B,EACA,CAAAO,YAAY,OAAZ,EAAAA,YAAY,SAAZ,QAAAA,YAAY,CAAEF,QAAd,IAA2BA,QAF7B,EADF,GAIK,CAXT,iBACeA,QADf,EADS,EAAV,CADH,EADF,CAoBD,CA1BD,CA4BA,cAAeP,CAAAA,OAAf","sourcesContent":["import { FC } from \"react\";\r\nimport { PointCoords, Pokemon } from \"../../types/game\";\r\nimport { checkPointInLine } from \"../../utils/game\";\r\nimport LineCard from \"./LineCard\";\r\n\r\ntype LineRowProps = {\r\n  cards: Pokemon[] | number[];\r\n  rowIndex: number;\r\n  connectingLinePoints: PointCoords[];\r\n  suggestPoints: [PointCoords | undefined, PointCoords | undefined];\r\n};\r\n\r\nconst LineRow: FC<LineRowProps> = ({\r\n  cards,\r\n  rowIndex,\r\n  connectingLinePoints,\r\n  suggestPoints,\r\n}) => {\r\n  return (\r\n    <>\r\n      {cards.map((_, colIndex) => (\r\n        <LineCard\r\n          key={`card-${colIndex}`}\r\n          rowIndex={rowIndex}\r\n          colIndex={colIndex}\r\n          point={checkPointInLine(connectingLinePoints, { rowIndex, colIndex })}\r\n          suggested={\r\n            suggestPoints &&\r\n            suggestPoints.findIndex(\r\n              (suggestPoint) =>\r\n                suggestPoint?.rowIndex === rowIndex &&\r\n                suggestPoint?.colIndex === colIndex\r\n            ) >= 0\r\n          }\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineRow;\r\n"]},"metadata":{},"sourceType":"module"}