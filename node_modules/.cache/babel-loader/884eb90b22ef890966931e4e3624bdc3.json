{"ast":null,"code":"import _objectSpread from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect}from\"react\";import{useSetRecoilState}from\"recoil\";import usePlaySound,{Sound}from\"../../hooks/usePlaySound\";import gameSoundState from\"../../recoil/atoms/gameSoundState\";var EnableSound=function EnableSound(){var _usePlaySound=usePlaySound(Sound.ENABLE),playEnableSound=_usePlaySound.playSound,loadedSound=_usePlaySound.loadedSound;var setSounds=useSetRecoilState(gameSoundState);useEffect(function(){if(loadedSound!==null){setSounds(function(sounds){return _objectSpread(_objectSpread({},sounds),{},{playEnableSound:playEnableSound});});}},[loadedSound,playEnableSound,setSounds]);return null;};export default EnableSound;","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/components/Sound/EnableSound.tsx"],"names":["useEffect","useSetRecoilState","usePlaySound","Sound","gameSoundState","EnableSound","ENABLE","playEnableSound","playSound","loadedSound","setSounds","sounds"],"mappings":"gJAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,iBAAT,KAAkC,QAAlC,CACA,MAAOC,CAAAA,YAAP,EAAuBC,KAAvB,KAAoC,0BAApC,CACA,MAAOC,CAAAA,cAAP,KAA2B,mCAA3B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,kBAAoDH,YAAY,CAC9DC,KAAK,CAACG,MADwD,CAAhE,CAAmBC,eAAnB,eAAQC,SAAR,CAAoCC,WAApC,eAAoCA,WAApC,CAGA,GAAMC,CAAAA,SAAS,CAAGT,iBAAiB,CAACG,cAAD,CAAnC,CACAJ,SAAS,CAAC,UAAM,CACd,GAAIS,WAAW,GAAK,IAApB,CAA0B,CACxBC,SAAS,CAAC,SAACC,MAAD,wCAAkBA,MAAlB,MAA0BJ,eAAe,CAAfA,eAA1B,IAAD,CAAT,CACD,CACF,CAJQ,CAIN,CAACE,WAAD,CAAcF,eAAd,CAA+BG,SAA/B,CAJM,CAAT,CAKA,MAAO,KAAP,CACD,CAXD,CAaA,cAAeL,CAAAA,WAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst EnableSound = () => {\r\n  const { playSound: playEnableSound, loadedSound } = usePlaySound(\r\n    Sound.ENABLE\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playEnableSound }));\r\n    }\r\n  }, [loadedSound, playEnableSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nexport default EnableSound;\r\n"]},"metadata":{},"sourceType":"module"}