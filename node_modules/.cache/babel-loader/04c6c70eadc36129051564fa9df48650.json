{"ast":null,"code":"import _objectSpread from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useRef,useState}from\"react\";import{useTranslation}from\"react-i18next\";import{useRecoilState,useRecoilValue}from\"recoil\";import gameState from\"../../recoil/atoms/gameState\";import playerState from\"../../recoil/atoms/playerState\";import{GameMode,GameStatus,PENALTY_TIME,PENDING_TIME,SUGGEST_TIME}from\"../../types/game\";import{timeConvert}from\"../../utils/time\";import gameOverlayState from\"../../recoil/atoms/gameOverlayState\";import gameSoundState from\"../../recoil/atoms/gameSoundState\";import{useGameActions}from\"../../hooks/useGameActions\";import{hasAnyConnectLine}from\"../../utils/game\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var GameTiming=function GameTiming(_ref){var _ref$hasTiming=_ref.hasTiming,hasTiming=_ref$hasTiming===void 0?false:_ref$hasTiming;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useRecoilValue=useRecoilValue(gameState),status=_useRecoilValue.status,pokemons=_useRecoilValue.pokemons,matrix=_useRecoilValue.matrix,row=_useRecoilValue.row,col=_useRecoilValue.col;var _useRecoilValue2=useRecoilValue(gameSoundState),playRisingPopSound=_useRecoilValue2.playRisingPopSound,playGlugSound=_useRecoilValue2.playGlugSound;var _useRecoilState=useRecoilState(playerState),_useRecoilState2=_slicedToArray(_useRecoilState,2),currentPlayer=_useRecoilState2[0],setPlayer=_useRecoilState2[1];var _useRecoilState3=useRecoilState(gameOverlayState),_useRecoilState4=_slicedToArray(_useRecoilState3,2),connectingLinePoints=_useRecoilState4[0].connectingLinePoints,setGameOverlay=_useRecoilState4[1];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),timingState=_useState2[0],setTimingState=_useState2[1];var timing=useRef(0);var suggestTiming=useRef(0);var pendingTiming=useRef(PENDING_TIME);var _useGameActions=useGameActions(GameMode.SPEED_MODE),startGame=_useGameActions.startGame;// count timing when running, stop when completed\nuseEffect(function(){var timeoutId=undefined;if(status===GameStatus.PENDING&&hasTiming){timing.current=0;}if(status===GameStatus.RUNNING){if(hasTiming){if(suggestTiming.current>=SUGGEST_TIME){var _hasAnyConnectLine=hasAnyConnectLine(pokemons,matrix,row,col),foundConnectLine=_hasAnyConnectLine.foundConnectLine,fromPoint=_hasAnyConnectLine.fromPoint,toPoint=_hasAnyConnectLine.toPoint;if(foundConnectLine){setGameOverlay(function(gameOverlay){return _objectSpread(_objectSpread({},gameOverlay),{},{suggestPoints:[fromPoint,toPoint]});});}suggestTiming.current=0;}}timeoutId=setTimeout(function(){timing.current++;suggestTiming.current++;setTimingState(timingState+1);},1000);}// update timing to make score\nif(status===GameStatus.COMPLETED){if(timeoutId){clearTimeout(timeoutId);}}return function(){timeoutId&&clearTimeout(timeoutId);};},[status,timingState]);useEffect(function(){var intervalId=undefined;if(status===GameStatus.PENDING){if(hasTiming){setGameOverlay(function(gameOverlay){return _objectSpread(_objectSpread({},gameOverlay),{},{suggestPoints:[undefined,undefined]});});}timing.current=0;pendingTiming.current=PENDING_TIME;var countdownEl=document.getElementById(\"count-down-pending-timing\");if(countdownEl)countdownEl.innerText=pendingTiming.current.toString();intervalId=setInterval(function(){if(pendingTiming.current<=1){intervalId&&clearInterval(intervalId);pendingTiming.current=PENDING_TIME;startGame();}else{pendingTiming.current--;}var countdownEl=document.getElementById(\"count-down-pending-timing\");if(countdownEl)countdownEl.innerText=pendingTiming.current.toString();},1000);}if(status===GameStatus.COMPLETED){intervalId&&clearInterval(intervalId);if(hasTiming){suggestTiming.current=0;setPlayer(_objectSpread(_objectSpread({},currentPlayer),{},{playerTiming:timing.current}));}}return function(){suggestTiming.current=0;pendingTiming.current=PENDING_TIME;intervalId&&clearInterval(intervalId);};},[status]);// check rule time\nuseEffect(function(){if(connectingLinePoints.length===1){playGlugSound&&playGlugSound();timing.current+=PENALTY_TIME;}if(connectingLinePoints.length>1){suggestTiming.current=0;playRisingPopSound&&playRisingPopSound();}},[connectingLinePoints]);return/*#__PURE__*/_jsxs(_Fragment,{children:[!hasTiming&&/*#__PURE__*/_jsx(\"div\",{id:\"count-down-pending-timing\",className:\"overlay-pending-timing\",children:pendingTiming.current},\"count-down\"),/*#__PURE__*/_jsxs(\"p\",{className:\"text-center\",children:[t(\"Your time\"),\": \",timeConvert(timing.current)]})]});};export default GameTiming;","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/components/Game/GameTiming.tsx"],"names":["useEffect","useRef","useState","useTranslation","useRecoilState","useRecoilValue","gameState","playerState","GameMode","GameStatus","PENALTY_TIME","PENDING_TIME","SUGGEST_TIME","timeConvert","gameOverlayState","gameSoundState","useGameActions","hasAnyConnectLine","GameTiming","hasTiming","t","status","pokemons","matrix","row","col","playRisingPopSound","playGlugSound","currentPlayer","setPlayer","connectingLinePoints","setGameOverlay","timingState","setTimingState","timing","suggestTiming","pendingTiming","SPEED_MODE","startGame","timeoutId","undefined","PENDING","current","RUNNING","foundConnectLine","fromPoint","toPoint","gameOverlay","suggestPoints","setTimeout","COMPLETED","clearTimeout","intervalId","countdownEl","document","getElementById","innerText","toString","setInterval","clearInterval","playerTiming","length"],"mappings":"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","sourcesContent":["import { FC, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport gameState from \"../../recoil/atoms/gameState\";\r\nimport playerState from \"../../recoil/atoms/playerState\";\r\nimport {\r\n  GameMode,\r\n  GameStatus,\r\n  PENALTY_TIME,\r\n  PENDING_TIME,\r\n  SUGGEST_TIME,\r\n} from \"../../types/game\";\r\nimport { timeConvert } from \"../../utils/time\";\r\nimport gameOverlayState from \"../../recoil/atoms/gameOverlayState\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\nimport { useGameActions } from \"../../hooks/useGameActions\";\r\nimport { hasAnyConnectLine } from \"../../utils/game\";\r\n\r\nconst GameTiming: FC<{ hasTiming: boolean }> = ({ hasTiming = false }) => {\r\n  const { t } = useTranslation();\r\n  const { status, pokemons, matrix, row, col } = useRecoilValue(gameState);\r\n  const { playRisingPopSound, playGlugSound } = useRecoilValue(gameSoundState);\r\n  const [currentPlayer, setPlayer] = useRecoilState(playerState);\r\n  const [{ connectingLinePoints }, setGameOverlay] =\r\n    useRecoilState(gameOverlayState);\r\n  const [timingState, setTimingState] = useState(0);\r\n  const timing = useRef(0);\r\n  const suggestTiming = useRef(0);\r\n  const pendingTiming = useRef(PENDING_TIME);\r\n  const { startGame } = useGameActions(GameMode.SPEED_MODE);\r\n\r\n  // count timing when running, stop when completed\r\n  useEffect(() => {\r\n    let timeoutId: NodeJS.Timeout | undefined = undefined;\r\n\r\n    if (status === GameStatus.PENDING && hasTiming) {\r\n      timing.current = 0;\r\n    }\r\n\r\n    if (status === GameStatus.RUNNING) {\r\n      if (hasTiming) {\r\n        if (suggestTiming.current >= SUGGEST_TIME) {\r\n          const { foundConnectLine, fromPoint, toPoint } = hasAnyConnectLine(\r\n            pokemons,\r\n            matrix,\r\n            row,\r\n            col\r\n          );\r\n          if (foundConnectLine) {\r\n            setGameOverlay((gameOverlay) => ({\r\n              ...gameOverlay,\r\n              suggestPoints: [fromPoint, toPoint],\r\n            }));\r\n          }\r\n          suggestTiming.current = 0;\r\n        }\r\n      }\r\n      timeoutId = setTimeout(() => {\r\n        timing.current++;\r\n        suggestTiming.current++;\r\n        setTimingState(timingState + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    // update timing to make score\r\n    if (status === GameStatus.COMPLETED) {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      timeoutId && clearTimeout(timeoutId);\r\n    };\r\n  }, [status, timingState]);\r\n\r\n  useEffect(() => {\r\n    let intervalId: NodeJS.Timeout | undefined = undefined;\r\n    if (status === GameStatus.PENDING) {\r\n      if (hasTiming) {\r\n        setGameOverlay((gameOverlay) => ({\r\n          ...gameOverlay,\r\n          suggestPoints: [undefined, undefined],\r\n        }));\r\n      }\r\n\r\n      timing.current = 0;\r\n      pendingTiming.current = PENDING_TIME;\r\n      const countdownEl = document.getElementById(\"count-down-pending-timing\");\r\n      if (countdownEl) countdownEl.innerText = pendingTiming.current.toString();\r\n      intervalId = setInterval(() => {\r\n        if (pendingTiming.current <= 1) {\r\n          intervalId && clearInterval(intervalId);\r\n          pendingTiming.current = PENDING_TIME;\r\n          startGame();\r\n        } else {\r\n          pendingTiming.current--;\r\n        }\r\n        const countdownEl = document.getElementById(\r\n          \"count-down-pending-timing\"\r\n        );\r\n        if (countdownEl)\r\n          countdownEl.innerText = pendingTiming.current.toString();\r\n      }, 1000);\r\n    }\r\n\r\n    if (status === GameStatus.COMPLETED) {\r\n      intervalId && clearInterval(intervalId);\r\n      if (hasTiming) {\r\n        suggestTiming.current = 0;\r\n        setPlayer({ ...currentPlayer, playerTiming: timing.current });\r\n      }\r\n    }\r\n    return () => {\r\n      suggestTiming.current = 0;\r\n      pendingTiming.current = PENDING_TIME;\r\n      intervalId && clearInterval(intervalId);\r\n    };\r\n  }, [status]);\r\n\r\n  // check rule time\r\n  useEffect(() => {\r\n    if (connectingLinePoints.length === 1) {\r\n      playGlugSound && playGlugSound();\r\n      timing.current += PENALTY_TIME;\r\n    }\r\n    if (connectingLinePoints.length > 1) {\r\n      suggestTiming.current = 0;\r\n      playRisingPopSound && playRisingPopSound();\r\n    }\r\n  }, [connectingLinePoints]);\r\n\r\n  return (\r\n    <>\r\n      {!hasTiming && (\r\n        <div\r\n          key=\"count-down\"\r\n          id=\"count-down-pending-timing\"\r\n          className=\"overlay-pending-timing\"\r\n        >\r\n          {pendingTiming.current}\r\n        </div>\r\n      )}\r\n      <p className=\"text-center\">\r\n        {t(\"Your time\")}: {timeConvert(timing.current)}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameTiming;\r\n"]},"metadata":{},"sourceType":"module"}