{"ast":null,"code":"import LineRow from\"./Game/LineRow\";import useGameOverlayEngine from\"../hooks/useGameOverlayEngine\";import{jsx as _jsx}from\"react/jsx-runtime\";var GameOverlay=function GameOverlay(_ref){var mode=_ref.mode;var _useGameOverlayEngine=useGameOverlayEngine(mode),connectingLinePoints=_useGameOverlayEngine.connectingLinePoints,suggestPoints=_useGameOverlayEngine.suggestPoints,matrix=_useGameOverlayEngine.matrix,row=_useGameOverlayEngine.row,col=_useGameOverlayEngine.col;var columnCards=new Array(col+2).fill(false);return/*#__PURE__*/_jsx(\"div\",{className:\"game-overlay board-\".concat(row,\"x\").concat(col),children:matrix&&matrix.map(function(_,index){return/*#__PURE__*/_jsx(LineRow,{cards:columnCards,rowIndex:index,connectingLinePoints:connectingLinePoints,suggestPoints:suggestPoints},\"row-\".concat(index));})});};export default GameOverlay;","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/components/GameOverlay.tsx"],"names":["LineRow","useGameOverlayEngine","GameOverlay","mode","connectingLinePoints","suggestPoints","matrix","row","col","columnCards","Array","fill","map","_","index"],"mappings":"AACA,MAAOA,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,+BAAjC,C,2CAOA,GAAMC,CAAAA,WAAiC,CAAG,QAApCA,CAAAA,WAAoC,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACtD,0BACEF,oBAAoB,CAACE,IAAD,CADtB,CAAQC,oBAAR,uBAAQA,oBAAR,CAA8BC,aAA9B,uBAA8BA,aAA9B,CAA6CC,MAA7C,uBAA6CA,MAA7C,CAAqDC,GAArD,uBAAqDA,GAArD,CAA0DC,GAA1D,uBAA0DA,GAA1D,CAGA,GAAMC,CAAAA,WAAW,CAAG,GAAIC,CAAAA,KAAJ,CAAUF,GAAG,CAAG,CAAhB,EAAmBG,IAAnB,CAAwB,KAAxB,CAApB,CAEA,mBACE,YAAK,SAAS,8BAAwBJ,GAAxB,aAA+BC,GAA/B,CAAd,UACGF,MAAM,EACLA,MAAM,CAACM,GAAP,CAAW,SAACC,CAAD,CAAIC,KAAJ,qBACT,KAAC,OAAD,EAEE,KAAK,CAAEL,WAFT,CAGE,QAAQ,CAAEK,KAHZ,CAIE,oBAAoB,CAAEV,oBAJxB,CAKE,aAAa,CAAEC,aALjB,gBACcS,KADd,EADS,EAAX,CAFJ,EADF,CAcD,CApBD,CAsBA,cAAeZ,CAAAA,WAAf","sourcesContent":["import { FC } from \"react\";\r\nimport LineRow from \"./Game/LineRow\";\r\nimport useGameOverlayEngine from \"../hooks/useGameOverlayEngine\";\r\nimport { GameMode } from \"../types/game\";\r\n\r\ntype GameOverlayProps = {\r\n  mode: GameMode;\r\n};\r\n\r\nconst GameOverlay: FC<GameOverlayProps> = ({ mode }) => {\r\n  const { connectingLinePoints, suggestPoints, matrix, row, col } =\r\n    useGameOverlayEngine(mode);\r\n\r\n  const columnCards = new Array(col + 2).fill(false);\r\n\r\n  return (\r\n    <div className={`game-overlay board-${row}x${col}`}>\r\n      {matrix &&\r\n        matrix.map((_, index) => (\r\n          <LineRow\r\n            key={`row-${index}`}\r\n            cards={columnCards}\r\n            rowIndex={index}\r\n            connectingLinePoints={connectingLinePoints}\r\n            suggestPoints={suggestPoints}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOverlay;\r\n"]},"metadata":{},"sourceType":"module"}