{"ast":null,"code":"import{memo}from\"react\";import{useRecoilValue}from\"recoil\";import playerState from\"../../recoil/atoms/playerState\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var Message=function Message(_ref){var message=_ref.message;var _useRecoilValue=useRecoilValue(playerState),playerName=_useRecoilValue.playerName;try{var _JSON$parse=JSON.parse(message),name=_JSON$parse.name,content=_JSON$parse.content,timestamp=_JSON$parse.timestamp;var selfClass=playerName===name?\"self\":\"\";return/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(selfClass),children:[/*#__PURE__*/_jsxs(\"small\",{className:\"message-name\",children:[name.replace(/-.*$/g,\"\"),\" \",/*#__PURE__*/_jsxs(\"em\",{children:[\"(ID: \",name.replace(/^.*-/g,\"\"),\")\"]})]}),/*#__PURE__*/_jsx(\"strong\",{className:\"message-content\",children:content})]});}catch(_unused){return null;}};function isOldMessage(prevProps,nextProps){return prevProps.message===nextProps.message;}export default/*#__PURE__*/memo(Message,isOldMessage);","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/components/Chat/Message.tsx"],"names":["memo","useRecoilValue","playerState","Message","message","playerName","JSON","parse","name","content","timestamp","selfClass","replace","isOldMessage","prevProps","nextProps"],"mappings":"AAAA,OAAaA,IAAb,KAAyB,OAAzB,CACA,OAASC,cAAT,KAA+B,QAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,C,wFAOA,GAAMC,CAAAA,OAAyB,CAAG,QAA5BA,CAAAA,OAA4B,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACjD,oBAAuBH,cAAc,CAACC,WAAD,CAArC,CAAQG,UAAR,iBAAQA,UAAR,CACA,GAAI,CACF,gBAAqCC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAArC,CAAQI,IAAR,aAAQA,IAAR,CAAcC,OAAd,aAAcA,OAAd,CAAuBC,SAAvB,aAAuBA,SAAvB,CACA,GAAMC,CAAAA,SAAS,CAAGN,UAAU,GAAKG,IAAf,CAAsB,MAAtB,CAA+B,EAAjD,CACA,mBACE,aAAK,SAAS,mBAAaG,SAAb,CAAd,wBACE,eAAO,SAAS,CAAC,cAAjB,WACGH,IAAI,CAACI,OAAL,CAAa,OAAb,CAAsB,EAAtB,CADH,kBAC8B,8BAAUJ,IAAI,CAACI,OAAL,CAAa,OAAb,CAAsB,EAAtB,CAAV,OAD9B,GADF,cAIE,eAAQ,SAAS,CAAC,iBAAlB,UAAqCH,OAArC,EAJF,GADF,CAWD,CAAC,cAAM,CACN,MAAO,KAAP,CACD,CACF,CAnBD,CAqBA,QAASI,CAAAA,YAAT,CAAsBC,SAAtB,CAA+CC,SAA/C,CAAwE,CACtE,MAAOD,CAAAA,SAAS,CAACV,OAAV,GAAsBW,SAAS,CAACX,OAAvC,CACD,CAED,2BAAeJ,IAAI,CAACG,OAAD,CAAUU,YAAV,CAAnB","sourcesContent":["import { FC, memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport playerState from \"../../recoil/atoms/playerState\";\r\nimport { dateTimeFromTimestamp } from \"../../utils/time\";\r\n\r\ninterface MessageProps {\r\n  message: string;\r\n}\r\n\r\nconst Message: FC<MessageProps> = ({ message }) => {\r\n  const { playerName } = useRecoilValue(playerState);\r\n  try {\r\n    const { name, content, timestamp } = JSON.parse(message);\r\n    const selfClass = playerName === name ? \"self\" : \"\";\r\n    return (\r\n      <div className={`message ${selfClass}`}>\r\n        <small className=\"message-name\">\r\n          {name.replace(/-.*$/g, \"\")} <em>(ID: {name.replace(/^.*-/g, \"\")})</em>\r\n        </small>\r\n        <strong className=\"message-content\">{content}</strong>\r\n        {/* <small className=\"message-date\">\r\n          <em>{dateTimeFromTimestamp(timestamp)}</em>\r\n        </small> */}\r\n      </div>\r\n    );\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nfunction isOldMessage(prevProps: MessageProps, nextProps: MessageProps) {\r\n  return prevProps.message === nextProps.message;\r\n}\r\n\r\nexport default memo(Message, isOldMessage);\r\n"]},"metadata":{},"sourceType":"module"}