{"ast":null,"code":"import _objectSpread from\"E:/Desktop/game-pikachu-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import BASE_API from\"./CONSTANTS\";var defaultFetchOptions={method:\"POST\",// *GET, POST, PUT, DELETE, etc.\nmode:\"cors\",// no-cors, *cors, same-origin\ncache:\"no-cache\",// *default, no-cache, reload, force-cache, only-if-cached\ncredentials:\"same-origin\",// include, *same-origin, omit\nheaders:{\"Content-Type\":\"application/json\"// 'Content-Type': 'application/x-www-form-urlencoded',\n},redirect:\"follow\",// manual, *follow, error\nreferrerPolicy:\"no-referrer\"// no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n};var getTopRanking=function getTopRanking(mode){return fetch(\"\".concat(BASE_API,\"/rankings?mode=\").concat(mode)).then(function(res){return res.json();}).then(function(response){return response;},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){return error;});};var addNewRanking=function addNewRanking(data){var fetchOptions=_objectSpread(_objectSpread({},defaultFetchOptions),{},{body:JSON.stringify(data)});return fetch(\"\".concat(BASE_API,\"/rankings\"),fetchOptions).then(function(res){return res.json();}).then(function(response){return response;},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){return error;});};var updateNewRanking=function updateNewRanking(id,data){var fetchOptions=_objectSpread(_objectSpread({},defaultFetchOptions),{},{method:\"PUT\",body:JSON.stringify(data)});return fetch(\"\".concat(BASE_API,\"/rankings/\").concat(id),fetchOptions).then(function(res){return res.json();}).then(function(response){return response;},// Note: it's important to handle errors here\n// instead of a catch() block so that we don't swallow\n// exceptions from actual bugs in components.\nfunction(error){return error;});};export{getTopRanking,addNewRanking,updateNewRanking};","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/api/ranking.ts"],"names":["BASE_API","defaultFetchOptions","method","mode","cache","credentials","headers","redirect","referrerPolicy","getTopRanking","fetch","then","res","json","response","error","addNewRanking","data","fetchOptions","body","JSON","stringify","updateNewRanking","id"],"mappings":"gJAEA,MAAOA,CAAAA,QAAP,KAAqB,aAArB,CAqBA,GAAMC,CAAAA,mBAAgC,CAAG,CACvCC,MAAM,CAAE,MAD+B,CACvB;AAChBC,IAAI,CAAE,MAFiC,CAEzB;AACdC,KAAK,CAAE,UAHgC,CAGpB;AACnBC,WAAW,CAAE,aAJ0B,CAIX;AAC5BC,OAAO,CAAE,CACP,eAAgB,kBAChB;AAFO,CAL8B,CASvCC,QAAQ,CAAE,QAT6B,CASnB;AACpBC,cAAc,CAAE,aAAe;AAVQ,CAAzC,CAaA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACN,IAAD,CAAiD,CACrE,MAAOO,CAAAA,KAAK,WAAIV,QAAJ,2BAA8BG,IAA9B,EAAL,CACJQ,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADD,EAEJF,IAFI,CAGH,SAACG,QAAD,QAAcA,CAAAA,QAAd,EAHG,CAIH;AACA;AACA;AACA,SAACC,KAAD,QAAWA,CAAAA,KAAX,EAPG,CAAP,CASD,CAVD,CAYA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,CAAyD,CAC7E,GAAMC,CAAAA,YAAY,gCAAQjB,mBAAR,MAA6BkB,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAnC,EAAlB,CACA,MAAOP,CAAAA,KAAK,WAAIV,QAAJ,cAAyBkB,YAAzB,CAAL,CACJP,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADD,EAEJF,IAFI,CAGH,SAACG,QAAD,QAAcA,CAAAA,QAAd,EAHG,CAIH;AACA;AACA;AACA,SAACC,KAAD,QAAWA,CAAAA,KAAX,EAPG,CAAP,CASD,CAXD,CAaA,GAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CACvBC,EADuB,CAEvBN,IAFuB,CAGgB,CACvC,GAAMC,CAAAA,YAAY,gCACbjB,mBADa,MAEhBC,MAAM,CAAE,KAFQ,CAGhBiB,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAHU,EAAlB,CAKA,MAAOP,CAAAA,KAAK,WAAIV,QAAJ,sBAAyBuB,EAAzB,EAA+BL,YAA/B,CAAL,CACJP,IADI,CACC,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADD,EAEJF,IAFI,CAGH,SAACG,QAAD,QAAcA,CAAAA,QAAd,EAHG,CAIH;AACA;AACA;AACA,SAACC,KAAD,QAAWA,CAAAA,KAAX,EAPG,CAAP,CASD,CAlBD,CAoBA,OAASN,aAAT,CAAwBO,aAAxB,CAAuCM,gBAAvC","sourcesContent":["import { Response } from \"../hooks/useAsync\";\r\nimport { GameMode } from \"../types/game\";\r\nimport BASE_API from \"./CONSTANTS\";\r\n\r\nexport type TopPlayer = {\r\n  _id?: string;\r\n  timing?: number;\r\n  playerName: string;\r\n  mode: GameMode;\r\n  timestamp: number;\r\n};\r\n\r\nexport interface TopPlayersResponse extends Response {\r\n  data: TopPlayer[];\r\n}\r\n\r\nexport interface InsertedTopPlayerResponse extends Response {\r\n  data?: {\r\n    InsertedID: string;\r\n  };\r\n  id: string;\r\n}\r\n\r\nconst defaultFetchOptions: RequestInit = {\r\n  method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n  mode: \"cors\", // no-cors, *cors, same-origin\r\n  cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n  credentials: \"same-origin\", // include, *same-origin, omit\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n  },\r\n  redirect: \"follow\", // manual, *follow, error\r\n  referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n};\r\n\r\nconst getTopRanking = (mode: GameMode): Promise<TopPlayersResponse> => {\r\n  return fetch(`${BASE_API}/rankings?mode=${mode}`)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (response) => response,\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => error\r\n    );\r\n};\r\n\r\nconst addNewRanking = (data: TopPlayer): Promise<InsertedTopPlayerResponse> => {\r\n  const fetchOptions = { ...defaultFetchOptions, body: JSON.stringify(data) };\r\n  return fetch(`${BASE_API}/rankings`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (response) => response,\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => error\r\n    );\r\n};\r\n\r\nconst updateNewRanking = (\r\n  id: string,\r\n  data: TopPlayer\r\n): Promise<InsertedTopPlayerResponse> => {\r\n  const fetchOptions = {\r\n    ...defaultFetchOptions,\r\n    method: \"PUT\",\r\n    body: JSON.stringify(data),\r\n  };\r\n  return fetch(`${BASE_API}/rankings/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (response) => response,\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => error\r\n    );\r\n};\r\n\r\nexport { getTopRanking, addNewRanking, updateNewRanking };\r\n"]},"metadata":{},"sourceType":"module"}