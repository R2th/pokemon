{"ast":null,"code":"import{memo}from\"react\";import{GameStatus}from\"../../types/game\";import{jsx as _jsx}from\"react/jsx-runtime\";var PokemonCard=function PokemonCard(_ref){var _pokemon$image;var pokemon=_ref.pokemon,rowIndex=_ref.rowIndex,colIndex=_ref.colIndex,isSelected=_ref.isSelected,status=_ref.status,selectPokemon=_ref.selectPokemon;var selected=isSelected?\"selected\":\"\";var hidden=pokemon.matched?\"hidden\":\"\";return/*#__PURE__*/_jsx(\"div\",{style:{backgroundImage:\"url(\".concat((_pokemon$image=pokemon.image)!==null&&_pokemon$image!==void 0?_pokemon$image:\"\",\")\")},className:\"pokemon-card \".concat(selected,\" \").concat(hidden),onClick:function onClick(){if(!isSelected&&!pokemon.matched&&status===GameStatus.RUNNING&&pokemon.nid){selectPokemon(pokemon.nid,rowIndex,colIndex);}}});};function propsAreEquals(prevProps,nextProps){return prevProps.pokemon.nid===nextProps.pokemon.nid&&prevProps.pokemon.image===nextProps.pokemon.image&&prevProps.pokemon.matched===nextProps.pokemon.matched&&prevProps.isSelected===nextProps.isSelected&&prevProps.status===nextProps.status;}export default/*#__PURE__*/memo(PokemonCard,propsAreEquals);","map":{"version":3,"sources":["E:/Desktop/game-pikachu-v2/src/components/Game/PokemonCard.tsx"],"names":["memo","GameStatus","PokemonCard","pokemon","rowIndex","colIndex","isSelected","status","selectPokemon","selected","hidden","matched","backgroundImage","image","RUNNING","nid","propsAreEquals","prevProps","nextProps"],"mappings":"AAAA,OAAaA,IAAb,KAAyB,OAAzB,CACA,OAASC,UAAT,KAAoC,kBAApC,C,2CAeA,GAAMC,CAAAA,WAAiC,CAAG,QAApCA,CAAAA,WAAoC,MAOpC,uBANJC,CAAAA,OAMI,MANJA,OAMI,CALJC,QAKI,MALJA,QAKI,CAJJC,QAII,MAJJA,QAII,CAHJC,UAGI,MAHJA,UAGI,CAFJC,MAEI,MAFJA,MAEI,CADJC,aACI,MADJA,aACI,CACJ,GAAMC,CAAAA,QAAQ,CAAGH,UAAU,CAAG,UAAH,CAAgB,EAA3C,CACA,GAAMI,CAAAA,MAAM,CAAGP,OAAO,CAACQ,OAAR,CAAkB,QAAlB,CAA6B,EAA5C,CACA,mBACE,YACE,KAAK,CAAE,CACLC,eAAe,+BAAST,OAAO,CAACU,KAAjB,iDAA0B,EAA1B,KADV,CADT,CAIE,SAAS,wBAAkBJ,QAAlB,aAA8BC,MAA9B,CAJX,CAKE,OAAO,CAAE,kBAAM,CACb,GACE,CAACJ,UAAD,EACA,CAACH,OAAO,CAACQ,OADT,EAEAJ,MAAM,GAAKN,UAAU,CAACa,OAFtB,EAGAX,OAAO,CAACY,GAJV,CAKE,CACAP,aAAa,CAACL,OAAO,CAACY,GAAT,CAAcX,QAAd,CAAwBC,QAAxB,CAAb,CACD,CACF,CAdH,EADF,CAkBD,CA5BD,CA8BA,QAASW,CAAAA,cAAT,CACEC,SADF,CAEEC,SAFF,CAGE,CACA,MACED,CAAAA,SAAS,CAACd,OAAV,CAAkBY,GAAlB,GAA0BG,SAAS,CAACf,OAAV,CAAkBY,GAA5C,EACAE,SAAS,CAACd,OAAV,CAAkBU,KAAlB,GAA4BK,SAAS,CAACf,OAAV,CAAkBU,KAD9C,EAEAI,SAAS,CAACd,OAAV,CAAkBQ,OAAlB,GAA8BO,SAAS,CAACf,OAAV,CAAkBQ,OAFhD,EAGAM,SAAS,CAACX,UAAV,GAAyBY,SAAS,CAACZ,UAHnC,EAIAW,SAAS,CAACV,MAAV,GAAqBW,SAAS,CAACX,MALjC,CAOD,CAED,2BAAeP,IAAI,CAACE,WAAD,CAAcc,cAAd,CAAnB","sourcesContent":["import { FC, memo } from \"react\";\r\nimport { GameStatus, Pokemon } from \"../../types/game\";\r\n\r\ntype PokemonCardProps = {\r\n  pokemon: Pokemon;\r\n  rowIndex: number;\r\n  colIndex: number;\r\n  isSelected: number | boolean;\r\n  status: GameStatus;\r\n  selectPokemon: (\r\n    pokemonId: string,\r\n    rowIndex: number,\r\n    colIndex: number\r\n  ) => void;\r\n};\r\n\r\nconst PokemonCard: FC<PokemonCardProps> = ({\r\n  pokemon,\r\n  rowIndex,\r\n  colIndex,\r\n  isSelected,\r\n  status,\r\n  selectPokemon,\r\n}) => {\r\n  const selected = isSelected ? \"selected\" : \"\";\r\n  const hidden = pokemon.matched ? \"hidden\" : \"\";\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${pokemon.image ?? \"\"})`,\r\n      }}\r\n      className={`pokemon-card ${selected} ${hidden}`}\r\n      onClick={() => {\r\n        if (\r\n          !isSelected &&\r\n          !pokemon.matched &&\r\n          status === GameStatus.RUNNING &&\r\n          pokemon.nid\r\n        ) {\r\n          selectPokemon(pokemon.nid, rowIndex, colIndex);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nfunction propsAreEquals(\r\n  prevProps: PokemonCardProps,\r\n  nextProps: PokemonCardProps\r\n) {\r\n  return (\r\n    prevProps.pokemon.nid === nextProps.pokemon.nid &&\r\n    prevProps.pokemon.image === nextProps.pokemon.image &&\r\n    prevProps.pokemon.matched === nextProps.pokemon.matched &&\r\n    prevProps.isSelected === nextProps.isSelected &&\r\n    prevProps.status === nextProps.status\r\n  );\r\n}\r\n\r\nexport default memo(PokemonCard, propsAreEquals);\r\n"]},"metadata":{},"sourceType":"module"}