{"version":3,"sources":["routes/CONSTANTS.ts","types/game.ts","recoil/atoms/gameSoundState.ts","hooks/useLocalStorage.ts","services/i18n.ts","hooks/useAsync.ts","components/SwitchLanguage.tsx","recoil/atoms/playerState.ts","components/Welcome.tsx","pages/MainPage.tsx","api/CONSTANTS.ts","api/ranking.ts","utils/time.ts","components/Rank/TopList.tsx","components/RankBoard.tsx","recoil/atoms/gameState.ts","utils/game.ts","recoil/atoms/gameOverlayState.ts","recoil/atoms/selectedPokemonsState.ts","recoil/selectors/selectedPokemonsSelector.ts","hooks/useGameActions.ts","pages/SinglePlayerPage.tsx","types/chat.ts","recoil/atoms/messagesState.ts","components/Chat/ChatBox.tsx","components/Chat/Message.tsx","components/Chat/MessagesBox.tsx","api/user.ts","utils/memo.ts","components/Chat/ActivePlayer.tsx","components/Chat/ListActivePlayers.tsx","components/ChatRoom.tsx","pages/MultiPlayerPage.tsx","components/Game/PokemonCard.tsx","components/Game/PokemonRow.tsx","hooks/useGameEngine.ts","components/GameBoard.tsx","components/Game/LineCard.tsx","components/Game/LineRow.tsx","components/GameOverlay.tsx","hooks/useGameOverlayEngine.ts","components/Game/GameLevel.tsx","components/Game/GameTiming.tsx","components/Game/GameTitle.tsx","components/Game/GameReplay.tsx","components/Game/GameSpeedInfo.tsx","pages/SpeedModePage.tsx","components/Game/GameSurvivalTiming.tsx","components/Game/GameSurvivalInfo.tsx","pages/SurvivalModePage.tsx","pages/PlayerPage.tsx","recoil/atoms/toggleSoundState.ts","components/ToggleSound.tsx","components/ToggleMusic.tsx","App.tsx","hooks/usePlaySound.ts","reportWebVitals.ts","assets/sound/menu-open.mp3","assets/sound/disable-sound.mp3","assets/sound/enable-sound.mp3","assets/sound/switch-on.mp3","assets/sound/switch-off.mp3","assets/sound/bite.mp3","assets/sound/fanfare.mp3","assets/sound/glug-a.mp3","assets/sound/rising-pops.mp3","assets/sound/game-completion.wav","assets/sound/gamers-fail-game.mp3","assets/sound/time-limited.wav","assets/sound/levelup.mp3","assets/sound/pop-down.mp3","assets/sound/pop-up-on.mp3","assets/sound/pop-up-off.mp3","assets/sound/you-win.mp3","assets/sound/game-song.mp3","components/Sound/BiteSound.tsx","components/Sound/CompletedGameSound.tsx","components/Sound/OpenMenuSound.tsx","components/Sound/DisableSound.tsx","components/Sound/EnableSound.tsx","components/Sound/FanfareSound.tsx","components/Sound/FailedGameSound.tsx","components/Sound/GameSongSound.tsx","components/Sound/LevelUpSound.tsx","components/Sound/NearlyEndTimeSound.tsx","components/Sound/OffSound.tsx","components/Sound/OnSound.tsx","components/Sound/PopDownSound.tsx","components/Sound/PopUpOffSound.tsx","components/Sound/PopUpOnSound.tsx","components/Sound/YouWinSound.tsx","components/Sound/RisingPopSound.tsx","components/Sound/YoutubeThemeSong.tsx","components/Sound/GlugSound.tsx","components/SoundProvider.tsx","index.tsx"],"names":["Routes","GameSelector","GameMode","GameTypeState","GameStatus","Direction","PointType","GameLevel","gameOptions","LEVEL_1","row","col","LEVEL_2","LEVEL_3","LEVEL_4","LEVEL_5","LEVEL_6","LEVEL_7","LEVEL_8","LEVEL_9","LEVEL_10","LEVEL_11","LEVEL_12","LEVEL_13","LEVEL_14","nextLevel","gameSoundState","atom","key","GAME_SOUND_STATE","default","soundReady","gameSongDuration","playOpenMenuSound","undefined","playEnableSound","playDisableSound","playCompletedGameSound","playFailedGameSound","playBiteSound","playRisingPopSound","playFanfareSound","playGlugSound","playNearlyEndTimeSound","playOffSound","playOnSound","playLevelUpSound","playPopDownSound","playPopUpOnSound","playPopUpOffSound","playYouWinSound","playGameSong","useLocalStorage","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","i18n","use","initReactI18next","init","resources","en","translation","English","Vietnamese","Back","Replay","Language","Level","Welcome","Congratulations","Submit","vi","lng","fallbackLng","interpolation","escapeValue","ResponseStatus","SwitchLanguage","t","useTranslation","useRecoilValue","setStorageValue","changeLanguage","className","onClick","playerState","PLAYER_STATE","rankingId","playerName","playerTiming","player","replace","MainPage","Helmet","charSet","to","SINGLE_PLAYER_PAGE","MULTI_PLAYER_PAGE","BASE_API","defaultFetchOptions","method","mode","cache","credentials","headers","redirect","referrerPolicy","getTopRanking","fetch","then","res","json","response","useAsync","asyncFunction","immediate","IDLE","status","setStatus","setValue","setError","execute","useCallback","PENDING","SUCCESS","catch","ERROR","useEffect","timeConvert","num","minutes","Math","floor","toString","padStart","TopList","topPlayersResponse","data","SPEED_MODE","SPEED_MODE_PAGE","style","width","margin","SURVIVAL_MODE_PAGE","map","index","timing","timestamp","Date","toLocaleString","RankBoard","SURVIVAL_MODE","memo","gameState","GAME_STATE","pokemons","matrix","level","BASE_URL","pokemonList","id","matched","image","shufflePokemonList","nonShuffleList","shuffledPokemonList","sort","random","shuffledlistPokemon","pokemon","nid","nanoid","reShufflePokemonList","arrayPokemons","objectList","arrayList","Object","keys","push","convertObjectToArrayList","makeListPokemons","total","slicePokemonList","slice","nonShufflePokemonList","generatePokemonMatrix","rowSetting","colSetting","newPokemons","totalCol","totalRow","pokemonKeys","pokemonMatrix","borderPoint","pokemonKey","pop","rowIndex","colIndex","hasConnectLine","point1","point2","pathPoints","fromPoint","toPoint","matrixTotalRow","matrixTotalCol","tempMatrix","newMatrix","length","i","cloneMatrix","matrixPoints","matrixTrackingPoints","dRow","dCol","queue","currentPoint","shift","trackedPoints","trackPoint","findPath","connected","checkPointInLine","connectingLinePoints","currentPosition","find","matchingLinePoint","checkConnectionSelectedPokemons","selectedPokemons","newSelectedPokemons","selectedPokemon1","selectedPokemon2","limitRow","limitCol","reduce","newPathPoints","arrayPoints","type","LINE","direction","prevIndex","END","prevPoint","TOP","BOTTOM","LEFT","RIGHT","extraPoint","START","newCurrentPoint","drawPath","hasAnyConnectLine","foundConnectLine","entriesPokemons","entries","entryPokemon","currentPokemon","some","gameOverlayState","GAME_OVERLAY_STATE","suggestPoints","selectedPokemonsState","SELECTED_POKEMONS","selectedPokemonsSelector","selector","SELECTED_POKEMONS_SELECTOR","get","set","newValue","cloneSelectedPokemons","useGameActions","setGame","useSetRecoilState","setPlayer","setSelectedPokemons","resetGameState","useResetRecoilState","resetGameOverlayState","resetSelectedPokemonsState","initGame","replayGame","startGame","prevGame","RUNNING","endGame","COMPLETED","selectPokemon","pokemonId","resetGame","addNewRankingScore","fetchOptions","body","addNewRanking","now","prevPlayer","updateNewRankingScore","updateNewRanking","ChatTypeState","SinglePlayerPage","MAIN_PAGE","messagesState","MESSAGES_STATE","messages","ChatBox","handleSubmit","throttle","setThrottle","onSubmit","event","setTimeout","alert","name","placeholder","autoFocus","autoComplete","Message","message","content","selfClass","isOldMessage","prevProps","nextProps","MessagesBox","messagesBox","document","getElementById","scrollTo","behavior","top","scrollHeight","getActivePlayers","preventReRender","ActivePlayer","areSameProps","ListActivePlayers","activePlayersResponse","timeoutId","clearTimeout","activePlayer","ChatRoom","room","setMessagesState","socketUrl","useWebSocket","reconnectAttempts","reconnectInterval","retryOnError","shouldReconnect","queryParams","username","onMessage","sendJsonMessage","readyState","lastJsonMessage","lastMessage","handleClickSendMessage","messageJson","command","channel","ReadyState","OPEN","preventDefault","inputMessage","currentTarget","setAttribute","trim","removeAttribute","focus","CLOSED","location","reload","MultiPlayerPage","showInDevelopment","PokemonCard","isSelected","selected","hidden","backgroundImage","propsAreEquals","PokemonRow","findIndex","useGameEngine","useLocation","currentPlayer","checkCompletedLevel","levelUp","newShufflePokemons","shuffleMatrix","GameBoard","LineCard","point","suggested","pointClass","suggestedClass","lineRef","useRef","current","classList","remove","ref","LineRow","cards","_","suggestPoint","GameOverlay","useGameOverlayEngine","columnCards","Array","fill","GameTiming","hasTiming","useRecoilState","setGameOverlay","timingState","setTimingState","suggestTiming","pendingTiming","gameOverlay","intervalId","countdownEl","innerText","setInterval","clearInterval","GameTitle","title","GameReplay","action","GameSpeedInfo","SpeedModePage","GameSurvivalTiming","remainTiming","GameSurvivalInfo","SurvivalModePage","PlayerPage","history","useHistory","saveLocalPlayerName","match","newPlayerName","maxLength","toggleSoundState","music","effect","ToggleSound","sound","toggleSound","classSound","prevValue","ToggleMusic","App","Sound","language","prevPlayerName","PLAYER_PAGE","path","exact","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","usePlaySound","defaultConfigSound","interrupt","volume","soundPath","menuOpenSound","BITE","biteSound","COMPLETE_GAME","completeGameSound","DISABLE","disableSound","ENABLE","enableSound","ON","onSound","OFF","offSound","FAIL_GAME","failedGameSound","GLUG","glugSound","FANFARE","fanfareSound","RISING_POP","risingPopSound","NEARLY_END_TIME","nearlyEndTimeSound","LEVEL_UP","levelUpSound","POP_DOWN","popDownSound","POP_UP_ON","popUpOnSound","POP_UP_OFF","popUpOffSound","YOU_WIN","youWinSound","GAME_SONG","gameSongSound","useSound","play","playSound","loadedSound","stopSound","stop","pauseSound","pause","duration","BiteSound","setSounds","sounds","areLoaded","CompletedGameSound","OpenMenuSound","MENU_OPEN","DisableSound","EnableSound","FanfareSound","FailedGameSound","GameSongSound","LevelUpSound","NearlyEndTimeSound","OffSound","OnSound","PopDownSound","PopUpOffSound","PopUpOnSound","YouWinSound","RisingPopSound","YoutubeThemeSong","url","playing","loop","GlugSound","SoundProvider","children","ReactDOM","render","StrictMode"],"mappings":"8KAAYA,E,wFAAAA,K,cAAAA,E,sBAAAA,E,oCAAAA,E,kCAAAA,E,oCAAAA,E,+BAAAA,M,aCEAC,EAmBAC,EA4BAC,EAQAC,EAqBAC,EAOAC,EAiBAC,I,wBApGAN,K,yDAAAA,M,cAmBAC,K,yBAAAA,E,oBAAAA,M,cA4BAC,K,4BAAAA,E,wBAAAA,E,oCAAAA,E,wCAAAA,E,uCAAAA,M,cAQAC,K,kBAAAA,E,kBAAAA,E,sBAAAA,E,iBAAAA,M,cAqBAC,K,YAAAA,E,cAAAA,E,UAAAA,E,iBAAAA,M,cAOAC,K,cAAAA,E,UAAAA,E,aAAAA,M,MAiBAC,Q,iBAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,cAAAA,E,eAwBL,IAAMC,GAAwB,mBAClCD,EAAUE,QAAU,CACnBC,IAAK,EACLC,IAAK,IAH4B,cAKlCJ,EAAUK,QAAU,CACnBF,IAAK,EACLC,IAAK,IAP4B,cASlCJ,EAAUM,QAAU,CACnBH,IAAK,EACLC,IAAK,IAX4B,cAalCJ,EAAUO,QAAU,CACnBJ,IAAK,EACLC,IAAK,IAf4B,cAiBlCJ,EAAUQ,QAAU,CACnBL,IAAK,EACLC,IAAK,IAnB4B,cAqBlCJ,EAAUS,QAAU,CACnBN,IAAK,EACLC,IAAK,IAvB4B,cAyBlCJ,EAAUU,QAAU,CACnBP,IAAK,EACLC,IAAK,IA3B4B,cA6BlCJ,EAAUW,QAAU,CACnBR,IAAK,EACLC,IAAK,IA/B4B,cAiClCJ,EAAUY,QAAU,CACnBT,IAAK,EACLC,IAAK,IAnC4B,cAqClCJ,EAAUa,SAAW,CACpBV,IAAK,EACLC,IAAK,KAvC4B,cAyClCJ,EAAUc,SAAW,CACpBX,IAAK,EACLC,IAAK,KA3C4B,cA6ClCJ,EAAUe,SAAW,CACpBZ,IAAK,EACLC,IAAK,KA/C4B,cAiDlCJ,EAAUgB,SAAW,CACpBb,IAAK,EACLC,IAAK,KAnD4B,cAqDlCJ,EAAUiB,SAAW,CACpBd,IAAK,GACLC,IAAK,KAvD4B,GA2DxBc,GAAS,mBACnBlB,EAAUE,QAAUF,EAAUK,SADX,cAEnBL,EAAUK,QAAUL,EAAUM,SAFX,cAGnBN,EAAUM,QAAUN,EAAUO,SAHX,cAInBP,EAAUO,QAAUP,EAAUQ,SAJX,cAKnBR,EAAUQ,QAAUR,EAAUS,SALX,cAMnBT,EAAUS,QAAUT,EAAUU,SANX,cAOnBV,EAAUU,QAAUV,EAAUW,SAPX,cAQnBX,EAAUW,QAAUX,EAAUY,SARX,cASnBZ,EAAUY,QAAUZ,EAAUa,UATX,cAUnBb,EAAUa,SAAWb,EAAUc,UAVZ,cAWnBd,EAAUc,SAAWd,EAAUe,UAXZ,cAYnBf,EAAUe,SAAWf,EAAUgB,UAZZ,cAanBhB,EAAUgB,SAAWhB,EAAUiB,UAbZ,cAcnBjB,EAAUiB,SAAWjB,EAAUY,SAdZ,GC5JPO,EA1BQC,YAAgB,CACrCC,IAAKzB,EAAc0B,iBACnBC,QAAS,CACPC,YAAY,EACZC,iBAAkB,EAClBC,uBAAmBC,EACnBC,qBAAiBD,EACjBE,sBAAkBF,EAClBG,4BAAwBH,EACxBI,yBAAqBJ,EACrBK,mBAAeL,EACfM,wBAAoBN,EACpBO,sBAAkBP,EAClBQ,mBAAeR,EACfS,4BAAwBT,EACxBU,kBAAcV,EACdW,iBAAaX,EACbY,sBAAkBZ,EAClBa,sBAAkBb,EAClBc,sBAAkBd,EAClBe,uBAAmBf,EACnBgB,qBAAiBhB,EACjBiB,kBAAcjB,KCtBH,SAASkB,EAAgBxB,EAAayB,GAGnD,MAAsCC,oBAAS,WAC7C,IAEE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQ9B,GAEzC,OAAO2B,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAGP,OADAC,QAAQC,IAAIF,GACLR,MATX,mBAAOW,EAAP,KAAoBC,EAApB,KA4BA,MAAO,CAACD,EAdS,SAACE,GAChB,IAEE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EAEnDD,EAAeE,GAEfX,OAAOC,aAAaY,QAAQzC,EAAK+B,KAAKW,UAAUH,IAChD,MAAON,GAEPC,QAAQC,IAAIF,M,oBC5BlBU,IACGC,IAAIC,KACJC,KAAK,CAIJC,UAAW,CACTC,GAAI,CACFC,YAAa,CACXC,QAAS,UACTC,WAAY,aACZC,KAAM,OACNC,OAAQ,SACRC,SAAU,WACVC,MAAO,QACPC,QAAS,UACTC,gBAAiB,kBACjBC,OAAQ,SACR,sBAAuB,sBACvB,sBAAuB,sBACvB,aAAc,aACd,YAAa,YACb,iBAAkB,iBAClB,cAAe,cACf,gBAAiB,gBACjB,eAAgB,eAChB,YAAa,YACb,aAAc,aACd,gBAAiB,gBACjB,iBAAkB,iBAClB,sBAAuB,sBACvB,sBAAuB,sBACvB,wBAAyB,wBACzB,gDACE,gDACF,4DACE,2DACF,2DACE,2DACF,iDACE,iDACF,iDACE,iDACF,kCACE,0CACF,yBAA0B,yBAC1B,uBAAwB,uBACxB,wBAAyB,wBACzB,aAAc,aACd,oBAAqB,oBACrB,6BAA8B,6BAC9B,gCAAiC,gCACjC,mBAAoB,mBACpB,qBAAsB,qBACtB,+BAAgC,iCAGpCC,GAAI,CACFV,YAAa,CACXC,QAAS,iBACTC,WAAY,uBACZC,KAAM,eACNC,OAAQ,qBACRC,SAAU,mBACVC,MAAO,wBACPC,QAAS,mBACTC,gBAAiB,wBACjBC,OAAQ,YACR,sBAAuB,oEACvB,sBACE,8EACF,aAAc,2CACd,YAAa,mCACb,iBAAkB,iCAClB,cAAe,+DACf,gBAAiB,gBACjB,eAAgB,yBAChB,YAAa,0BACb,aAAc,wBACd,gBAAiB,gBACjB,iBAAkB,kCAClB,wBAAyB,kCACzB,sBAAuB,wDACvB,sBAAuB,4DACvB,gDACE,iGACF,2DACE,oHACF,2DACE,+GACF,iDACE,0EACF,iDACE,kEACF,kCACE,iGACF,yBAA0B,4CAC1B,uBAAwB,iDACxB,wBAAyB,gDACzB,aAAc,mCACd,oBAAqB,sCACrB,6BAA8B,kDAC9B,gCAAiC,oEACjC,mBAAoB,oBACpB,qBAAsB,0CACtB,+BAAgC,qEAItCE,IAAK,KACLC,YAAa,KAEbC,cAAe,CACbC,aAAa,KAIJpB,ICzGHqB,EDyGGrB,IAAf,E,OE/FesB,EAnBQ,WACrB,IAAQC,EAAMC,cAAND,EACAlD,EAAiBoD,YAAetE,GAAhCkB,aACR,EAA6BQ,EAAgB,WAAY,MAAzD,mBAAU6C,GAAV,WACMC,EAAiB,SAACV,GACtBjB,EAAK2B,eAAeV,GACpBS,EAAgBT,GAChB5C,GAAgBA,KAGlB,OACE,qBAAIuD,UAAU,kBAAd,UACGL,EAAE,YADL,IACmB,IACjB,wBAAQM,QAAS,kBAAMF,EAAe,OAAtC,SAA8CJ,EAAE,aAFlD,KAEyE,IACvE,wBAAQM,QAAS,kBAAMF,EAAe,OAAtC,SAA8CJ,EAAE,oB,QCRvCO,EATK1E,YAAkB,CACpCC,IAAKzB,EAAcmG,aACnBxE,QAAS,CACPyE,UAAW,GACXC,WAAY,GACZC,aAAc,KCaHrB,EAjBC,WACd,IAAQU,EAAMC,cAAND,EAEFY,EAASV,YAAeK,GAC9B,OACE,qCACE,qBAAIF,UAAU,cAAd,UACGL,EAAE,WADL,KACkB,uBACfY,EAAOF,WAAWG,QAAQ,QAAS,OAEtC,oBAAGR,UAAU,cAAb,iBACOO,EAAOF,WAAWG,QAAQ,QAAS,WCuBjCC,EA5BE,WACf,IAAQd,EAAMC,cAAND,EACA9C,EAAqBgD,YAAetE,GAApCsB,iBAER,OACE,sBAAKmD,UAAU,aAAf,UACE,eAACU,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,+DAEF,sBAAKX,UAAU,aAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAMY,GAAI/G,EAAOgH,mBAAjB,SACE,wBAAQZ,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,qBAGP,cAAC,IAAD,CAAMiB,GAAI/G,EAAOiH,kBAAjB,SACE,wBAAQb,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,oBAGP,cAAC,EAAD,W,OC7BOoB,EAHE,6CCuBXC,EAAmC,CACvCC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAGlBC,SAAU,SACVC,eAAgB,eAGZC,EAAgB,SAACN,GACrB,OAAOO,MAAM,GAAD,OAAIV,EAAJ,0BAA8BG,IACvCQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAAD,OAAcA,KAId,SAACnE,GAAD,OAAWA,O,SN7BL+B,K,kBAAAA,E,cAAAA,E,YAAAA,E,mBAAAA,M,KAQZ,IAwCeqC,EAxCE,SACfC,GAEI,IADJC,IACG,yDACH,EAA4B7E,mBAAyBsC,EAAewC,MAApE,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BhF,mBAA2B,MAArD,mBAAOY,EAAP,KAAcqE,EAAd,KACA,EAA0BjF,mBAAmC,MAA7D,mBAAOO,EAAP,KAAc2E,EAAd,KAKMC,EAAUC,uBAAY,WAI1B,OAHAJ,EAAU1C,EAAe+C,SACzBJ,EAAS,MACTC,EAAS,MACFN,IACJL,MAAK,SAACG,GACDA,GACFO,EAASP,GAEXM,EAAU1C,EAAegD,YAE1BC,OAAM,SAAChF,GACFA,GACF2E,EAAS3E,GAEXyE,EAAU1C,EAAekD,YAE5B,CAACZ,IASJ,OALAa,qBAAU,WACJZ,GACFM,MAED,CAACA,EAASN,IACN,CAAEM,UAASJ,SAAQnE,QAAOL,UO5D5B,SAASmF,EAAYC,GAC1B,GAAIA,GAAO,EACT,MAAO,QAET,IACMC,EAAUD,EAAM,GACtB,OAFcE,KAAKC,MAAMH,EAAM,IAGvBI,WAAWC,SAAS,EAAG,KAC7B,IACAJ,EAAQG,WAAWC,SAAS,EAAG,KCOnC,IAkDeC,EAlDmB,SAAC,GAAqB,IAAD,EAAlB3B,EAAkB,EAAlBA,MAAOP,EAAW,EAAXA,KAClCvB,EAAMC,cAAND,EACA9C,EAAqBgD,YAAetE,GAApCsB,iBACR,EAAqDiF,EAASL,GAAO,GAA7DS,EAAR,EAAQA,OAAemB,EAAvB,EAAgBtF,MAA2BL,EAA3C,EAA2CA,MAE3C,OACE,qCACG2F,GAC6B,OAA5BA,EAAmBC,OAClBpC,IAASnH,EAASwJ,WACjB,cAAC,IAAD,CAAM3C,GAAI/G,EAAO2J,gBAAjB,SACE,wBACEvD,QAAS,kBAAMpD,GAAoBA,KACnC4G,MAAO,CAAEC,MAAO,oBAAqBC,OAAQ,IAF/C,SAIGhE,EAAE,6BAIP,cAAC,IAAD,CAAMiB,GAAI/G,EAAO+J,mBAAjB,SACE,wBACE3D,QAAS,kBAAMpD,GAAoBA,KACnC4G,MAAO,CAAEC,MAAO,oBAAqBC,OAAQ,IAF/C,SAIGhE,EAAE,8BAIX,qBAAIK,UAAU,YAAd,UACGkC,IAAWzC,EAAegD,UAA1B,OAAqCY,QAArC,IAAqCA,OAArC,EAAqCA,EAAoBC,MAAzD,OACCD,QADD,IACCA,GADD,UACCA,EAAoBC,YADrB,aACC,EAA0BO,KACxB,SAACtD,EAAmBuD,GAApB,OACEvD,EAAOwD,QACL,+BACGxD,EAAOF,WADV,MACyBwC,EAAYtC,EAAOwD,QAD5C,KACuD,KDrCjCC,ECsCGzD,EAAOyD,UDrC3B,IAAIC,KAAKD,GAEVE,oBCiCJ,aAAeJ,IDpCxB,IAA+BE,KC2C5B,6BAAKrE,EAAE,kCAERuC,IAAWzC,EAAekD,OAASjF,GAClC,mBAAGsC,UAAU,YAAb,SAA0BtC,WCrD9ByG,EAAY,WAChB,IAAQxE,EAAMC,cAAND,EAER,OACE,sBAAKK,UAAU,kCAAf,UACE,6BAAKL,EAAE,iBACP,sBAAKK,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,6BACE,6BAAKL,EAAE,2BAET,cAAC,EAAD,CACE8B,MAAO,kBAAMD,EAAczH,EAASqK,gBACpClD,KAAMnH,EAASqK,mBAGnB,sBAAKpE,UAAU,MAAf,UACE,6BACE,6BAAKL,EAAE,2BAET,cAAC,EAAD,CACE8B,MAAO,kBAAMD,EAAczH,EAASwJ,aACpCrC,KAAMnH,EAASwJ,uBAQZc,iBAAKF,GAAW,kBAAM,KChBtBG,EAZG9I,YAAgB,CAChCC,IAAKzB,EAAcuK,WACnB5I,QAAS,CACPuG,OAAQjI,EAAWuI,QACnBjI,IAAK,EACLC,IAAK,EACLgK,SAAU,GACVC,OAAQ,GACRC,MAAOtK,EAAUE,W,gBCPfqK,EACJ,6GAESC,EAAyB,CAClC,CAAEC,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,WACrC,CAAEE,GAAI,SAAUC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACrC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,YACtC,CAAEE,GAAI,UAAWC,SAAS,EAAOC,MAAM,GAAD,OAAKJ,EAAL,aAc3BK,EAAqB,SAACC,GACjC,IAAMC,EAAsBD,EAAeE,MAAK,kBAAMnC,KAAKoC,SAAW,MAChEC,EAA+C,GAOrD,OANAH,EAAoBrB,KAAI,SAACyB,GACvB,IAAMC,EAAMC,cAEZ,OADAH,EAAoBE,GAAOD,EACpBA,KAGFD,GAGII,EAAuB,SAACb,GACnC,IAAMc,EAxByB,SAC/BC,GAEA,IAAMC,EAAqB,GAK3B,OAJAC,OAAOC,KAAKH,GAAY9B,KAAI,SAACpI,GAE3B,OADAmK,EAAUG,KAAKJ,EAAWlK,IACnBA,KAEFmK,EAgBeI,CAAyBpB,GAE/C,OAAOI,EAAmBU,IAGfO,GAAmB,SAAC1L,EAAaC,GAC5C,IAOM0L,EAAS3L,EAAMC,EAAO,EACtB2L,EAR8BvB,EAAYO,MAC9C,kBAAMnC,KAAKoC,SAAW,MAOkBgB,MAAM,EAAGF,GAC7CG,EAAqB,sBACtBF,GADsB,YAEtBA,GAFsB,YAGtBA,GAHsB,YAItBA,IAGL,OAAOnB,EAAmBqB,IAGfC,GAAwB,SACnC9B,GAUA,IAPuE,IAFvE+B,EAEsE,uDAFjD,EACrBC,EACsE,uDADjD,GAEfC,EAAW,eAAQjC,GACnBkC,EAAWF,EAAa,EACxBG,EAAWJ,EAAa,EACxBK,EAAcf,OAAOC,KAAKtB,GAC1BqC,EAA6B,GAE1BtM,EAAM,EAAGA,EAAMoM,EAAUpM,IAAO,MACZwB,IAAvB8K,EAActM,KAAoBsM,EAActM,GAAO,IAC3D,IAAK,IAAIC,EAAM,EAAGA,EAAMkM,EAAUlM,IAChC,GACU,IAARD,GACAA,IAAQoM,EAAW,GACX,IAARnM,GACAA,IAAQkM,EAAW,EACnB,CACA,IAAM7B,EAAKW,cACLsB,EAAc,CAAEvB,IAAKV,EAAIA,KAAIC,SAAS,GAC5C+B,EAActM,GAAKwL,KAAKe,OACnB,CACL,IAAMC,EAAaH,EAAYI,MAC/B,GAAID,EAAY,CACd,IAAMzB,EAAO,2BACRmB,EAAYM,IADJ,IAEXxB,IAAKwB,EACLxM,MACAC,QAEFiM,EAAYM,GAAZ,2BACKN,EAAYM,IADjB,IAEEE,SAAU1M,EACV2M,SAAU1M,IAEZqM,EAActM,GAAKwL,KAAKT,KAMhC,MAAO,CAAEuB,gBAAerC,SAAUiC,IAmGvBU,GAAiB,SAC5BC,EACAC,EACA5C,EACAkC,EACAD,GAEA,IAAMY,EA5FgB,SACtBC,EACAC,EACA/C,EACAkC,EACAD,GAQA,IANA,IAAMe,EAAiBd,EAAW,EAC5Be,EAAiBhB,EAAW,EAC5BiB,EApBY,SAAClD,GAInB,IAHA,IAAMmD,EAAY,GACZC,EAASpD,EAAOoD,OAEbC,EAAI,EAAGA,EAAID,EAAQC,IAC1BF,EAAUE,GAAKrD,EAAOqD,GAAG1B,QAG3B,OAAOwB,EAYYG,CAAYtD,GACzBuD,EAA4B,GAC5BC,EAAsD,GAEnDhB,EAAW,EAAGA,EAAWQ,IAAkBR,EAAU,CAC5De,EAAajC,KAAK,IAClBkC,EAAqBlC,KAAK,IAC1B,IAAK,IAAImB,EAAW,EAAGA,EAAWQ,IAAkBR,EAAU,CAC5D,IAAM5B,EAAO,eAAQqC,EAAWV,GAAUC,IAC1Cc,EAAaf,GAAUlB,KAAKT,EAAQR,SACpCmD,EAAqBhB,GAAUlB,UAAKhK,IAGxC,IAAMmM,EAAiB,EAAE,EAAG,EAAG,EAAG,GAC5BC,EAAiB,CAAC,EAAG,EAAG,GAAI,GAC5BC,EAAQ,GAUd,IATAA,EAAMrC,KAAKyB,GACXS,EAAqBT,EAAQP,UAAUO,EAAQN,UAAY,CACzDD,UAAW,EACXC,UAAW,GAGbc,EAAaT,EAAUN,UAAUM,EAAUL,WAAY,EACvDc,EAAaR,EAAQP,UAAUO,EAAQN,WAAY,EAE5CkB,EAAMP,QAAQ,CACnB,IAAMQ,EAAeD,EAAME,QAE3B,GAAID,EAAc,CAChB,IACc,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAcpB,YAAaM,EAAUN,WACzB,OAAZoB,QAAY,IAAZA,OAAA,EAAAA,EAAcnB,YAAaK,EAAUL,SAErC,MAEF,IAAK,IAAIpD,EAAQ,EAAGA,EAAQ,EAAGA,IAG7B,IAFA,IAAImD,EAAmBoB,EAAapB,SAAWiB,EAAKpE,GAChDoD,EAAmBmB,EAAanB,SAAWiB,EAAKrE,GAElDmD,GAAY,GACZA,EAAWQ,GACXP,GAAY,GACZA,EAAWQ,IAC0B,IAArCM,EAAaf,GAAUC,SAE0BnL,IAA7CkM,EAAqBhB,GAAUC,KACjCe,EAAqBhB,GAAUC,GAAYmB,EAC3CD,EAAMrC,KAAK,CAAEkB,WAAUC,cAEzBD,GAAYiB,EAAKpE,GACjBoD,GAAYiB,EAAKrE,IAMzB,IAAMyE,EAA+B,GACjCC,EAAuB,eAAQjB,GAEnC,GAAIU,EAAqBO,EAAWvB,UAAUuB,EAAWtB,UACvD,MAAgC,IAAzBsB,EAAWvB,WAA4C,IAAzBuB,EAAWtB,UAC9CqB,EAAcxC,KAAK,CACjBkB,SAAUuB,EAAWvB,SACrBC,SAAUsB,EAAWtB,WAEvBsB,EAAU,eACJP,EAAqBO,EAAWvB,UAClCuB,EAAWtB,WAMnB,OAAOqB,EAUYE,CAASrB,EAAQC,EAAQ5C,EAAQkC,EAAUD,GAE9D,MAAO,CACLgC,UAAWpB,EAAWO,QAAU,GAAKP,EAAWO,QAAU,EAC1DP,eAISqB,GAAmB,SAC9BC,EACAC,GAEA,IAAQ5B,EAAuB4B,EAAvB5B,SAAUC,EAAa2B,EAAb3B,SAElB,OAAO0B,EAAqBE,MAC1B,SAACC,GAAD,OACEA,EAAkB9B,WAAaA,GAC/B8B,EAAkB7B,WAAaA,MA8GxB8B,GAAkC,SAC7CC,EACAzE,EACAC,EACA8B,EACAC,GAEA,IAAMC,EAAW,eAAQjC,GACnB0E,EAAmB,YAAOD,GAChC,cAA6CC,EAA7C,GAAOC,EAAP,KAAyBC,EAAzB,KACIR,EAAsC,GACtChB,EAAS,YAAOnD,GAEpB,IACkB,OAAhB0E,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB5D,OAAlB,OACA6D,QADA,IACAA,OADA,EACAA,EAAkB7D,MAClBf,EAAS2E,EAAiB5D,KAAKV,KAAOL,EAAS4E,EAAiB7D,KAAKV,GACrE,CACA,MAAkCsC,GAChCgC,EACAC,EACA3E,EACA8B,EACAC,GALMkC,EAAR,EAAQA,UAAWpB,EAAnB,EAAmBA,WAQnB,GAAIoB,EACFE,EArIkB,SACtBtB,EACAX,EACAD,GAEA,IAAM2C,EAAW1C,EAAW,EACtB2C,EAAW5C,EAAW,EAE5B,OAAOY,EAAWiC,QAChB,SAACC,EAAenB,EAAcvE,EAAO2F,GACnC,IAAIC,EAAkBvP,EAAUwP,KAC5BC,OAAmC7N,EAEjC8N,EAAY/F,EAAQ,EAM1B,QAJ+B/H,IAA3B0N,EAHc3F,EAAQ,KAIxB4F,EAAOvP,EAAU2P,KAGfL,EAAYI,GAAY,CAC1B,IAAME,EAAYN,EAAYI,GAC1BE,EAAU9C,SAAWoB,EAAapB,SACpC2C,EAAY1P,EAAU8P,IACbD,EAAU9C,SAAWoB,EAAapB,SAC3C2C,EAAY1P,EAAU+P,OAElBF,EAAU7C,SAAWmB,EAAanB,SACpC0C,EAAY1P,EAAUgQ,KACbH,EAAU7C,SAAWmB,EAAanB,SAC3C0C,EAAY1P,EAAUiQ,MAElBJ,EAAU9C,SAAWoB,EAAapB,SACpC2C,EAAY1P,EAAU8P,IACbD,EAAU9C,SAAWoB,EAAapB,WAC3C2C,EAAY1P,EAAU+P,QAK5B,IAAIG,EAAmC,2BAClC/B,GADkC,IAErCuB,YACAF,KAAMvP,EAAUwP,OAKlB,EAAG,CACD,OAAQS,EAAWR,WACjB,KAAK1P,EAAU+P,OACbG,EAAWnD,WACPmD,EAAWnD,SAAW,IACxBmD,OAAarO,GAGf,MAEF,KAAK7B,EAAU8P,IACbI,EAAWnD,WACPmD,EAAWnD,UAAYoC,IACzBe,OAAarO,GAEf,MAEF,KAAK7B,EAAUgQ,KACbE,EAAWlD,WACPkD,EAAWlD,UAAYoC,IACzBc,OAAarO,GAEf,MAEF,KAAK7B,EAAUiQ,MACbC,EAAWlD,WACPkD,EAAWlD,SAAW,IACxBkD,OAAarO,GAOnB,QAAmBA,IAAfqO,EACF,MAEF,GACEA,EAAWnD,WAAa8C,EAAU9C,UAClCmD,EAAWlD,WAAa6C,EAAU7C,SAElC,MAGFsC,EAAczD,KAAd,eAAwBqE,eACFrO,IAAfqO,QAETV,EAAOvP,EAAUkQ,MAEnB,IAAMC,EAAe,2BAAQjC,GAAR,IAAsBuB,YAAWF,SAItD,OAFAF,EAAczD,KAAKuE,GAEZd,IAET,IA+ByBe,CAASjD,EAAYf,EAAYC,GAExDC,EAAY0C,EAAiB5D,KAA7B,2BACKkB,EAAY0C,EAAiB5D,MADlC,IAEET,SAAS,IAEX2B,EAAY2C,EAAiB7D,KAA7B,2BACKkB,EAAY2C,EAAiB7D,MADlC,IAEET,SAAS,IAOX8C,EAL0BtB,GACxBG,EACAF,EACAC,GAHMK,mBAOR+B,EAAuB,CAAC,CAAE3B,UAAW,EAAGC,UAAW,IAGrDgC,EAAoBrB,OAAS,OAEG,IAA5BoB,EAAiBpB,SACnBqB,EAAoBrB,OAAS,EAC7Be,EAAuB,CAAC,CAAE3B,UAAW,EAAGC,UAAW,KAIvD,MAAO,CACLgC,sBACAtB,YACAnB,cACAmC,yBAaS4B,GAAoB,SAC/BhG,EACAC,EACAkC,EACAD,GAOA,IALA,IAAI+D,GAAmB,EACnBlD,OAAqCxL,EACrCyL,OAAmCzL,EACjC2O,EAAkB7E,OAAO8E,QAAQnG,GAJpC,aAOD,IAAMoG,EAAeF,EAAgB1D,MAErC,QAAqBjL,IAAjB6O,EACF,cAEF,kBAA8BA,EAA9B,GAAYC,GAAZ,WAEA,OAA+B,IAA3BA,EAAe/F,UACjB2F,EAAmBC,EAAgBI,MAAK,YAAqB,IAAD,mBAAbxF,GAAa,WAC1D,GAAIuF,EAAehG,KAAOS,EAAQT,KAA0B,IAApBS,EAAQR,QAAmB,CACjE,IAAQ4D,EAAcvB,GACpB0D,EACAvF,EACAb,EACAkC,EACAD,GALMgC,UAuBR,OAfIA,IACEmC,EAAe5D,UAAY4D,EAAe3D,WAC5CK,EAAY,CACVN,SAAU4D,EAAe5D,SACzBC,SAAU2D,EAAe3D,WAGzB5B,EAAQ2B,UAAY3B,EAAQ4B,WAC9BM,EAAU,CACRP,SAAU3B,EAAQ2B,SAClBC,SAAU5B,EAAQ4B,YAKjBwB,EAGT,OAAO,MAGP,aAhCJ,GARKgC,EAAgB7C,QAAQ,kBAwCzB,MAKN,MAAO,CAAE4C,mBAAkBlD,YAAWC,YCjfzBuD,GARUvP,YAAuB,CAC9CC,IAAKzB,EAAcgR,mBACnBrP,QAAS,CACPiN,qBAAsB,GACtBqC,cAAe,MAAClP,OAAWA,MCChBmP,GALe1P,YAAsB,CAClDC,IAAKzB,EAAcmR,kBACnBxP,QAAS,KCiDIyP,GA/CkBC,YAAS,CACxC5P,IAAK3B,EAAawR,2BAClBC,IAAK,YAEH,OADyBA,EADT,EAAVA,KACuBL,KAG/BM,IAAK,WAAeC,GAAc,IAA1BD,EAAyB,EAAzBA,IAAKD,EAAoB,EAApBA,IACX,EAAsDA,EAAIjH,GAAlD/J,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAK0H,EAAlB,EAAkBA,OAAQuC,EAA1B,EAA0BA,OAAQD,EAAlC,EAAkCA,SAAUE,EAA5C,EAA4CA,MACtCuE,EAAmBsC,EAAIL,IAEvBQ,EAAqB,YAAOzC,GAClCyC,EAAsB3F,KAAK0F,GAE3B,MAKIzC,GACF0C,EACAlH,EACAC,EACAlK,EACAC,GATAoO,EADF,EACEA,qBACAhB,EAFF,EAEEA,UACAnB,EAHF,EAGEA,YACAyC,EAJF,EAIEA,oBASEN,EAAqBf,QAAU,IAC7Be,EAAqBf,OAAS,GAChC2D,EAAIlH,EAAW,CACb/J,MACAC,MACA0H,SACAwC,QACAD,OAAQmD,EACRpD,SAAUiC,IAGd+E,EAAIT,GAAkB,CACpBE,cAAe,MAAClP,OAAWA,GAC3B6M,0BAIJ4C,EAAIN,GAAuBhC,MCrCxB,SAASyC,GAAezK,GAC7B,IAAM0K,EAAUC,YAAkBvH,GAC5BwH,EAAYD,YAAkB3L,GAC9B6L,EAAsBF,YAAkBT,IACxCY,EAAiBC,YAAoB3H,GACrC4H,EAAwBD,YAAoBlB,IAC5CoB,EAA6BF,YAAoBf,IACvD,EACErL,YAAetE,GADTa,EAAR,EAAQA,cAAiCI,GAAzC,EAAuBF,iBAAvB,EAAyCE,wBAkBnC4P,EAAW7J,uBACf,SAACmC,GAA+D,IAA7CxC,EAA4C,uDAAvBjI,EAAWuI,QACjD,EAAqBnI,EAAYqK,GAAzBnK,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACPgK,EAAWyB,GAAiB1L,EAAKC,GACvC,EAAiD8L,GAC/C9B,EACAjK,EACAC,GAHMqM,EAAR,EAAQA,cAAyBJ,EAAjC,EAAuBjC,SAKvBoH,EAAQ,CACNpH,SAAUiC,EACVhC,OAAQoC,EACRnC,QACAnK,MACAC,MACA0H,aAIJ,CAAC0J,IAuDH,MAAO,CACLQ,WACAC,WAtDiB,SAAChM,GAElB+L,EAAShS,EAAUE,UAqDnBgS,UAVgB,WAChBV,GAAQ,SAACW,GAAD,mBAAC,eACJA,GADG,IAENrK,OAAQjI,EAAWuS,cAQrBC,QAlDc,WACVvL,IAASnH,EAASqK,gBACpB5H,GAA0BA,IAC1BoP,GAAQ,SAACW,GAAD,mBAAC,eACJA,GADG,IAENrK,OAAQjI,EAAWyS,iBA8CvBC,cA9FoB,SACpBC,EACA3F,EACAC,GAEA9K,GAAiBA,IACjB2P,EAAoB,CAAExG,IAAKqH,EAAW3F,WAAUC,cAyFhD2F,UAtFgB,WAChBb,IACAE,IACAC,KAoFAW,mBA3CyB,SAAC5L,EAAgBb,IT5BxB,SAACiD,GACrB,IAAMyJ,EAAY,2BAAQ/L,GAAR,IAA6BgM,KAAMxP,KAAKW,UAAUmF,KACpE,OAAO7B,MAAM,GAAD,OAAIV,EAAJ,aAAyBgM,GAClCrL,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAAD,OAAcA,KAId,SAACnE,GAAD,OAAWA,MSyBbuP,CAL+B,CAC7B/L,OACAb,aACA2D,UAAWC,KAAKiJ,QAESxL,MAAK,SAACG,GAC/BiK,GAAU,SAACqB,GAAD,yBAAC,eACNA,GADK,IAER/M,UAAS,UAAEyB,EAASgD,UAAX,QAAiBW,uBAmC9B4H,sBA9B4B,SAC5BvI,EACA3D,EACAb,EACA0D,ITjCqB,SACvBc,EACAvB,GAEA,IAAMyJ,EAAY,2BACb/L,GADa,IAEhBC,OAAQ,MACR+L,KAAMxP,KAAKW,UAAUmF,KAEhB7B,MAAM,GAAD,OAAIV,EAAJ,qBAAyB8D,GAAMkI,GACxCrL,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAAD,OAAcA,KAId,SAACnE,GAAD,OAAWA,KSyBb2P,CAAiBxI,EANc,CAC7B3D,OACAb,aACA0D,SACAC,UAAWC,KAAKiJ,UCvFtB,ICbYI,GD2DGC,GA9CU,WACvB,IAAQ5N,EAAMC,cAAND,EACA9C,EAAqBgD,YAAetE,GAApCsB,iBACAgQ,EAAclB,GAAe5R,EAASqK,eAAtCyI,UAMR,OAJAjK,qBAAU,WACRiK,MACC,CAACA,IAGF,sBAAK7M,UAAU,iBAAf,UACE,eAACU,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,kEAEF,qBAAKX,UAAU,aAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BL,EAAE,mBAC9B,cAAC,EAAD,OAEF,gCACE,cAAC,IAAD,CAAMiB,GAAI/G,EAAO+J,mBAAjB,SACE,wBAAQ3D,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,qBAGP,cAAC,IAAD,CAAMiB,GAAI/G,EAAO2J,gBAAjB,SACE,wBAAQvD,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,kBAGP,cAAC,IAAD,CAAMiB,GAAI/G,EAAO2T,UAAjB,SACE,wBAAQvN,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,eAIT,cAAC,EAAD,W,8BCrDI2N,K,iCAAAA,Q,KAaL,ICHQG,GAPOjS,YAAoB,CACxCC,IAAK6R,GAAcI,eACnB/R,QAAS,CACPgS,SAAU,MC+BCC,GA9BmB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3BlO,EAAMC,cAAND,EACR,EAAgCxC,mBAAS,GAAzC,mBAAO2Q,EAAP,KAAiBC,EAAjB,KAcA,OACE,qBAAK/N,UAAU,WAAf,SACE,sBAAMgO,SAd0C,SAACC,GAC/CH,GACFC,EAAY,GACZF,EAAaI,GACbC,YAAW,WACTH,EAAY,KACX,MAEHI,MAAMxO,EAAE,wBAMR,SACE,uBACEyO,KAAK,UACLC,YAAa1O,EAAE,8BACf2O,WAAS,EACTC,aAAa,aCrBjBC,GAA4B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3BpO,EAAeR,YAAeK,GAA9BG,WACR,IACE,MAAqC7C,KAAKC,MAAMgR,GAAxCL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,QACRC,GADN,EAAuB3K,UACL3D,IAAe+N,EAAO,OAAS,IACjD,OACE,sBAAKpO,UAAS,kBAAa2O,GAA3B,UACE,wBAAO3O,UAAU,eAAjB,UACGoO,EAAK5N,QAAQ,QAAS,IADzB,IAC8B,uCAAU4N,EAAK5N,QAAQ,QAAS,IAAhC,UAE9B,wBAAQR,UAAU,kBAAlB,SAAqC0O,OAMzC,SACA,OAAO,OAIX,SAASE,GAAaC,EAAyBC,GAC7C,OAAOD,EAAUJ,UAAYK,EAAUL,QAG1BpK,sBAAKmK,GAASI,ICNdG,GAvBS,WACtB,IAAQpB,EAAa9N,YAAe4N,IAA5BE,SAYR,OAVA/K,qBAAU,WACR,IAAMoM,EAAcC,SAASC,eAAe,gBACxCF,GACFA,EAAYG,SAAS,CACnBC,SAAU,SACVC,IAAKL,EAAYM,iBAGpB,CAAC3B,EAAS9F,SAGX,qBAAKhD,GAAG,eAAe7E,UAAU,eAAjC,SACG2N,EAAS9J,KACR,SAAC4K,EAAS3K,GAAV,OACE2K,GAAW,cAAC,GAAD,CAAqBA,QAASA,EAAQC,SAAxB5K,SCf7ByL,GAAmB,WACvB,OAAO9N,MAAM,GAAD,OAAIV,EAAJ,WACTW,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GAAD,OAAcA,KAId,SAACnE,GAAD,OAAWA,MCfV,SAAS8R,KACd,OAAO,ECKT,IAAMC,GAAiC,SAAC,GAAoB,IAAlBpP,EAAiB,EAAjBA,WACxC,OACE,qBAAIL,UAAU,gBAAd,UACE,iCAASK,EAAWG,QAAQ,QAAS,MACrC,gCACE,sCAASH,EAAWG,QAAQ,QAAS,aAM7C,SAASkP,GAAab,EAAyBC,GAC7C,OAAOD,EAAUxO,aAAeyO,EAAUzO,WAG7BgE,sBAAKoL,GAAcC,ICf5BC,GAAoB,WAAO,IAAD,EAC9B,EAKI7N,EAAgCyN,IAAkB,GAJpDrN,EADF,EACEA,OACO0N,EAFT,EAEE7R,MAEAuE,GAJF,EAGE5E,MAHF,EAIE4E,SAcF,OAXAM,qBAAU,WACRjF,QAAQC,IAAI,aACZ,IAAMiS,EAAY3B,YAAW,WAC3B5L,MACC,KAEH,OAAO,WACLuN,GAAaC,aAAaD,MAE3B,CAAC3N,IAGF,oBAAIlC,UAAU,qBAAd,SACGkC,IAAWzC,EAAegD,UAA1B,OACCmN,QADD,IACCA,GADD,UACCA,EAAuBtM,YADxB,aACC,EAA6BO,KAC3B,SAACkM,EAAsBjM,GAAvB,OACE,cAAC,GAAD,CACEzD,WAAY0P,GACPA,EAAavP,QAAQ,QAAS,YAQlC6D,kBAAKsL,GAAmBH,IC8DxBQ,GAtFqB,SAAC,GAAa,EAAXC,KAAY,IACzCtQ,EAAMC,cAAND,EACAU,EAAeR,YAAeK,GAA9BG,WACAvD,EAAsB+C,YAAetE,GAArCuB,kBACFoT,EAAmBrE,YAAkB4B,IAC3C,EAAoBtQ,mBAAS,GAAD,OTRH,2CSQG,UAArBgT,EAAP,oBACA,EACEC,KAAaD,EAAW,CACtBE,kBAAmB,GACnBC,kBAAmB,IACnBC,cAAc,EACdC,gBAAiB,kBAAM,GACvBC,YAAa,CACXC,SAAUrQ,GAEZsQ,UAAW,SAAC1C,GACVnR,GAAqBA,OAVnB8T,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,WAAYC,EAArC,EAAqCA,gBAAiBC,EAAtD,EAAsDA,YAkBtDnO,qBAAU,WACRkO,GACEZ,GAAiB,gBAAGvC,EAAH,EAAGA,SAAH,MAAmB,CAClCA,SAAS,GAAD,mBAAMA,GAAN,CAAgBmD,UAE3B,CAACC,IAEJ,IAAMC,EAAyBzO,uBAAY,SAACkM,GAC1C,IAAMwC,EAAc,CAClBC,QAAS,EACTC,QAAS,UACT/C,KAAM/N,EACNqO,QAASD,EACTzK,UAAWC,KAAKiJ,OAGlB0D,EAAgBK,KACf,IAoBH,OACE,qBAAKjR,UAAU,YAAf,SACE,sBAAKA,UAAU,iBAAf,UACG6Q,IAAeO,cAAWC,MACzB,qCACE,sBAAKrR,UAAU,qBAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAS6N,aAzBmC,SAACI,GACvDA,EAAMqD,iBACN,IAAMC,EAAetD,EAAMuD,cAAc/C,QACzC8C,EAAaE,aAAa,WAAY,QACtC,IAAMhD,EAAU8C,EAAaxT,MAAMyC,QACjC,uCACA,KAEEiO,GAA8B,KAAnBA,EAAQiD,QACrBV,EAAuBvC,GACvB8C,EAAaxT,MAAQ,IAErBoQ,MAAMxO,EAAE,8BAEV4R,EAAaI,gBAAgB,YAC7BJ,EAAaK,cAYL,cAAC,GAAD,OAGHf,IAAeO,cAAWS,QACzB,sBAAK7R,UAAU,iBAAf,UACGL,EAAE,iCACH,wBAAQK,UAAU,YAAYC,QAxDb,WACzB5C,OAAOyU,SAASC,UAuDR,SACGpS,EAAE,+BCtCFqS,GA5CS,WACtB,IAAQrS,EAAMC,cAAND,EACR,EAA4CE,YAAetE,GAAnDsB,EAAR,EAAQA,iBAAkBN,EAA1B,EAA0BA,cAEpB0V,EAAoB,WACxB1V,GAAiBA,IACjB4R,MAAMxO,EAAE,oBAGV,OACE,sBAAKK,UAAU,aAAf,UACE,eAACU,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,iEAEF,qBAAKX,UAAU,aAAf,SACE,cAAC,GAAD,CAAUiQ,KAAK,cAEjB,sBAAKjQ,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,aAAd,SAA4BL,EAAE,kBAC9B,cAAC,EAAD,OAEF,8BACE,sBAAKK,UAAU,cAAf,UACE,mBAAGA,UAAU,mBAAb,SAAiCL,EAAE,oBACnC,wBAAQM,QAASgS,EAAjB,SAAqCtS,EAAE,gBACvC,wBAAQM,QAASgS,EAAjB,SACGtS,EAAE,uBAEL,cAAC,IAAD,CAAMiB,GAAI/G,EAAO2T,UAAjB,SACE,wBAAQvN,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,sBAKX,mBAAGK,UAAU,gBAAb,SAA8BL,EAAE,yBAChC,cAAC,EAAD,WCjCFuS,GAAoC,SAAC,GAOpC,IAAD,EANJ5M,EAMI,EANJA,QACA2B,EAKI,EALJA,SACAC,EAII,EAJJA,SACAiL,EAGI,EAHJA,WACAjQ,EAEI,EAFJA,OACAyK,EACI,EADJA,cAEMyF,EAAWD,EAAa,WAAa,GACrCE,EAAS/M,EAAQR,QAAU,SAAW,GAC5C,OACE,qBACErB,MAAO,CACL6O,gBAAgB,OAAD,iBAAShN,EAAQP,aAAjB,QAA0B,GAA1B,MAEjB/E,UAAS,uBAAkBoS,EAAlB,YAA8BC,GACvCpS,QAAS,WAEJkS,GACA7M,EAAQR,SACT5C,IAAWjI,EAAWuS,UACtBlH,EAAQC,KAERoH,EAAcrH,EAAQC,IAAK0B,EAAUC,OAO/C,SAASqL,GACP1D,EACAC,GAEA,OACED,EAAUvJ,QAAQC,MAAQuJ,EAAUxJ,QAAQC,KAC5CsJ,EAAUvJ,QAAQP,QAAU+J,EAAUxJ,QAAQP,OAC9C8J,EAAUvJ,QAAQR,UAAYgK,EAAUxJ,QAAQR,SAChD+J,EAAUsD,aAAerD,EAAUqD,YACnCtD,EAAU3M,SAAW4M,EAAU5M,OAIpBmC,sBAAK6N,GAAaK,ICflBC,GA5ByB,SAAC,GAKlC,IAJLhO,EAII,EAJJA,SACAyC,EAGI,EAHJA,SACA/F,EAEI,EAFJA,KACAgB,EACI,EADJA,OAEM+G,EAAmBpJ,YAAeqL,IAChCyB,EAAkBhB,GAAezK,GAAjCyL,cACR,OACE,mCACGnI,EAASX,KAAI,SAACyB,EAASxB,GAAV,OACZ,cAAC,GAAD,CAEEwB,QAASA,EACT2B,SAAUA,EACVC,SAAUpD,EACVqO,gBACkBpW,IAAhBuJ,EAAQC,KACR0D,EAAiBwJ,WAAU,qBAAGlN,MAAkBD,EAAQC,QAAQ,EAElEoH,cAAeA,EACfzK,OAAQA,GAVV,eACe4B,UCPR,SAAS4O,GAAcxR,GACpC,IAAM4Q,EAAWa,cACjB,EAKI9S,YAAetE,GAHjBoB,GAFF,EACEL,iBADF,EAEEK,kBACAT,EAHF,EAGEA,uBACAa,EAJF,EAIEA,gBAEF,EAMI4O,GAAezK,GALjBkL,EADF,EACEA,SACAC,EAFF,EAEEA,WACAI,EAHF,EAGEA,QACAK,EAJF,EAIEA,mBACAM,EALF,EAKEA,sBAEIxB,EAAUC,YAAkBvH,GAC5BsO,EAAgB/S,YAAeK,GACrC,EACEL,YAAeyE,GADTG,EAAR,EAAQA,OAAQlK,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,IAAK0H,EAA1B,EAA0BA,OAAQsC,EAAlC,EAAkCA,SAAUE,EAA5C,EAA4CA,MAuF5C,OAnEA9B,qBAAU,WAMR,OALIV,IAAWjI,EAAWuI,UAExB4J,EAAS1H,GACToI,EAAmB5L,EAAM0R,EAAcvS,aAElC,eAGN,CAAC6B,EAAQkK,IAGZxJ,qBAAU,WACJV,IAAWjI,EAAWyS,WACpBkG,EAAcxS,WAChBgN,EACEwF,EAAcxS,UACdc,EACA0R,EAAcvS,WACduS,EAActS,gBAInB,CAACsS,EAAcxS,UAAWwS,EAActS,eAG3CsC,qBAAU,WACR,GnBsW+B,SAAC4B,GAClC,OACEqB,OAAOC,KAAKtB,GAAUqD,SAGf,IAFPhC,OAAO8E,QAAQnG,GAAUiO,WACvB,gDAAsC,IAAtC,KAA0B3N,WmB1WxB+N,CAAoBrO,GAAW,CACjC,IAAMsO,EAAqBxX,EAAUoJ,GACjCA,IAAUoO,GAAW5R,IAASnH,EAASqK,eACzCgI,EAAS0G,EAAS7Y,EAAWuS,SAC7BtQ,GAA0BA,KAEtBgF,IAASnH,EAASwJ,aACpBxG,GAAmBA,IACnB6O,EAAQ,CACNnH,SACAlK,MACAC,MACAgK,WACAE,QACAxC,OAAQjI,EAAWyS,iBAIpB,CACL,IAAQjC,EAAqBD,GAC3BhG,EACAC,EACAlK,EACAC,GAJMiQ,iBAMJ5E,OAAOC,KAAKtB,GAAUqD,SAA+B,IAArB4C,KAtElB,SAACjG,GACrB,IAAMuO,EAAqBtN,EAAqBjB,GAChD,EAAiD8B,GAC/CyM,EACAxY,EACAC,GAHMqM,EAAR,EAAQA,cAAyBJ,EAAjC,EAAuBjC,SAKvBoH,EAAQ,CACNpH,SAAUiC,EACVhC,OAAQoC,EACRnC,QACAnK,MACAC,MACA0H,OAAQjI,EAAWuS,UA0DjBwG,CAAcxO,GACd7H,GAAoBA,QAGvB,CAAC6H,IAGJ5B,qBAAU,WACJV,IAAWjI,EAAWuS,SAExBJ,EAAShS,EAAUE,WAEpB,CAACwX,IAEG,CACL1F,WACAC,aACAI,UACAhI,SACAlK,MACAC,MACA0H,SACAwC,SChIJ,IAmBeuO,GAnB2B,SAAC,GAAc,IAAZ/R,EAAW,EAAXA,KAC3C,EAAqCwR,GAAcxR,GAA3CuD,EAAR,EAAQA,OAAQlK,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,IAAK0H,EAA1B,EAA0BA,OAE1B,OACE,qBAAKlC,UAAS,6BAAwBzF,EAAxB,YAA+BC,GAA7C,SACGiK,GACCA,EAAOZ,KAAI,SAACW,EAAUV,GAAX,OACT,cAAC,GAAD,CACE5C,KAAMA,EAEN+F,SAAUnD,EACVU,SAAUA,EACVtC,OAAQA,GALV,cAEc4B,UCJlBoP,GAA8B,SAAC,GAK9B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,UACAnM,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMwC,EAAOyJ,GAASA,EAAMzJ,KAAf,UAAyByJ,EAAMzJ,KAA/B,UAA8C,GACrDE,EACJuJ,GAASA,EAAMvJ,UAAf,UAA8BuJ,EAAMvJ,UAApC,cAA4D,GACxDyJ,EAAaF,EAAK,kBAAcvJ,EAAd,YAA2BF,GAAS,GACtD4J,EAAiBF,EAAS,YAAiBC,EAC3CE,EAAUC,iBAAuB,MAWvC,OAVA5Q,qBAAU,WAOR,OANAsL,YAAW,WACLqF,EAAQE,UACV7J,GAAa2J,EAAQE,QAAQC,UAAUC,OAAO/J,GAC9CF,GAAQ6J,EAAQE,QAAQC,UAAUC,OAAOjK,MAE1C,KACI,eACN,CAAC6J,EAAS3J,EAAWF,IAGtB,qBAAKkK,IAAKL,EAASvT,UAAS,oBAAesT,GAA3C,SACE,mCACGrM,EADH,IACcC,QAMpB,SAASqL,GAAe1D,EAA0BC,GAA2B,IAAD,QAC1E,YAAwB/S,IAApB8S,EAAUsE,YAA2CpX,IAApB+S,EAAUqE,MACtCtE,EAAUuE,YAActE,EAAUsE,UAIzCvE,EAAUuE,YAActE,EAAUsE,YAClC,UAAAvE,EAAUsE,aAAV,eAAiBvJ,cAAjB,UAA+BkF,EAAUqE,aAAzC,aAA+B,EAAiBvJ,aAChD,UAAAiF,EAAUsE,aAAV,eAAiBzJ,SAAjB,UAA0BoF,EAAUqE,aAApC,aAA0B,EAAiBzJ,MAIhCrF,sBAAK6O,GAAUX,ICbfsB,GA5BmB,SAAC,GAK5B,IAJLC,EAII,EAJJA,MACA7M,EAGI,EAHJA,SACA2B,EAEI,EAFJA,qBACAqC,EACI,EADJA,cAEA,OACE,mCACG6I,EAAMjQ,KAAI,SAACkQ,EAAG7M,GAAJ,OACT,cAAC,GAAD,CAEED,SAAUA,EACVC,SAAUA,EACViM,MAAOxK,GAAiBC,EAAsB,CAAE3B,WAAUC,aAC1DkM,UACEnI,GACAA,EAAcwH,WACZ,SAACuB,GAAD,OACc,OAAZA,QAAY,IAAZA,OAAA,EAAAA,EAAc/M,YAAaA,IACf,OAAZ+M,QAAY,IAAZA,OAAA,EAAAA,EAAc9M,YAAaA,MAC1B,GAXT,eACeA,UCbvB,IAsBe+M,GAtB2B,SAAC,GAAa,EAAX/S,KAAY,IACvD,ECLa,SAA8BA,GAC3C,MACErB,YAAekL,IADTnC,EAAR,EAAQA,qBAAsBqC,EAA9B,EAA8BA,cAE9B,EAAqCpL,YAAeyE,GAEpD,MAAO,CACLsE,uBACAqC,gBACAxG,OALF,EAAQA,OAMNlK,IANF,EAAgBA,IAOdC,IAPF,EAAqBA,IAQnB0H,OARF,EAA0BA,QDGxBgS,GADMtL,EAAR,EAAQA,qBAAsBqC,EAA9B,EAA8BA,cAAexG,EAA7C,EAA6CA,OAAQlK,EAArD,EAAqDA,IAAKC,EAA1D,EAA0DA,IAGpD2Z,EAAc,IAAIC,MAAM5Z,EAAM,GAAG6Z,MAAK,GAE5C,OACE,qBAAKrU,UAAS,6BAAwBzF,EAAxB,YAA+BC,GAA7C,SACGiK,GACCA,EAAOZ,KAAI,SAACkQ,EAAGjQ,GAAJ,OACT,cAAC,GAAD,CAEEgQ,MAAOK,EACPlN,SAAUnD,EACV8E,qBAAsBA,EACtBqC,cAAeA,GALjB,cACcnH,UENT1J,GAVG,WAChB,IAAQuF,EAAMC,cAAND,EACA+E,EAAU7E,YAAeyE,GAAzBI,MACR,OACE,qBAAI1E,UAAU,aAAd,UACGL,EAAE,SADL,IACgB+E,EADhB,YC8IW4P,GApIgC,SAAC,GAA2B,IAAD,IAAxBC,iBAAwB,SAChE5U,EAAMC,cAAND,EACR,EAA+CE,YAAeyE,GAAtDpC,EAAR,EAAQA,OAAQsC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,OAAQlK,EAAlC,EAAkCA,IAAKC,EAAvC,EAAuCA,IACvC,EAA8CqF,YAAetE,GAArDc,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,cAC5B,EAAmCiY,YAAetU,GAAlD,mBAAO0S,EAAP,KAAsB9G,EAAtB,KACA,EACE0I,YAAezJ,IADjB,mBAASnC,EAAT,KAASA,qBAAwB6L,EAAjC,KAEA,EAAsCtX,mBAAS,GAA/C,mBAAOuX,EAAP,KAAoBC,EAApB,KACM5Q,EAASyP,iBAAO,GAChBoB,EAAgBpB,iBAAO,GACvBqB,EAAgBrB,iBzCkLI,GyCjLlBlH,EAAcX,GAAe5R,EAASwJ,YAAtC+I,UAuGR,OApGA1J,qBAAU,WACR,IAAIiN,OAAwC9T,EAM5C,GAJImG,IAAWjI,EAAWuI,SAAW+R,IACnCxQ,EAAO0P,QAAU,GAGfvR,IAAWjI,EAAWuS,QAAS,CACjC,GAAI+H,GACEK,EAAcnB,SzCkKE,GyClKuB,CACzC,MAAiDjJ,GAC/ChG,EACAC,EACAlK,EACAC,GAJMiQ,EAAR,EAAQA,iBAAkBlD,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,QAMjCiD,GACFgK,GAAe,SAACK,GAAD,mBAAC,eACXA,GADU,IAEb7J,cAAe,CAAC1D,EAAWC,QAG/BoN,EAAcnB,QAAU,EAG5B5D,EAAY3B,YAAW,WACrBnK,EAAO0P,UACPmB,EAAcnB,UACdkB,EAAeD,EAAc,KAC5B,KAUL,OANIxS,IAAWjI,EAAWyS,WACpBmD,GACFC,aAAaD,GAIV,WACLA,GAAaC,aAAaD,MAE3B,CAAC3N,EAAQwS,IAEZ9R,qBAAU,WACR,IAAImS,OAAyChZ,EAC7C,GAAImG,IAAWjI,EAAWuI,QAAS,CAC7B+R,GACFE,GAAe,SAACK,GAAD,mBAAC,eACXA,GADU,IAEb7J,cAAe,MAAClP,OAAWA,QAI/BgI,EAAO0P,QAAU,EACjBoB,EAAcpB,QzCuHQ,EyCtHtB,IAAMuB,EAAc/F,SAASC,eAAe,6BACxC8F,IAAaA,EAAYC,UAAYJ,EAAcpB,QAAQvQ,YAC/D6R,EAAaG,aAAY,WACnBL,EAAcpB,SAAW,GAC3BsB,GAAcI,cAAcJ,GAC5BF,EAAcpB,QzCiHI,EyChHlBnH,KAEAuI,EAAcpB,UAEhB,IAAMuB,EAAc/F,SAASC,eAC3B,6BAEE8F,IACFA,EAAYC,UAAYJ,EAAcpB,QAAQvQ,cAC/C,KAUL,OAPIhB,IAAWjI,EAAWyS,YACxBqI,GAAcI,cAAcJ,GACxBR,IACFK,EAAcnB,QAAU,EACxB3H,EAAU,2BAAK8G,GAAN,IAAqBtS,aAAcyD,EAAO0P,aAGhD,WACLmB,EAAcnB,QAAU,EACxBoB,EAAcpB,QzC2FQ,EyC1FtBsB,GAAcI,cAAcJ,MAE7B,CAAC7S,IAGJU,qBAAU,WAC4B,IAAhCgG,EAAqBf,SACvBtL,GAAiBA,IACjBwH,EAAO0P,SzCiFe,GyC/EpB7K,EAAqBf,OAAS,IAChC+M,EAAcnB,QAAU,EACxBpX,GAAsBA,OAEvB,CAACuM,IAGF,sCACI2L,GACA,qBAEE1P,GAAG,4BACH7E,UAAU,yBAHZ,SAKG6U,EAAcpB,SAJX,cAOR,oBAAGzT,UAAU,cAAb,UACGL,EAAE,aADL,KACqBkD,EAAYkB,EAAO0P,gBC5H/B2B,GAb0B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClC1V,EAAMC,cAAND,EACAU,EAAeR,YAAeK,GAA9BG,WACA6B,EAAWrC,YAAeyE,GAA1BpC,OACR,OACE,oBAAIlC,UAAU,aAAd,SACGkC,IAAWjI,EAAWyS,UACnB/M,EAAE,mBAAqB,IAAMU,EAAWG,QAAQ,QAAS,IACzD6U,KCAKC,GAV8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtC5V,EAAMC,cAAND,EACAU,EAAeR,YAAeK,GAA9BG,WACR,OACE,4BACE,wBAAQJ,QAAS,kBAAMsV,EAAOlV,IAA9B,SAA4CV,EAAE,eCcrC6V,GAdoC,SAAC,GAA2B,IAAD,IAAxBjB,iBAAwB,SACpE5U,EAAMC,cAAND,EACA0M,EAAeV,GAAe5R,EAASwJ,YAAvC8I,WAER,OACE,sBAAKrM,UAAU,YAAf,UACE,cAAC,GAAD,CAAWqV,MAAO1V,EAAE,gBACpB,cAAC,GAAD,IACA,cAAC,GAAD,CAAY4U,UAAWA,IACvB,cAAC,GAAD,CAAYgB,OAAQlJ,QCgCXoJ,GAtCO,WACpB,IAAQ9V,EAAMC,cAAND,EACAuC,EAAWrC,YAAeyE,GAA1BpC,OACArF,EAAqBgD,YAAetE,GAApCsB,iBAER,OACE,sBAAKmD,UAAU,iBAAf,UACE,eAACU,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,qEAEF,sBAAKX,UAAS,0BAAqBkC,GAAnC,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAahB,KAAMnH,EAASwJ,aAC5B,cAAC,GAAD,CAAWrC,KAAMnH,EAASwJ,gBAE5B,sBAAKvD,UAAU,UAAf,UACE,cAAC,GAAD,CAAeuU,WAAS,IACxB,gCACE,4BAAYvU,UAAU,cAAtB,SACGL,EAAE,mDAEL,4BAAYK,UAAU,cAAtB,SACGL,EAAE,uDAGP,cAAC,IAAD,CAAMiB,GAAI/G,EAAOgH,mBAAjB,SACE,wBAAQZ,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,YAGP,mBAAGK,UAAU,gBAAb,SAA8BL,EAAE,yBAChC,cAAC,EAAD,WCgHO+V,GAzIwC,SAAC,GAEjD,IAAD,IADJnB,iBACI,SACI5U,EAAMC,cAAND,EACR,EAA+CE,YAAeyE,GAAtDpC,EAAR,EAAQA,OAAQsC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,OAAQlK,EAAlC,EAAkCA,IAAKC,EAAvC,EAAuCA,IACvC,EAA8CqF,YAAetE,GAArDc,EAAR,EAAQA,mBAAoBE,EAA5B,EAA4BA,cAC5B,EAAsCY,mBAAS,GAA/C,mBAAOuX,EAAP,KAAoBC,EAApB,KACM5Q,EAASyP,iBAAO,GAChBmC,EAAenC,iB9C8KQ,K8C7KvBqB,EAAgBrB,iB9CiLI,G8ChLpBoB,EAAgBpB,iBAAO,GAC7B,EAAmCgB,YAAetU,GAAlD,mBAAO0S,EAAP,KAAsB9G,EAAtB,KACA,EAA+BH,GAAe5R,EAASqK,eAA/CqI,EAAR,EAAQA,QAASH,EAAjB,EAAiBA,UACjB,EACEkI,YAAezJ,IADjB,mBAASnC,EAAT,KAASA,qBAAwB6L,EAAjC,KA2GA,OAvGA7R,qBAAU,WACR,IAAIiN,OAAwC9T,EAO5C,GALImG,IAAWjI,EAAWuI,SAAW+R,IACnCxQ,EAAO0P,QAAU,EACjBkC,EAAalC,Q9CgKY,K8C7JvBvR,IAAWjI,EAAWuS,QAAS,CACjC,GAAI+H,GACEK,EAAcnB,S9C4JE,G8C5JuB,CACzC,MAAiDjJ,GAC/ChG,EACAC,EACAlK,EACAC,GAJMiQ,EAAR,EAAQA,iBAAkBlD,EAA1B,EAA0BA,UAAWC,EAArC,EAAqCA,QAMjCiD,GACFgK,GAAe,SAACK,GAAD,mBAAC,eACXA,GADU,IAEb7J,cAAe,CAAC1D,EAAWC,QAG/BoN,EAAcnB,QAAU,EAGxBkC,EAAalC,SAAW,EACtBc,GACF9H,IAGFoD,EAAY3B,YAAW,WACrBnK,EAAO0P,UACPmB,EAAcnB,UACdkC,EAAalC,UACbkB,EAAeD,EAAc,KAC5B,KAQP,OAHIxS,IAAWjI,EAAWyS,WACpBmD,GAAWC,aAAaD,GAEvB,WACLA,GAAaC,aAAaD,MAE3B,CAAC3N,EAAQwS,IAEZ9R,qBAAU,WACR,IAAImS,OAAyChZ,EAC7C,GAAImG,IAAWjI,EAAWuI,QAAS,CAC7B+R,GACFE,GAAe,SAACK,GAAD,mBAAC,eACXA,GADU,IAEb7J,cAAe,MAAClP,OAAWA,QAG/BgI,EAAO0P,QAAU,EACjBoB,EAAcpB,Q9C8GQ,E8C7GtB,IAAMuB,EAAc/F,SAASC,eAAe,6BACxC8F,IAAaA,EAAYC,UAAYJ,EAAcpB,QAAQvQ,YAC/D6R,EAAaG,aAAY,WACnBL,EAAcpB,SAAW,GAC3BsB,GAAcI,cAAcJ,GAC5BF,EAAcpB,Q9CwGI,E8CvGlBnH,KAEAuI,EAAcpB,UAEhB,IAAMuB,EAAc/F,SAASC,eAC3B,6BAEE8F,IACFA,EAAYC,UAAYJ,EAAcpB,QAAQvQ,cAC/C,KASL,OANIhB,IAAWjI,EAAWyS,YACxBqI,GAAcI,cAAcJ,GACxBR,GACFzI,EAAU,2BAAK8G,GAAN,IAAqBtS,aAAcyD,EAAO0P,YAGhD,WACLoB,EAAcpB,Q9CoFQ,E8CnFtBsB,GAAcI,cAAcJ,MAE7B,CAAC7S,IAGJU,qBAAU,WAC4B,IAAhCgG,EAAqBf,SACvBtL,GAAiBA,IACjBoZ,EAAalC,S9C0ES,G8CxEpB7K,EAAqBf,OAAS,IAChCxL,GAAsBA,IACtBsZ,EAAalC,S9CqEO,E8CpEpBmB,EAAcnB,QAAU,KAEzB,CAAC7K,IAGF,sCACI2L,GACA,qBAAK1P,GAAG,4BAA4B7E,UAAU,yBAA9C,SACG6U,EAAcpB,UAGnB,oBAAGzT,UAAU,cAAb,UACGL,EAAE,aADL,KACqBkD,EAAYkB,EAAO0P,YAExC,oBAAGzT,UAAU,cAAb,UACGL,EAAE,kBADL,KAC0BkD,EAAY8S,EAAalC,gBC9H1CmC,GAhBuC,SAAC,GAEhD,IAAD,IADJrB,iBACI,SACI5U,EAAMC,cAAND,EACA0M,EAAeV,GAAe5R,EAASqK,eAAvCiI,WAER,OACE,sBAAKrM,UAAU,YAAf,UACE,cAAC,GAAD,CAAWqV,MAAO1V,EAAE,mBACpB,cAAC,GAAD,IACA,cAAC,GAAD,CAAoB4U,UAAWA,IAC/B,cAAC,GAAD,CAAYgB,OAAQlJ,QCkCXwJ,GAzCU,WACvB,IAAQlW,EAAMC,cAAND,EACAuC,EAAWrC,YAAeyE,GAA1BpC,OACArF,EAAqBgD,YAAetE,GAApCsB,iBAER,OACE,sBAAKmD,UAAU,iBAAf,UACE,eAACU,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,wEAEF,sBAAKX,UAAS,0BAAqBkC,GAAnC,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAahB,KAAMnH,EAASqK,gBAC5B,cAAC,GAAD,CAAWlD,KAAMnH,EAASqK,mBAE5B,sBAAKpE,UAAU,UAAf,UACE,cAAC,GAAD,CAAkBuU,WAAS,IAC3B,gCACE,4BAAYvU,UAAU,cAAtB,SACGL,EAAE,8DAEL,4BAAYK,UAAU,cAAtB,SACGL,EAAE,8DAEL,4BAAYK,UAAU,cAAtB,SACGL,EAAE,uDAGP,cAAC,IAAD,CAAMiB,GAAI/G,EAAOgH,mBAAjB,SACE,wBAAQZ,QAAS,kBAAMpD,GAAoBA,KAA3C,SACG8C,EAAE,YAGP,mBAAGK,UAAU,gBAAb,SAA8BL,EAAE,yBAChC,cAAC,EAAD,WCSOmW,GA9CI,WACjB,IAAQnW,EAAMC,cAAND,EACFoW,EAAUC,cACVlK,EAAYD,YAAkB3L,GACpC,EAAiCjD,EAAgB,aAAc,IAA/D,mBAAUgZ,GAAV,WAmBA,OACE,sBAAKjW,UAAU,aAAf,UACE,eAACU,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,iEAEF,gCACE,uBAAMqN,SAxB4C,SAACC,GACvDA,EAAMqD,iBACN,IAAMjR,EAAa4N,EAAMuD,cAAcnR,WAAWtC,MAClD,GAAIsC,GAAoC,KAAtBA,EAAWqR,OAC3B,GAAIrR,EAAW6V,MAAM,sBAAuB,CAC1C,IAAMC,EAAgB9V,EAAa,IAAMmF,YAAO,GAChDyQ,EAAoBE,GACpBrK,EAAU,CAAEzL,WAAY8V,EAAe7V,aAAc,IACrDyV,EAAQhQ,KAAKlM,EAAO2T,gBAEpBW,MAAMxO,EAAE,yCAGVwO,MAAMxO,EAAE,4BAWN,UACE,uBACEyO,KAAK,aACLE,WAAS,EACTD,YAAa1O,EAAE,wBACfyW,UAAW,GACX7H,aAAa,QAEf,iCAAS5O,EAAE,eAEb,cAAC,EAAD,WCzCO0W,GARU7a,YAAwC,CAC/DC,IAAK,eACLE,QAAS,CACP2a,MAAO,EACPC,OAAQ,KCqBGC,GAvBK,WAClB,MAA6BhC,YAAe6B,IAA5C,mBAAOI,EAAP,KAAcC,EAAd,KACQza,EAAqB4D,YAAetE,GAApCU,iBACF0a,EAAaF,EAAMF,OAAS,qBAAuB,mBAEzD,OACE,qBACEvW,UAAU,sBACVC,QAAS,WACPyW,GAAY,SAACE,GAAD,mBAAC,eACRA,GADO,IAEVL,OAA6B,IAArBK,EAAUL,OAAe,EAAI,OAEnCE,GACFxa,GAAoBA,KAR1B,SAYE,mBAAG+D,UAAW2W,OCALE,GAnBK,WAClB,MAA6BrC,YAAe6B,IAA5C,mBAAOI,EAAP,KAAcC,EAAd,KACMC,EAAaF,EAAMH,MAAQ,aAAe,cAEhD,OACE,qBACEtW,UAAU,sBACVC,QAAS,WACPyW,GAAY,SAACE,GAAD,mBAAC,eACRA,GADO,IAEVN,MAA2B,IAApBM,EAAUN,MAAc,EAAI,QALzC,SASE,mBAAGtW,UAAS,sBAAiB2W,QC6EpBG,ICtEHC,GDsEGD,GA3Ef,WACE,IAAQnX,EAAMC,cAAND,EACA/D,EAAeiE,YAAetE,GAA9BK,WACFma,EAAUC,cAChB,EAAmCxB,YAAetU,GAAlD,mBAAO0S,EAAP,KAAsB9G,EAAtB,KACA,EAAmB7O,EAAgB,WAAY,MAAxC+Z,EAAP,oBACA,EAA8C/Z,EAC5C,aACA,IAFF,mBAAOga,EAAP,KAAuBhB,EAAvB,KA+BA,OA1BArT,qBAAU,WACRxE,EAAK2B,eAAeiX,KACnB,CAACA,IAEJpU,qBAAU,WAENqU,GACmB,KAAnBA,GACAA,EAAezW,QAAQ,QAAS,IAAI0V,MAAM,sBAGJ,KAApCtD,EAAcvS,WAAWqR,QACzBkB,EAAcvS,WACXG,QAAQ,QAAS,IACjB0V,MAAM,sBAETpK,EAAU,CAAEzL,WAAYuS,EAAcvS,WAAYC,aAAc,IAEhEwL,EAAU,CAAEzL,WAAY4W,EAAgB3W,aAAc,KAGxD2V,EAAoB,IACpBF,EAAQhQ,KAAKlM,EAAOqd,gBAErB,CAACD,IAGF,sBAAKjX,UAAU,MAAf,UACGpE,GACC,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,QAGFA,GAAc,6BAAK+D,EAAE,2BACtB/D,GACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOub,KAAMtd,EAAO2T,UAAW4J,OAAK,EAApC,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAMtd,EAAOgH,mBAAoBuW,OAAK,EAA7C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAMtd,EAAOiH,kBAAmBsW,OAAK,EAA5C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAMtd,EAAO2J,gBAAiB4T,OAAK,EAA1C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAMtd,EAAO+J,mBAAoBwT,OAAK,EAA7C,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAMtd,EAAOqd,YAAaE,OAAK,EAAtC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACE,cAAC,EAAD,aExEGE,GAZS,SAACC,GACnBA,GAAeA,aAAuBrZ,UACxC,6BAAqByD,MAAK,YAAkD,IAA/C6V,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,O,SCTC,OAA0B,sCCA1B,OAA0B,0CCA1B,OAA0B,yCCA1B,OAA0B,sCCA1B,OAA0B,uCCA1B,OAA0B,iCCA1B,OAA0B,oCCA1B,OAA0B,mCCA1B,OAA0B,wCCA1B,OAA0B,4CCA1B,OAA0B,6CCA1B,OAA0B,yCCA1B,OAA0B,oCCA1B,OAA0B,qCCA1B,OAA0B,sCCA1B,OAA0B,uCCA1B,OAA0B,oCCA1B,OAA0B,sCnBuD1B,SAASM,GAAanB,GACnC,MAA0B5W,YAAewW,IAAjCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACTsB,EAAmC,CACvCC,WAAW,EACXC,OAAQxB,GAENyB,EAAYC,GAChB,GAAIxB,EACF,OAAQA,GACN,KAAKM,GAAMmB,KACTF,EAAYG,GACZ,MACF,KAAKpB,GAAMqB,cACTJ,EAAYK,GACZ,MACF,KAAKtB,GAAMuB,QACTN,EAAYO,GACZ,MACF,KAAKxB,GAAMyB,OACTR,EAAYS,GACZ,MACF,KAAK1B,GAAM2B,GACTV,EAAYW,GACZ,MACF,KAAK5B,GAAM6B,IACTZ,EAAYa,GACZ,MACF,KAAK9B,GAAM+B,UACTd,EAAYe,GACZ,MACF,KAAKhC,GAAMiC,KACThB,EAAYiB,GACZ,MACF,KAAKlC,GAAMmC,QACTlB,EAAYmB,GACZ,MACF,KAAKpC,GAAMqC,WACTpB,EAAYqB,GACZ,MACF,KAAKtC,GAAMuC,gBACTtB,EAAYuB,GACZ,MACF,KAAKxC,GAAMyC,SACTxB,EAAYyB,GACZ,MACF,KAAK1C,GAAM2C,SACT1B,EAAY2B,GACZ,MACF,KAAK5C,GAAM6C,UACT5B,EAAY6B,GACZ,MACF,KAAK9C,GAAM+C,WACT9B,EAAY+B,GACZ,MACF,KAAKhD,GAAMiD,QACThC,EAAYiC,GACZ,MACF,KAAKlD,GAAMmD,UACTlC,EAAYmC,GAEZ,MACF,QACEnC,EAAYC,GAKlB,MAGImC,aAASpC,EAAWH,GAHxB,mBACEwC,EADF,YAKA,MAAO,CACLC,UAAWD,EACXE,YAPF,EAEI9D,MAMF+D,UARF,EAEwBC,KAOtBC,WATF,EAEyCC,MAQvCC,SAVF,EAE4DA,SAS1DtE,QACAC,W,SA9GQQ,K,sBAAAA,E,YAAAA,E,kBAAAA,E,gBAAAA,E,QAAAA,E,UAAAA,E,kBAAAA,E,YAAAA,E,wBAAAA,E,8BAAAA,E,sBAAAA,E,kCAAAA,E,oBAAAA,E,oBAAAA,E,sBAAAA,E,wBAAAA,E,kBAAAA,E,uBAAAA,Q,KoBnBZ,IAAM8D,GAAY,WAChB,MAAkDjD,GAAab,GAAMmB,MAAlD9b,EAAnB,EAAQke,UAA0BC,EAAlC,EAAkCA,YAC5BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B3e,uBAErC,CAACme,EAAane,EAAe0e,IACzB,MAGT,SAASE,KACP,OAAO,EAGM3W,sBAAKwW,GAAWG,ICFhBC,GAbY,WACzB,MAA2DrD,GACzDb,GAAMqB,eADWlc,EAAnB,EAAQoe,UAAmCC,EAA3C,EAA2CA,YAGrCO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B7e,gCAErC,CAACqe,EAAaO,EAAW5e,IACrB,MCGMgf,GAbO,WACpB,MAAsDtD,GACpDb,GAAMoE,WADWrf,EAAnB,EAAQwe,UAA8BC,EAAtC,EAAsCA,YAGhCO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bjf,2BAErC,CAACye,EAAaO,EAAWhf,IACrB,MCGMsf,GAbM,WACnB,MAAqDxD,GACnDb,GAAMuB,SADWrc,EAAnB,EAAQqe,UAA6BC,EAArC,EAAqCA,YAG/BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B9e,0BAErC,CAACse,EAAate,EAAkB6e,IAC5B,MCGMO,GAbK,WAClB,MAAoDzD,GAClDb,GAAMyB,QADWxc,EAAnB,EAAQse,UAA4BC,EAApC,EAAoCA,YAG9BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B/e,yBAErC,CAACue,EAAave,EAAiB8e,IAC3B,MCGMQ,GAbM,WACnB,MAAqD1D,GACnDb,GAAMmC,SADW5c,EAAnB,EAAQge,UAA6BC,EAArC,EAAqCA,YAG/BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bze,0BAErC,CAACie,EAAaO,EAAWxe,IACrB,MCGMif,GAbS,WACtB,MAAwD3D,GACtDb,GAAM+B,WADW3c,EAAnB,EAAQme,UAAgCC,EAAxC,EAAwCA,YAGlCO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B5e,6BAErC,CAACoe,EAAaO,EAAW3e,IACrB,MCYMqf,GAtBO,WACpB,MAII5D,GAAab,GAAMmD,WAHVld,EADb,EACEsd,UACAC,EAFF,EAEEA,YACAK,EAHF,EAGEA,SAEIE,EAAYjP,YAAkBtQ,GAapC,OAXAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eACNA,GADK,IAERnf,YAAY,EACZC,iBAAgB,OAAE+e,QAAF,IAAEA,IAAY,EAC9B5d,sBAGH,CAACud,IAEG,MCNMkB,GAbM,WACnB,MAAqD7D,GACnDb,GAAMyC,UADW7c,EAAnB,EAAQ2d,UAA6BC,EAArC,EAAqCA,YAG/BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bpe,0BAErC,CAAC4d,EAAaO,EAAWne,IACrB,MCGM+e,GAbY,WACzB,MAA2D9D,GACzDb,GAAMuC,iBADW9c,EAAnB,EAAQ8d,UAAmCC,EAA3C,EAA2CA,YAGrCO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bve,gCAErC,CAAC+d,EAAaO,EAAWte,IACrB,MCCMmf,GAXE,WACf,MAAiD/D,GAAab,GAAM6B,KAAjDnc,EAAnB,EAAQ6d,UAAyBC,EAAjC,EAAiCA,YAC3BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bte,sBAErC,CAAC8d,EAAa9d,EAAcqe,IACxB,MCGMc,GAXC,WACd,MAAgDhE,GAAab,GAAM2B,IAAhDhc,EAAnB,EAAQ4d,UAAwBC,EAAhC,EAAgCA,YAC1BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bre,qBAErC,CAAC6d,EAAa7d,EAAaoe,IACvB,MCKMe,GAbM,WACnB,MAAqDjE,GACnDb,GAAM2C,UADW9c,EAAnB,EAAQ0d,UAA6BC,EAArC,EAAqCA,YAG/BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bne,0BAErC,CAAC2d,EAAaO,EAAWle,IACrB,MCGMkf,GAbO,WACpB,MAAsDlE,GACpDb,GAAM+C,YADWhd,EAAnB,EAAQwd,UAA8BC,EAAtC,EAAsCA,YAGhCO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bje,2BAErC,CAACyd,EAAaO,EAAWhe,IACrB,MCGMif,GAbM,WACnB,MAAqDnE,GACnDb,GAAM6C,WADW/c,EAAnB,EAAQyd,UAA6BC,EAArC,EAAqCA,YAG/BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Ble,0BAErC,CAAC0d,EAAaO,EAAWje,IACrB,MCGMmf,GAbK,WAClB,MAAoDpE,GAClDb,GAAMiD,SADWjd,EAAnB,EAAQud,UAA4BC,EAApC,EAAoCA,YAG9BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bhe,yBAErC,CAACwd,EAAaxd,EAAiB+d,IAC3B,MCGMmB,GAbQ,WACrB,MAAuDrE,GACrDb,GAAMqC,YADW/c,EAAnB,EAAQie,UAA+BC,EAAvC,EAAuCA,YAGjCO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0B1e,4BAErC,CAACke,EAAale,EAAoBye,IAC9B,M,oBCEMoB,GAbU,WACvB,IAAQ5F,EAAUzW,YAAewW,IAAzBC,MACR,OACE,qBAAKtW,UAAU,aAAf,SACE,cAAC,KAAD,CACEmc,IAAI,8CACJC,UAAS9F,EACT+F,MAAI,OCKGC,GAXG,WAChB,MAAkD1E,GAAab,GAAMiC,MAAlDzc,EAAnB,EAAQ+d,UAA0BC,EAAlC,EAAkCA,YAC5BO,EAAYjP,YAAkBtQ,GAMpC,OALAqH,qBAAU,WACY,OAAhB2X,GACFO,GAAU,SAACC,GAAD,mBAAC,eAAiBA,GAAlB,IAA0Bxe,uBAErC,CAACge,EAAaO,EAAWve,IACrB,MCmCMggB,GA3BW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACCA,MClCPC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,GAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKR1N,SAASC,eAAe,SAM1BmI,O","file":"static/js/main.b6862ef1.chunk.js","sourcesContent":["export enum Routes {\r\n  MAIN_PAGE = \"/\",\r\n  PLAYER_PAGE = \"/player\",\r\n  SINGLE_PLAYER_PAGE = \"/single-player\",\r\n  MULTI_PLAYER_PAGE = \"/multi-player\",\r\n  SURVIVAL_MODE_PAGE = \"/survival-mode\",\r\n  SPEED_MODE_PAGE = \"/speed-mode\",\r\n}\r\n","import { PlayFunction } from \"use-sound/dist/types\";\r\n\r\nexport enum GameSelector {\r\n  SELECTED_POKEMONS_SELECTOR = \"SELECTED_POKEMONS_SELECTOR\",\r\n}\r\n\r\nexport interface PlayerState {\r\n  rankingId?: string;\r\n  playerName: string;\r\n  playerTiming: number;\r\n}\r\n\r\nexport interface Pokemon {\r\n  id: string;\r\n  matched: boolean;\r\n  nid?: string;\r\n  image?: string;\r\n  rowIndex?: number;\r\n  colIndex?: number;\r\n}\r\n\r\nexport enum GameMode {\r\n  SURVIVAL_MODE = \"survival\",\r\n  SPEED_MODE = \"speed\",\r\n}\r\n\r\nexport interface GameSound {\r\n  soundReady: boolean;\r\n  gameSongDuration: number;\r\n  playOpenMenuSound?: PlayFunction;\r\n  playDisableSound?: PlayFunction;\r\n  playEnableSound?: PlayFunction;\r\n  playCompletedGameSound?: PlayFunction;\r\n  playFailedGameSound?: PlayFunction;\r\n  playBiteSound?: PlayFunction;\r\n  playOnSound?: PlayFunction;\r\n  playOffSound?: PlayFunction;\r\n  playGlugSound?: PlayFunction;\r\n  playFanfareSound?: PlayFunction;\r\n  playRisingPopSound?: PlayFunction;\r\n  playNearlyEndTimeSound?: PlayFunction;\r\n  playLevelUpSound?: PlayFunction;\r\n  playPopUpOnSound?: PlayFunction;\r\n  playPopUpOffSound?: PlayFunction;\r\n  playPopDownSound?: PlayFunction;\r\n  playYouWinSound?: PlayFunction;\r\n  playGameSong?: PlayFunction;\r\n}\r\n\r\nexport enum GameTypeState {\r\n  PLAYER_STATE = \"PLAYER_STATE\",\r\n  GAME_STATE = \"GAME_STATE\",\r\n  GAME_SOUND_STATE = \"GAME_SOUND_STATE\",\r\n  GAME_OVERLAY_STATE = \"GAME_OVERLAY_STATE\",\r\n  SELECTED_POKEMONS = \"SELECTED_POKEMONS\",\r\n}\r\n\r\nexport enum GameStatus {\r\n  RUNNING = \"running\",\r\n  PENDING = \"pending\",\r\n  COMPLETED = \"completed\",\r\n  FAILED = \"failed\",\r\n}\r\n\r\nexport interface GameState {\r\n  status: GameStatus;\r\n  row: number;\r\n  col: number;\r\n  pokemons: Record<string, Pokemon>;\r\n  matrix: Pokemon[][];\r\n  level: GameLevel;\r\n}\r\n\r\nexport interface GameOverlayState {\r\n  connectingLinePoints: PointCoords[];\r\n  suggestPoints: [PointCoords | undefined, PointCoords | undefined];\r\n}\r\n\r\nexport enum Direction {\r\n  LEFT = \"left\",\r\n  RIGHT = \"right\",\r\n  TOP = \"top\",\r\n  BOTTOM = \"bottom\",\r\n}\r\n\r\nexport enum PointType {\r\n  START = \"start\",\r\n  END = \"end\",\r\n  LINE = \"line\",\r\n}\r\n\r\nexport interface PointCoords {\r\n  rowIndex: number;\r\n  colIndex: number;\r\n  direction?: Direction;\r\n  type?: PointType;\r\n}\r\n\r\nexport interface PokemonCoords extends PointCoords {\r\n  nid?: string;\r\n}\r\n\r\nexport enum GameLevel {\r\n  LEVEL_1 = \"1\",\r\n  LEVEL_2 = \"2\",\r\n  LEVEL_3 = \"3\",\r\n  LEVEL_4 = \"4\",\r\n  LEVEL_5 = \"5\",\r\n  LEVEL_6 = \"6\",\r\n  LEVEL_7 = \"7\",\r\n  LEVEL_8 = \"8\",\r\n  LEVEL_9 = \"9\",\r\n  LEVEL_10 = \"10\",\r\n  LEVEL_11 = \"11\",\r\n  LEVEL_12 = \"12\",\r\n  LEVEL_13 = \"13\",\r\n  LEVEL_14 = \"MAX\",\r\n}\r\n\r\nexport type GameOptions = {\r\n  [key in GameLevel]: {\r\n    row: number;\r\n    col: number;\r\n  };\r\n};\r\n\r\nexport const gameOptions: GameOptions = {\r\n  [GameLevel.LEVEL_1]: {\r\n    row: 3,\r\n    col: 4,\r\n  },\r\n  [GameLevel.LEVEL_2]: {\r\n    row: 4,\r\n    col: 4,\r\n  },\r\n  [GameLevel.LEVEL_3]: {\r\n    row: 4,\r\n    col: 5,\r\n  },\r\n  [GameLevel.LEVEL_4]: {\r\n    row: 4,\r\n    col: 6,\r\n  },\r\n  [GameLevel.LEVEL_5]: {\r\n    row: 4,\r\n    col: 7,\r\n  },\r\n  [GameLevel.LEVEL_6]: {\r\n    row: 6,\r\n    col: 8,\r\n  },\r\n  [GameLevel.LEVEL_7]: {\r\n    row: 7,\r\n    col: 8,\r\n  },\r\n  [GameLevel.LEVEL_8]: {\r\n    row: 8,\r\n    col: 8,\r\n  },\r\n  [GameLevel.LEVEL_9]: {\r\n    row: 8,\r\n    col: 9,\r\n  },\r\n  [GameLevel.LEVEL_10]: {\r\n    row: 8,\r\n    col: 10,\r\n  },\r\n  [GameLevel.LEVEL_11]: {\r\n    row: 8,\r\n    col: 11,\r\n  },\r\n  [GameLevel.LEVEL_12]: {\r\n    row: 8,\r\n    col: 12,\r\n  },\r\n  [GameLevel.LEVEL_13]: {\r\n    row: 9,\r\n    col: 12,\r\n  },\r\n  [GameLevel.LEVEL_14]: {\r\n    row: 10,\r\n    col: 12,\r\n  },\r\n};\r\n\r\nexport const nextLevel = {\r\n  [GameLevel.LEVEL_1]: GameLevel.LEVEL_2,\r\n  [GameLevel.LEVEL_2]: GameLevel.LEVEL_3,\r\n  [GameLevel.LEVEL_3]: GameLevel.LEVEL_4,\r\n  [GameLevel.LEVEL_4]: GameLevel.LEVEL_5,\r\n  [GameLevel.LEVEL_5]: GameLevel.LEVEL_6,\r\n  [GameLevel.LEVEL_6]: GameLevel.LEVEL_7,\r\n  [GameLevel.LEVEL_7]: GameLevel.LEVEL_8,\r\n  [GameLevel.LEVEL_8]: GameLevel.LEVEL_9,\r\n  [GameLevel.LEVEL_9]: GameLevel.LEVEL_10,\r\n  [GameLevel.LEVEL_10]: GameLevel.LEVEL_11,\r\n  [GameLevel.LEVEL_11]: GameLevel.LEVEL_12,\r\n  [GameLevel.LEVEL_12]: GameLevel.LEVEL_13,\r\n  [GameLevel.LEVEL_13]: GameLevel.LEVEL_14,\r\n  [GameLevel.LEVEL_14]: GameLevel.LEVEL_9,\r\n};\r\n\r\nexport const BASE_START_TIME = 300;\r\nexport const SUGGEST_TIME = 10;\r\nexport const BONUS_TIME = 2;\r\nexport const PENALTY_TIME = 5;\r\nexport const PENDING_TIME = 3;\r\n","import { atom } from \"recoil\";\r\nimport { GameSound, GameTypeState } from \"../../types/game\";\r\n\r\nconst gameSoundState = atom<GameSound>({\r\n  key: GameTypeState.GAME_SOUND_STATE,\r\n  default: {\r\n    soundReady: false,\r\n    gameSongDuration: 0,\r\n    playOpenMenuSound: undefined,\r\n    playEnableSound: undefined,\r\n    playDisableSound: undefined,\r\n    playCompletedGameSound: undefined,\r\n    playFailedGameSound: undefined,\r\n    playBiteSound: undefined,\r\n    playRisingPopSound: undefined,\r\n    playFanfareSound: undefined,\r\n    playGlugSound: undefined,\r\n    playNearlyEndTimeSound: undefined,\r\n    playOffSound: undefined,\r\n    playOnSound: undefined,\r\n    playLevelUpSound: undefined,\r\n    playPopDownSound: undefined,\r\n    playPopUpOnSound: undefined,\r\n    playPopUpOffSound: undefined,\r\n    playYouWinSound: undefined,\r\n    playGameSong: undefined,\r\n  },\r\n});\r\n\r\nexport default gameSoundState;\r\n","import { useState } from \"react\";\r\n\r\n// Hook\r\nexport default function useLocalStorage(key: string, initialValue: string) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value: any) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    // the translations\r\n    // (tip move them in a JSON file and import them,\r\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\r\n    resources: {\r\n      en: {\r\n        translation: {\r\n          English: \"English\",\r\n          Vietnamese: \"Vietnamese\",\r\n          Back: \"Back\",\r\n          Replay: \"Replay\",\r\n          Language: \"Language\",\r\n          Level: \"Level\",\r\n          Welcome: \"Welcome\",\r\n          Congratulations: \"Congratulations\",\r\n          Submit: \"Submit\",\r\n          \"The fastest is best\": \"The fastest is best\",\r\n          \"The longest is best\": \"The longest is best\",\r\n          \"Your score\": \"Your score\",\r\n          \"Your time\": \"Your time\",\r\n          \"Remaining time\": \"Remaining time\",\r\n          \"Top players\": \"Top players\",\r\n          \"Single player\": \"Single player\",\r\n          \"Multi player\": \"Multi player\",\r\n          \"Main menu\": \"Main menu\",\r\n          \"Speed mode\": \"Speed mode\",\r\n          \"Survival mode\": \"Survival mode\",\r\n          \"Coming soon...\": \"Coming soon...\",\r\n          \"Scroll down to play\": \"Scroll down to play\",\r\n          \"Scroll down to chat\": \"Scroll down to chat\",\r\n          \"Preparing resource...\": \"Preparing resource...\",\r\n          \"Please complete all levels as fast as you can\":\r\n            \"Please complete all levels as fast as you can\",\r\n          \"Try your best not to run out of time as long as possible.\":\r\n            \"Try your best not to run out of time as long as possible\",\r\n          \"Your time will increase when you match a pair of pokemon\":\r\n            \"Your time will increase when you match a pair of pokemon\",\r\n          \"Choosing the wrong pair will increase the time\":\r\n            \"Choosing the wrong pair will increase the time\",\r\n          \"Choosing the wrong pair will decrease the time\":\r\n            \"Choosing the wrong pair will decrease the time\",\r\n          \"Accept alphabet and digit only.\":\r\n            \"Accept alphabet, digits and space only.\",\r\n          \"Please enter your name\": \"Please enter your name\",\r\n          \"Enter your name here\": \"Enter your name here\",\r\n          \"Make your own ranking\": \"Make your own ranking\",\r\n          \"Make match\": \"Make match\",\r\n          \"Find random match\": \"Find random match\",\r\n          \"Enter your message here...\": \"Enter your message here...\",\r\n          \"Service is not available now.\": \"Service is not available now.\",\r\n          \"Please try again\": \"Please try again\",\r\n          \"Chat slowly please\": \"Chat slowly please\",\r\n          \"Service is under maintenance\": \"Service is under maintenance\",\r\n        },\r\n      },\r\n      vi: {\r\n        translation: {\r\n          English: \"Tiếng Anh\",\r\n          Vietnamese: \"Tiếng Việt\",\r\n          Back: \"Quay về\",\r\n          Replay: \"Chơi lại\",\r\n          Language: \"Ngôn ngữ\",\r\n          Level: \"Cấp độ\",\r\n          Welcome: \"Chào bạn\",\r\n          Congratulations: \"Xin chúc mừng\",\r\n          Submit: \"Nhập\",\r\n          \"The fastest is best\": \"Hoàn thành càng sớm, thứ hạng càng cao\",\r\n          \"The longest is best\":\r\n            \"Kéo dài thời gian càng lâu, thứ hạng càng cao\",\r\n          \"Your score\": \"Điểm số của bạn\",\r\n          \"Your time\": \"Thời gian của bạn\",\r\n          \"Remaining time\": \"Thời gian còn lại\",\r\n          \"Top players\": \"Danh sách người chơi hàng đầu\",\r\n          \"Single player\": \"Cá nhân\",\r\n          \"Multi player\": \"Đối kháng\",\r\n          \"Main menu\": \"Màn hình chính\",\r\n          \"Speed mode\": \"Tốc độ\",\r\n          \"Survival mode\": \"Sinh tồn\",\r\n          \"Coming soon...\": \"Đang phát triển...\",\r\n          \"Preparing resource...\": \"Đang chuẩn bị...\",\r\n          \"Scroll down to play\": \"Lăn chuột xuống để chơi\",\r\n          \"Scroll down to chat\": \"Lăn chuột xuống để nhắn tin\",\r\n          \"Please complete all levels as fast as you can\":\r\n            \"Hãy hoàn thành tất cả cấp độ nhanh nhất có thể \",\r\n          \"Try your best not to run out of time as long as possible\":\r\n            \"Cố gắng hết sức để không hết thời gian lâu nhất có thể\",\r\n          \"Your time will increase when you match a pair of pokemon\":\r\n            \"Thời gian của bạn sẽ tăng thêm khi chọn khớp một cặp pokemon\",\r\n          \"Choosing the wrong pair will increase the time\":\r\n            \"Chọn sai cặp sẽ bị tăng thêm thời gian\",\r\n          \"Choosing the wrong pair will decrease the time\":\r\n            \"Chọn sai cặp sẽ bị giảm thời gian\",\r\n          \"Accept alphabet and digit only.\":\r\n            \"Chỉ chấp nhận chữ cái, chữ số và kí tự trắng.\",\r\n          \"Please enter your name\": \"Hãy nhập tên của bạn\",\r\n          \"Enter your name here\": \"Nhập tên bạn tại đây\",\r\n          \"Make your own ranking\": \"Tạo xếp hạng của bạn\",\r\n          \"Make match\": \"Tạo trận đấu\",\r\n          \"Find random match\": \"Tìm trận ngẫu nhiên\",\r\n          \"Enter your message here...\": \"Nhập tin nhắn tại đây...\",\r\n          \"Service is not available now.\": \"Dịch vụ hiện tại không khả dụng.\",\r\n          \"Please try again\": \"Thử lại\",\r\n          \"Chat slowly please\": \"Chat chậm lại bạn nhé\",\r\n          \"Service is under maintenance\": \"Dịch vụ đang được bảo trì\",\r\n        },\r\n      },\r\n    },\r\n    lng: \"en\", // if you're using a language detector, do not define the lng option\r\n    fallbackLng: \"en\",\r\n\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport type ResponseData = Record<string, any> | null;\r\n\r\nexport interface Response {\r\n  success: boolean;\r\n  message: string;\r\n  data?: ResponseData;\r\n  error?: string;\r\n}\r\n\r\nexport interface ResponseError extends Response {\r\n  error?: string;\r\n}\r\n\r\nexport enum ResponseStatus {\r\n  SUCCESS = \"success\",\r\n  ERROR = \"error\",\r\n  IDLE = \"idle\",\r\n  PENDING = \"pending\",\r\n}\r\n\r\n// Hook\r\nconst useAsync = <T extends Response, E = string>(\r\n  asyncFunction: () => Promise<T>,\r\n  immediate = true\r\n) => {\r\n  const [status, setStatus] = useState<ResponseStatus>(ResponseStatus.IDLE);\r\n  const [value, setValue] = useState<T | ResponseData>(null);\r\n  const [error, setError] = useState<E | ResponseError | null>(null);\r\n  // The execute function wraps asyncFunction and\r\n  // handles setting state for pending, value, and error.\r\n  // useCallback ensures the below useEffect is not called\r\n  // on every render, but only if asyncFunction changes.\r\n  const execute = useCallback(() => {\r\n    setStatus(ResponseStatus.PENDING);\r\n    setValue(null);\r\n    setError(null);\r\n    return asyncFunction()\r\n      .then((response: T) => {\r\n        if (response) {\r\n          setValue(response);\r\n        }\r\n        setStatus(ResponseStatus.SUCCESS);\r\n      })\r\n      .catch((error: ResponseError) => {\r\n        if (error) {\r\n          setError(error);\r\n        }\r\n        setStatus(ResponseStatus.ERROR);\r\n      });\r\n  }, [asyncFunction]);\r\n  // Call execute if we want to fire it right away.\r\n  // Otherwise execute can be called later, such as\r\n  // in an onClick handler.\r\n  useEffect(() => {\r\n    if (immediate) {\r\n      execute();\r\n    }\r\n  }, [execute, immediate]);\r\n  return { execute, status, value, error };\r\n};\r\n\r\nexport default useAsync;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport i18n from \"../services/i18n\";\r\n\r\nconst SwitchLanguage = () => {\r\n  const { t } = useTranslation();\r\n  const { playOffSound } = useRecoilValue(gameSoundState);\r\n  const [_, setStorageValue] = useLocalStorage(\"language\", \"vi\");\r\n  const changeLanguage = (lng: \"en\" | \"vi\") => {\r\n    i18n.changeLanguage(lng);\r\n    setStorageValue(lng);\r\n    playOffSound && playOffSound();\r\n  };\r\n\r\n  return (\r\n    <h5 className=\"select-language\">\r\n      {t(\"Language\")}:{\" \"}\r\n      <strong onClick={() => changeLanguage(\"en\")}>{t(\"English\")}</strong> -{\" \"}\r\n      <strong onClick={() => changeLanguage(\"vi\")}>{t(\"Vietnamese\")}</strong>\r\n    </h5>\r\n  );\r\n};\r\n\r\nexport default SwitchLanguage;\r\n","import { atom } from \"recoil\";\r\nimport { PlayerState, GameTypeState } from \"../../types/game\";\r\n\r\nconst playerState = atom<PlayerState>({\r\n  key: GameTypeState.PLAYER_STATE,\r\n  default: {\r\n    rankingId: \"\",\r\n    playerName: \"\",\r\n    playerTiming: 0,\r\n  },\r\n});\r\n\r\nexport default playerState;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport playerState from \"../recoil/atoms/playerState\";\r\n\r\nconst Welcome = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const player = useRecoilValue(playerState);\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center\">\r\n        {t(\"Welcome\")}, <br />\r\n        {player.playerName.replace(/-.*$/g, \"\")}\r\n      </h2>\r\n      <p className=\"text-center\">\r\n        ID: {player.playerName.replace(/^.*-/g, \"\")}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes } from \"../routes/CONSTANTS\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport SwitchLanguage from \"../components/SwitchLanguage\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport playerState from \"../recoil/atoms/playerState\";\r\nimport Welcome from \"../components/Welcome\";\r\n\r\nconst MainPage = () => {\r\n  const { t } = useTranslation();\r\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\r\n\r\n  return (\r\n    <div className=\"main-board\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Pika pika! - Main board</title>\r\n      </Helmet>\r\n      <nav className=\"navigation\">\r\n        <Welcome />\r\n        <Link to={Routes.SINGLE_PLAYER_PAGE}>\r\n          <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n            {t(\"Single player\")}\r\n          </button>\r\n        </Link>\r\n        <Link to={Routes.MULTI_PLAYER_PAGE}>\r\n          <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n            {t(\"Multi player\")}\r\n          </button>\r\n        </Link>\r\n        <SwitchLanguage />\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","const BASE_API = \"https://pokemon-game.ldktech.com/websocket\";\r\n// const BASE_API = \"http://localhost:8080\";\r\n\r\nexport default BASE_API;\r\n","import { Response } from \"../hooks/useAsync\";\r\nimport { GameMode } from \"../types/game\";\r\nimport BASE_API from \"./CONSTANTS\";\r\n\r\nexport type TopPlayer = {\r\n  _id?: string;\r\n  timing?: number;\r\n  playerName: string;\r\n  mode: GameMode;\r\n  timestamp: number;\r\n};\r\n\r\nexport interface TopPlayersResponse extends Response {\r\n  data: TopPlayer[];\r\n}\r\n\r\nexport interface InsertedTopPlayerResponse extends Response {\r\n  data?: {\r\n    InsertedID: string;\r\n  };\r\n  id: string;\r\n}\r\n\r\nconst defaultFetchOptions: RequestInit = {\r\n  method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n  mode: \"cors\", // no-cors, *cors, same-origin\r\n  cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n  credentials: \"same-origin\", // include, *same-origin, omit\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n  },\r\n  redirect: \"follow\", // manual, *follow, error\r\n  referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n};\r\n\r\nconst getTopRanking = (mode: GameMode): Promise<TopPlayersResponse> => {\r\n  return fetch(`${BASE_API}/rankings?mode=${mode}`)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (response) => response,\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => error\r\n    );\r\n};\r\n\r\nconst addNewRanking = (data: TopPlayer): Promise<InsertedTopPlayerResponse> => {\r\n  const fetchOptions = { ...defaultFetchOptions, body: JSON.stringify(data) };\r\n  return fetch(`${BASE_API}/rankings`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (response) => response,\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => error\r\n    );\r\n};\r\n\r\nconst updateNewRanking = (\r\n  id: string,\r\n  data: TopPlayer\r\n): Promise<InsertedTopPlayerResponse> => {\r\n  const fetchOptions = {\r\n    ...defaultFetchOptions,\r\n    method: \"PUT\",\r\n    body: JSON.stringify(data),\r\n  };\r\n  return fetch(`${BASE_API}/rankings/${id}`, fetchOptions)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (response) => response,\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => error\r\n    );\r\n};\r\n\r\nexport { getTopRanking, addNewRanking, updateNewRanking };\r\n","export function timeConvert(num: number) {\r\n  if (num <= 0) {\r\n    return \"00:00\";\r\n  }\r\n  const hours = Math.floor(num / 60);\r\n  const minutes = num % 60;\r\n  return (\r\n    hours.toString().padStart(2, \"0\") +\r\n    \":\" +\r\n    minutes.toString().padStart(2, \"0\")\r\n  );\r\n}\r\n\r\nexport function dateTimeFromTimestamp(timestamp: number) {\r\n  const dateObject = new Date(timestamp);\r\n\r\n  return dateObject.toLocaleString();\r\n}\r\n","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TopPlayer, TopPlayersResponse } from \"../../api/ranking\";\r\nimport useAsync, { ResponseStatus } from \"../../hooks/useAsync\";\r\nimport { Routes } from \"../../routes/CONSTANTS\";\r\nimport { dateTimeFromTimestamp, timeConvert } from \"../../utils/time\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { GameMode } from \"../../types/game\";\r\n\r\ntype TopListProps = {\r\n  fetch: () => Promise<TopPlayersResponse>;\r\n  mode: GameMode;\r\n};\r\n\r\nconst TopList: FC<TopListProps> = ({ fetch, mode }) => {\r\n  const { t } = useTranslation();\r\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\r\n  const { status, value: topPlayersResponse, error } = useAsync(fetch, true);\r\n\r\n  return (\r\n    <>\r\n      {topPlayersResponse &&\r\n        topPlayersResponse.data === null &&\r\n        (mode === GameMode.SPEED_MODE ? (\r\n          <Link to={Routes.SPEED_MODE_PAGE}>\r\n            <button\r\n              onClick={() => playPopUpOnSound && playPopUpOnSound()}\r\n              style={{ width: \"calc(100% - 32px)\", margin: 16 }}\r\n            >\r\n              {t(\"Make your own ranking\")}\r\n            </button>\r\n          </Link>\r\n        ) : (\r\n          <Link to={Routes.SURVIVAL_MODE_PAGE}>\r\n            <button\r\n              onClick={() => playPopUpOnSound && playPopUpOnSound()}\r\n              style={{ width: \"calc(100% - 32px)\", margin: 16 }}\r\n            >\r\n              {t(\"Make your own ranking\")}\r\n            </button>\r\n          </Link>\r\n        ))}\r\n      <ol className=\"rank-list\">\r\n        {status === ResponseStatus.SUCCESS && topPlayersResponse?.data ? (\r\n          topPlayersResponse?.data?.map(\r\n            (player: TopPlayer, index: number) =>\r\n              player.timing && (\r\n                <li key={`id-${index}`}>\r\n                  {player.playerName} - {timeConvert(player.timing)} -{\" \"}\r\n                  {dateTimeFromTimestamp(player.timestamp)}\r\n                </li>\r\n              )\r\n          )\r\n        ) : (\r\n          <li>{t(\"Service is under maintenance\")}</li>\r\n        )}\r\n        {status === ResponseStatus.ERROR && error && (\r\n          <p className=\"has-error\">{error}</p>\r\n        )}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopList;\r\n","import { memo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { getTopRanking } from \"../api/ranking\";\r\nimport { GameMode } from \"../types/game\";\r\nimport TopList from \"./Rank/TopList\";\r\n\r\nconst RankBoard = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"max-screen-container rank-board\">\r\n      <h1>{t(\"Top players\")}</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>\r\n            <em>{t(\"The longest is best\")}</em>\r\n          </h4>\r\n          <TopList\r\n            fetch={() => getTopRanking(GameMode.SURVIVAL_MODE)}\r\n            mode={GameMode.SURVIVAL_MODE}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>\r\n            <em>{t(\"The fastest is best\")}</em>\r\n          </h4>\r\n          <TopList\r\n            fetch={() => getTopRanking(GameMode.SPEED_MODE)}\r\n            mode={GameMode.SPEED_MODE}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(RankBoard, () => true);\r\n","import { atom } from \"recoil\";\r\nimport {\r\n  GameStatus,\r\n  GameState,\r\n  GameTypeState,\r\n  GameLevel,\r\n} from \"../../types/game\";\r\n\r\nconst gameState = atom<GameState>({\r\n  key: GameTypeState.GAME_STATE,\r\n  default: {\r\n    status: GameStatus.PENDING,\r\n    row: 3,\r\n    col: 4,\r\n    pokemons: {},\r\n    matrix: [],\r\n    level: GameLevel.LEVEL_1,\r\n  },\r\n});\r\n\r\nexport default gameState;\r\n","import { nanoid } from \"nanoid\";\r\nimport {\r\n  PointCoords,\r\n  Pokemon,\r\n  PokemonCoords,\r\n  Direction,\r\n  PointType,\r\n} from \"../types/game\";\r\n\r\nconst BASE_URL =\r\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-v/black-white\";\r\n\r\nexport let pokemonList: Pokemon[] = [\r\n  { id: \"poke-0\", matched: false, image: `${BASE_URL}/1.png` },\r\n  { id: \"poke-1\", matched: false, image: `${BASE_URL}/2.png` },\r\n  { id: \"poke-2\", matched: false, image: `${BASE_URL}/3.png` },\r\n  { id: \"poke-3\", matched: false, image: `${BASE_URL}/4.png` },\r\n  { id: \"poke-5\", matched: false, image: `${BASE_URL}/5.png` },\r\n  { id: \"poke-4\", matched: false, image: `${BASE_URL}/6.png` },\r\n  { id: \"poke-6\", matched: false, image: `${BASE_URL}/7.png` },\r\n  { id: \"poke-7\", matched: false, image: `${BASE_URL}/8.png` },\r\n  { id: \"poke-8\", matched: false, image: `${BASE_URL}/9.png` },\r\n  { id: \"poke-9\", matched: false, image: `${BASE_URL}/10.png` },\r\n  { id: \"poke-10\", matched: false, image: `${BASE_URL}/11.png` },\r\n  { id: \"poke-11\", matched: false, image: `${BASE_URL}/12.png` },\r\n  { id: \"poke-12\", matched: false, image: `${BASE_URL}/13.png` },\r\n  { id: \"poke-13\", matched: false, image: `${BASE_URL}/14.png` },\r\n  { id: \"poke-14\", matched: false, image: `${BASE_URL}/15.png` },\r\n  { id: \"poke-15\", matched: false, image: `${BASE_URL}/16.png` },\r\n  { id: \"poke-16\", matched: false, image: `${BASE_URL}/17.png` },\r\n  { id: \"poke-17\", matched: false, image: `${BASE_URL}/18.png` },\r\n  { id: \"poke-18\", matched: false, image: `${BASE_URL}/19.png` },\r\n  { id: \"poke-19\", matched: false, image: `${BASE_URL}/20.png` },\r\n  { id: \"poke-20\", matched: false, image: `${BASE_URL}/21.png` },\r\n  { id: \"poke-21\", matched: false, image: `${BASE_URL}/22.png` },\r\n  { id: \"poke-22\", matched: false, image: `${BASE_URL}/23.png` },\r\n  { id: \"poke-23\", matched: false, image: `${BASE_URL}/24.png` },\r\n  { id: \"poke-24\", matched: false, image: `${BASE_URL}/25.png` },\r\n  { id: \"poke-25\", matched: false, image: `${BASE_URL}/26.png` },\r\n  { id: \"poke-26\", matched: false, image: `${BASE_URL}/27.png` },\r\n  { id: \"poke-27\", matched: false, image: `${BASE_URL}/28.png` },\r\n  { id: \"poke-28\", matched: false, image: `${BASE_URL}/29.png` },\r\n  { id: \"poke-29\", matched: false, image: `${BASE_URL}/30.png` },\r\n  { id: \"poke-30\", matched: false, image: `${BASE_URL}/31.png` },\r\n  { id: \"poke-31\", matched: false, image: `${BASE_URL}/32.png` },\r\n  { id: \"poke-32\", matched: false, image: `${BASE_URL}/33.png` },\r\n  { id: \"poke-33\", matched: false, image: `${BASE_URL}/34.png` },\r\n  { id: \"poke-34\", matched: false, image: `${BASE_URL}/35.png` },\r\n  { id: \"poke-35\", matched: false, image: `${BASE_URL}/36.png` },\r\n  { id: \"poke-36\", matched: false, image: `${BASE_URL}/37.png` },\r\n  { id: \"poke-37\", matched: false, image: `${BASE_URL}/38.png` },\r\n  { id: \"poke-38\", matched: false, image: `${BASE_URL}/39.png` },\r\n  { id: \"poke-39\", matched: false, image: `${BASE_URL}/40.png` },\r\n];\r\n\r\nconst convertObjectToArrayList = <Model>(\r\n  objectList: Record<string, Model>\r\n): Model[] => {\r\n  const arrayList: Model[] = [];\r\n  Object.keys(objectList).map((key) => {\r\n    arrayList.push(objectList[key]);\r\n    return key;\r\n  });\r\n  return arrayList;\r\n};\r\n\r\nexport const shufflePokemonList = (nonShuffleList: Pokemon[]) => {\r\n  const shuffledPokemonList = nonShuffleList.sort(() => Math.random() - 0.5);\r\n  const shuffledlistPokemon: Record<string, Pokemon> = {};\r\n  shuffledPokemonList.map((pokemon) => {\r\n    const nid = nanoid();\r\n    shuffledlistPokemon[nid] = pokemon;\r\n    return pokemon;\r\n  });\r\n\r\n  return shuffledlistPokemon;\r\n};\r\n\r\nexport const reShufflePokemonList = (pokemonList: Record<string, Pokemon>) => {\r\n  const arrayPokemons = convertObjectToArrayList(pokemonList);\r\n\r\n  return shufflePokemonList(arrayPokemons);\r\n};\r\n\r\nexport const makeListPokemons = (row: number, col: number) => {\r\n  const clonePokemonList: Pokemon[] = pokemonList.sort(\r\n    () => Math.random() - 0.5\r\n  );\r\n  // pokemonList.map((pokemon) => {\r\n  //   clonePokemonList.push(pokemon);\r\n  //   return pokemon;\r\n  // });\r\n  const total = (row * col) / 4;\r\n  const slicePokemonList = clonePokemonList.slice(0, total);\r\n  const nonShufflePokemonList = [\r\n    ...slicePokemonList,\r\n    ...slicePokemonList,\r\n    ...slicePokemonList,\r\n    ...slicePokemonList,\r\n  ];\r\n\r\n  return shufflePokemonList(nonShufflePokemonList);\r\n};\r\n\r\nexport const generatePokemonMatrix = (\r\n  pokemons: Record<string, Pokemon>,\r\n  rowSetting: number = 8,\r\n  colSetting: number = 10\r\n): { pokemonMatrix: Pokemon[][]; pokemons: Record<string, Pokemon> } => {\r\n  const newPokemons = { ...pokemons };\r\n  const totalCol = colSetting + 2;\r\n  const totalRow = rowSetting + 2;\r\n  const pokemonKeys = Object.keys(pokemons);\r\n  const pokemonMatrix: Pokemon[][] = [];\r\n\r\n  for (let row = 0; row < totalRow; row++) {\r\n    if (pokemonMatrix[row] === undefined) pokemonMatrix[row] = [];\r\n    for (let col = 0; col < totalCol; col++) {\r\n      if (\r\n        row === 0 ||\r\n        row === totalRow - 1 ||\r\n        col === 0 ||\r\n        col === totalCol - 1\r\n      ) {\r\n        const id = nanoid();\r\n        const borderPoint = { nid: id, id, matched: true };\r\n        pokemonMatrix[row].push(borderPoint);\r\n      } else {\r\n        const pokemonKey = pokemonKeys.pop();\r\n        if (pokemonKey) {\r\n          const pokemon = {\r\n            ...newPokemons[pokemonKey],\r\n            nid: pokemonKey,\r\n            row,\r\n            col,\r\n          };\r\n          newPokemons[pokemonKey] = {\r\n            ...newPokemons[pokemonKey],\r\n            rowIndex: row,\r\n            colIndex: col,\r\n          };\r\n          pokemonMatrix[row].push(pokemon);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return { pokemonMatrix, pokemons: newPokemons };\r\n};\r\n\r\nconst cloneMatrix = (matrix: Pokemon[][]) => {\r\n  const newMatrix = [];\r\n  const length = matrix.length;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    newMatrix[i] = matrix[i].slice();\r\n  }\r\n\r\n  return newMatrix;\r\n};\r\n\r\nexport const findPath = (\r\n  fromPoint: PointCoords,\r\n  toPoint: PointCoords,\r\n  matrix: Pokemon[][],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  const matrixTotalRow = totalRow + 2;\r\n  const matrixTotalCol = totalCol + 2;\r\n  const tempMatrix = cloneMatrix(matrix);\r\n  const matrixPoints: boolean[][] = [];\r\n  const matrixTrackingPoints: (PointCoords | undefined)[][] = [];\r\n\r\n  for (let rowIndex = 0; rowIndex < matrixTotalRow; ++rowIndex) {\r\n    matrixPoints.push([]);\r\n    matrixTrackingPoints.push([]);\r\n    for (let colIndex = 0; colIndex < matrixTotalCol; ++colIndex) {\r\n      const pokemon = { ...tempMatrix[rowIndex][colIndex] };\r\n      matrixPoints[rowIndex].push(pokemon.matched);\r\n      matrixTrackingPoints[rowIndex].push(undefined);\r\n    }\r\n  }\r\n  const dRow: number[] = [-1, 0, 1, 0];\r\n  const dCol: number[] = [0, 1, 0, -1];\r\n  const queue = [];\r\n  queue.push(toPoint);\r\n  matrixTrackingPoints[toPoint.rowIndex][toPoint.colIndex] = {\r\n    rowIndex: -2,\r\n    colIndex: -2,\r\n  };\r\n\r\n  matrixPoints[fromPoint.rowIndex][fromPoint.colIndex] = true;\r\n  matrixPoints[toPoint.rowIndex][toPoint.colIndex] = true;\r\n\r\n  while (queue.length) {\r\n    const currentPoint = queue.shift();\r\n\r\n    if (currentPoint) {\r\n      if (\r\n        currentPoint?.rowIndex === fromPoint.rowIndex &&\r\n        currentPoint?.colIndex === fromPoint.colIndex\r\n      ) {\r\n        break;\r\n      }\r\n      for (let index = 0; index < 4; index++) {\r\n        let rowIndex: number = currentPoint.rowIndex + dRow[index];\r\n        let colIndex: number = currentPoint.colIndex + dCol[index];\r\n        while (\r\n          rowIndex >= 0 &&\r\n          rowIndex < matrixTotalRow &&\r\n          colIndex >= 0 &&\r\n          colIndex < matrixTotalCol &&\r\n          matrixPoints[rowIndex][colIndex] === true\r\n        ) {\r\n          if (matrixTrackingPoints[rowIndex][colIndex] === undefined) {\r\n            matrixTrackingPoints[rowIndex][colIndex] = currentPoint;\r\n            queue.push({ rowIndex, colIndex });\r\n          }\r\n          rowIndex += dRow[index];\r\n          colIndex += dCol[index];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const trackedPoints: PointCoords[] = [];\r\n  let trackPoint: PointCoords = { ...fromPoint };\r\n\r\n  if (matrixTrackingPoints[trackPoint.rowIndex][trackPoint.colIndex]) {\r\n    while (trackPoint.rowIndex !== -2 && trackPoint.colIndex !== -2) {\r\n      trackedPoints.push({\r\n        rowIndex: trackPoint.rowIndex,\r\n        colIndex: trackPoint.colIndex,\r\n      });\r\n      trackPoint = {\r\n        ...(matrixTrackingPoints[trackPoint.rowIndex][\r\n          trackPoint.colIndex\r\n        ] as PointCoords),\r\n      };\r\n    }\r\n  }\r\n\r\n  return trackedPoints;\r\n};\r\n\r\nexport const hasConnectLine = (\r\n  point1: PokemonCoords,\r\n  point2: PokemonCoords,\r\n  matrix: Pokemon[][],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  const pathPoints = findPath(point1, point2, matrix, totalRow, totalCol);\r\n\r\n  return {\r\n    connected: pathPoints.length >= 2 && pathPoints.length <= 4,\r\n    pathPoints,\r\n  };\r\n};\r\n\r\nexport const checkPointInLine = (\r\n  connectingLinePoints: PointCoords[],\r\n  currentPosition: PointCoords\r\n) => {\r\n  const { rowIndex, colIndex } = currentPosition;\r\n\r\n  return connectingLinePoints.find(\r\n    (matchingLinePoint) =>\r\n      matchingLinePoint.rowIndex === rowIndex &&\r\n      matchingLinePoint.colIndex === colIndex\r\n  );\r\n};\r\n\r\nexport const drawPath = (\r\n  pathPoints: PointCoords[],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  const limitRow = totalRow + 2;\r\n  const limitCol = totalCol + 2;\r\n  // console.log(pathPoints);\r\n  return pathPoints.reduce(\r\n    (newPathPoints, currentPoint, index, arrayPoints) => {\r\n      let type: PointType = PointType.LINE;\r\n      let direction: Direction | undefined = undefined;\r\n      const nextIndex = index + 1;\r\n      const prevIndex = index - 1;\r\n\r\n      if (arrayPoints[nextIndex] === undefined) {\r\n        type = PointType.END;\r\n      }\r\n\r\n      if (arrayPoints[prevIndex]) {\r\n        const prevPoint = arrayPoints[prevIndex];\r\n        if (prevPoint.rowIndex > currentPoint.rowIndex) {\r\n          direction = Direction.TOP;\r\n        } else if (prevPoint.rowIndex < currentPoint.rowIndex) {\r\n          direction = Direction.BOTTOM;\r\n        } else {\r\n          if (prevPoint.colIndex > currentPoint.colIndex) {\r\n            direction = Direction.LEFT;\r\n          } else if (prevPoint.colIndex < currentPoint.colIndex) {\r\n            direction = Direction.RIGHT;\r\n          } else {\r\n            if (prevPoint.rowIndex > currentPoint.rowIndex) {\r\n              direction = Direction.TOP;\r\n            } else if (prevPoint.rowIndex < currentPoint.rowIndex) {\r\n              direction = Direction.BOTTOM;\r\n            }\r\n          }\r\n        }\r\n\r\n        let extraPoint: PointCoords | undefined = {\r\n          ...currentPoint,\r\n          direction,\r\n          type: PointType.LINE,\r\n        };\r\n\r\n        // console.log(extraPoint);\r\n\r\n        do {\r\n          switch (extraPoint.direction) {\r\n            case Direction.BOTTOM:\r\n              extraPoint.rowIndex--;\r\n              if (extraPoint.rowIndex < 0) {\r\n                extraPoint = undefined;\r\n              }\r\n\r\n              break;\r\n\r\n            case Direction.TOP:\r\n              extraPoint.rowIndex++;\r\n              if (extraPoint.rowIndex >= limitRow) {\r\n                extraPoint = undefined;\r\n              }\r\n              break;\r\n\r\n            case Direction.LEFT:\r\n              extraPoint.colIndex++;\r\n              if (extraPoint.colIndex >= limitCol) {\r\n                extraPoint = undefined;\r\n              }\r\n              break;\r\n\r\n            case Direction.RIGHT:\r\n              extraPoint.colIndex--;\r\n              if (extraPoint.colIndex < 0) {\r\n                extraPoint = undefined;\r\n              }\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          if (extraPoint === undefined) {\r\n            break;\r\n          }\r\n          if (\r\n            extraPoint.rowIndex === prevPoint.rowIndex &&\r\n            extraPoint.colIndex === prevPoint.colIndex\r\n          ) {\r\n            break;\r\n          }\r\n\r\n          newPathPoints.push({ ...extraPoint });\r\n        } while (extraPoint !== undefined);\r\n      } else {\r\n        type = PointType.START;\r\n      }\r\n      const newCurrentPoint = { ...currentPoint, direction, type };\r\n\r\n      newPathPoints.push(newCurrentPoint);\r\n\r\n      return newPathPoints;\r\n    },\r\n    [] as PointCoords[]\r\n  );\r\n};\r\n\r\nexport const checkConnectionSelectedPokemons = (\r\n  selectedPokemons: PokemonCoords[],\r\n  pokemons: Record<string, Pokemon>,\r\n  matrix: Pokemon[][],\r\n  rowSetting: number,\r\n  colSetting: number\r\n) => {\r\n  const newPokemons = { ...pokemons };\r\n  const newSelectedPokemons = [...selectedPokemons];\r\n  const [selectedPokemon1, selectedPokemon2] = newSelectedPokemons;\r\n  let connectingLinePoints: PointCoords[] = [];\r\n  let newMatrix = [...matrix];\r\n\r\n  if (\r\n    selectedPokemon1?.nid &&\r\n    selectedPokemon2?.nid &&\r\n    pokemons[selectedPokemon1.nid].id === pokemons[selectedPokemon2.nid].id\r\n  ) {\r\n    const { connected, pathPoints } = hasConnectLine(\r\n      selectedPokemon1,\r\n      selectedPokemon2,\r\n      matrix,\r\n      rowSetting,\r\n      colSetting\r\n    );\r\n\r\n    if (connected) {\r\n      connectingLinePoints = drawPath(pathPoints, rowSetting, colSetting);\r\n\r\n      newPokemons[selectedPokemon1.nid] = {\r\n        ...newPokemons[selectedPokemon1.nid],\r\n        matched: true,\r\n      };\r\n      newPokemons[selectedPokemon2.nid] = {\r\n        ...newPokemons[selectedPokemon2.nid],\r\n        matched: true,\r\n      };\r\n      const { pokemonMatrix } = generatePokemonMatrix(\r\n        newPokemons,\r\n        rowSetting,\r\n        colSetting\r\n      );\r\n      newMatrix = pokemonMatrix;\r\n    } else {\r\n      connectingLinePoints = [{ rowIndex: -1, colIndex: -1 }];\r\n    }\r\n\r\n    newSelectedPokemons.length = 0;\r\n  } else {\r\n    if (selectedPokemons.length === 2) {\r\n      newSelectedPokemons.length = 0;\r\n      connectingLinePoints = [{ rowIndex: -1, colIndex: -1 }];\r\n    }\r\n  }\r\n\r\n  return {\r\n    newSelectedPokemons,\r\n    newMatrix,\r\n    newPokemons,\r\n    connectingLinePoints,\r\n  };\r\n};\r\n\r\nexport const checkCompletedLevel = (pokemons: Record<string, Pokemon>) => {\r\n  return (\r\n    Object.keys(pokemons).length &&\r\n    Object.entries(pokemons).findIndex(\r\n      ([_, pokemon]) => pokemon.matched === false\r\n    ) === -1\r\n  );\r\n};\r\n\r\nexport const hasAnyConnectLine = (\r\n  pokemons: Record<string, Pokemon>,\r\n  matrix: Pokemon[][],\r\n  totalRow: number,\r\n  totalCol: number\r\n) => {\r\n  let foundConnectLine = false;\r\n  let fromPoint: PointCoords | undefined = undefined;\r\n  let toPoint: PointCoords | undefined = undefined;\r\n  const entriesPokemons = Object.entries(pokemons);\r\n\r\n  while (entriesPokemons.length) {\r\n    const entryPokemon = entriesPokemons.pop();\r\n\r\n    if (entryPokemon === undefined) {\r\n      break;\r\n    }\r\n    const [nid, currentPokemon] = entryPokemon;\r\n\r\n    if (currentPokemon.matched === false) {\r\n      foundConnectLine = entriesPokemons.some(([nid, pokemon]) => {\r\n        if (currentPokemon.id === pokemon.id && pokemon.matched === false) {\r\n          const { connected } = hasConnectLine(\r\n            currentPokemon as PointCoords,\r\n            pokemon as PointCoords,\r\n            matrix,\r\n            totalRow,\r\n            totalCol\r\n          );\r\n\r\n          if (connected) {\r\n            if (currentPokemon.rowIndex && currentPokemon.colIndex) {\r\n              fromPoint = {\r\n                rowIndex: currentPokemon.rowIndex,\r\n                colIndex: currentPokemon.colIndex,\r\n              };\r\n            }\r\n            if (pokemon.rowIndex && pokemon.colIndex) {\r\n              toPoint = {\r\n                rowIndex: pokemon.rowIndex,\r\n                colIndex: pokemon.colIndex,\r\n              };\r\n            }\r\n          }\r\n\r\n          return connected;\r\n        }\r\n\r\n        return false;\r\n      });\r\n      if (foundConnectLine) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return { foundConnectLine, fromPoint, toPoint };\r\n};\r\n","import { atom } from \"recoil\";\r\nimport { GameOverlayState, GameTypeState } from \"../../types/game\";\r\n\r\nconst gameOverlayState = atom<GameOverlayState>({\r\n  key: GameTypeState.GAME_OVERLAY_STATE,\r\n  default: {\r\n    connectingLinePoints: [],\r\n    suggestPoints: [undefined, undefined],\r\n  },\r\n});\r\n\r\nexport default gameOverlayState;\r\n","import { atom } from \"recoil\";\r\nimport { GameTypeState, PokemonCoords } from \"../../types/game\";\r\n\r\nconst selectedPokemonsState = atom<PokemonCoords[]>({\r\n  key: GameTypeState.SELECTED_POKEMONS,\r\n  default: [],\r\n});\r\n\r\nexport default selectedPokemonsState;\r\n","import { selector } from \"recoil\";\r\nimport { GameSelector, PokemonCoords } from \"../../types/game\";\r\nimport { checkConnectionSelectedPokemons } from \"../../utils/game\";\r\nimport gameState from \"../atoms/gameState\";\r\nimport gameOverlayState from \"../atoms/gameOverlayState\";\r\nimport selectedPokemonsState from \"../atoms/selectedPokemonsState\";\r\n\r\nconst selectedPokemonsSelector = selector({\r\n  key: GameSelector.SELECTED_POKEMONS_SELECTOR,\r\n  get: ({ get }) => {\r\n    const selectedPokemons = get(selectedPokemonsState);\r\n    return selectedPokemons;\r\n  },\r\n  set: ({ set, get }, newValue) => {\r\n    const { row, col, status, matrix, pokemons, level } = get(gameState);\r\n    const selectedPokemons = get(selectedPokemonsState);\r\n\r\n    const cloneSelectedPokemons = [...selectedPokemons];\r\n    cloneSelectedPokemons.push(newValue as PokemonCoords);\r\n\r\n    const {\r\n      connectingLinePoints,\r\n      newMatrix,\r\n      newPokemons,\r\n      newSelectedPokemons,\r\n    } = checkConnectionSelectedPokemons(\r\n      cloneSelectedPokemons,\r\n      pokemons,\r\n      matrix,\r\n      row,\r\n      col\r\n    );\r\n\r\n    if (connectingLinePoints.length >= 1) {\r\n      if (connectingLinePoints.length > 1) {\r\n        set(gameState, {\r\n          row,\r\n          col,\r\n          status,\r\n          level,\r\n          matrix: newMatrix,\r\n          pokemons: newPokemons,\r\n        });\r\n      }\r\n      set(gameOverlayState, {\r\n        suggestPoints: [undefined, undefined],\r\n        connectingLinePoints,\r\n      });\r\n    }\r\n\r\n    set(selectedPokemonsState, newSelectedPokemons);\r\n  },\r\n});\r\n\r\nexport default selectedPokemonsSelector;\r\n","import { useRecoilValue, useResetRecoilState, useSetRecoilState } from \"recoil\";\r\nimport gameState from \"../recoil/atoms/gameState\";\r\nimport selectedPokemonsSelector from \"../recoil/selectors/selectedPokemonsSelector\";\r\nimport selectedPokemonsState from \"../recoil/atoms/selectedPokemonsState\";\r\nimport gameOverlayState from \"../recoil/atoms/gameOverlayState\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport { useCallback } from \"react\";\r\nimport { GameLevel, GameMode, gameOptions, GameStatus } from \"../types/game\";\r\nimport { generatePokemonMatrix, makeListPokemons } from \"../utils/game\";\r\nimport { addNewRanking, TopPlayer, updateNewRanking } from \"../api/ranking\";\r\nimport playerState from \"../recoil/atoms/playerState\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport function useGameActions(mode: GameMode) {\r\n  const setGame = useSetRecoilState(gameState);\r\n  const setPlayer = useSetRecoilState(playerState);\r\n  const setSelectedPokemons = useSetRecoilState(selectedPokemonsSelector);\r\n  const resetGameState = useResetRecoilState(gameState);\r\n  const resetGameOverlayState = useResetRecoilState(gameOverlayState);\r\n  const resetSelectedPokemonsState = useResetRecoilState(selectedPokemonsState);\r\n  const { playBiteSound, playFanfareSound, playNearlyEndTimeSound } =\r\n    useRecoilValue(gameSoundState);\r\n\r\n  const selectPokemon = (\r\n    pokemonId: string,\r\n    rowIndex: number,\r\n    colIndex: number\r\n  ) => {\r\n    playBiteSound && playBiteSound();\r\n    setSelectedPokemons({ nid: pokemonId, rowIndex, colIndex });\r\n  };\r\n\r\n  const resetGame = () => {\r\n    resetGameState();\r\n    resetGameOverlayState();\r\n    resetSelectedPokemonsState();\r\n  };\r\n\r\n  const initGame = useCallback(\r\n    (level: GameLevel, status: GameStatus = GameStatus.PENDING) => {\r\n      const { row, col } = gameOptions[level];\r\n      const pokemons = makeListPokemons(row, col);\r\n      const { pokemonMatrix, pokemons: newPokemons } = generatePokemonMatrix(\r\n        pokemons,\r\n        row,\r\n        col\r\n      );\r\n      setGame({\r\n        pokemons: newPokemons,\r\n        matrix: pokemonMatrix,\r\n        level,\r\n        row,\r\n        col,\r\n        status,\r\n      });\r\n      // setPlayer((currentPlayer) => ({ ...currentPlayer, playerTiming: 0 }));\r\n    },\r\n    [setGame]\r\n  );\r\n\r\n  const replayGame = (playerName: string) => {\r\n    // playFanfareSound && playFanfareSound();\r\n    initGame(GameLevel.LEVEL_1);\r\n    // addNewRankingScore(mode, playerName);\r\n  };\r\n\r\n  const endGame = () => {\r\n    if (mode === GameMode.SURVIVAL_MODE) {\r\n      playNearlyEndTimeSound && playNearlyEndTimeSound();\r\n      setGame((prevGame) => ({\r\n        ...prevGame,\r\n        status: GameStatus.COMPLETED,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const addNewRankingScore = (mode: GameMode, playerName: string) => {\r\n    const playerScore: TopPlayer = {\r\n      mode,\r\n      playerName,\r\n      timestamp: Date.now(),\r\n    };\r\n    addNewRanking(playerScore).then((response) => {\r\n      setPlayer((prevPlayer) => ({\r\n        ...prevPlayer,\r\n        rankingId: response.id ?? nanoid(),\r\n      }));\r\n    });\r\n  };\r\n\r\n  const updateNewRankingScore = (\r\n    id: string,\r\n    mode: GameMode,\r\n    playerName: string,\r\n    timing: number\r\n  ) => {\r\n    const playerScore: TopPlayer = {\r\n      mode,\r\n      playerName,\r\n      timing,\r\n      timestamp: Date.now(),\r\n    };\r\n    updateNewRanking(id, playerScore);\r\n  };\r\n\r\n  const startGame = () => {\r\n    setGame((prevGame) => ({\r\n      ...prevGame,\r\n      status: GameStatus.RUNNING,\r\n    }));\r\n  };\r\n\r\n  return {\r\n    initGame,\r\n    replayGame,\r\n    startGame,\r\n    endGame,\r\n    selectPokemon,\r\n    resetGame,\r\n    addNewRankingScore,\r\n    updateNewRankingScore,\r\n  };\r\n}\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RankBoard from \"../components/RankBoard\";\r\nimport { Routes } from \"../routes/CONSTANTS\";\r\nimport { useGameActions } from \"../hooks/useGameActions\";\r\nimport { useEffect } from \"react\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport SwitchLanguage from \"../components/SwitchLanguage\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { GameMode } from \"../types/game\";\r\nimport Welcome from \"../components/Welcome\";\r\n\r\nconst SinglePlayerPage = () => {\r\n  const { t } = useTranslation();\r\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\r\n  const { resetGame } = useGameActions(GameMode.SURVIVAL_MODE);\r\n\r\n  useEffect(() => {\r\n    resetGame();\r\n  }, [resetGame]);\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Pika pika! - Single player</title>\r\n      </Helmet>\r\n      <div className=\"game-board\">\r\n        <RankBoard />\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <div className=\"game-info\">\r\n          <h1 className=\"game-title\">{t(\"Single player\")}</h1>\r\n          <Welcome />\r\n        </div>\r\n        <div>\r\n          <Link to={Routes.SURVIVAL_MODE_PAGE}>\r\n            <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n              {t(\"Survival mode\")}\r\n            </button>\r\n          </Link>\r\n          <Link to={Routes.SPEED_MODE_PAGE}>\r\n            <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n              {t(\"Speed mode\")}\r\n            </button>\r\n          </Link>\r\n          <Link to={Routes.MAIN_PAGE}>\r\n            <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n              {t(\"Back\")}\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <SwitchLanguage />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePlayerPage;\r\n","export enum ChatTypeState {\r\n  MESSAGES_STATE = \"MESSAGES_STATE\",\r\n}\r\n\r\nexport type Message = {\r\n  channel: string;\r\n  content: string;\r\n};\r\n\r\nexport interface MessagesState {\r\n  messages: Message[];\r\n}\r\n\r\nexport const BASE_WS_URL = \"wss://pokemon-game.ldktech.com/websocket\";\r\n// export const BASE_WS_URL = \"ws://localhost:8080\";\r\n","import { atom } from \"recoil\";\r\nimport { ChatTypeState, MessagesState } from \"../../types/chat\";\r\n\r\nconst messagesState = atom<MessagesState>({\r\n  key: ChatTypeState.MESSAGES_STATE,\r\n  default: {\r\n    messages: [],\r\n  },\r\n});\r\n\r\nexport default messagesState;\r\n","import { FC, FormEventHandler, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface ChatBoxProps {\r\n  handleSubmit: FormEventHandler<HTMLFormElement>;\r\n}\r\n\r\nconst ChatBox: FC<ChatBoxProps> = ({ handleSubmit }) => {\r\n  const { t } = useTranslation();\r\n  const [throttle, setThrottle] = useState(1);\r\n\r\n  const onSubmit: FormEventHandler<HTMLFormElement> = (event) => {\r\n    if (throttle) {\r\n      setThrottle(0);\r\n      handleSubmit(event);\r\n      setTimeout(() => {\r\n        setThrottle(1);\r\n      }, 300);\r\n    } else {\r\n      alert(t(\"Chat slowly please\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-box\">\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"message\"\r\n          placeholder={t(\"Enter your message here...\")}\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import { FC, memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport playerState from \"../../recoil/atoms/playerState\";\r\nimport { dateTimeFromTimestamp } from \"../../utils/time\";\r\n\r\ninterface MessageProps {\r\n  message: string;\r\n}\r\n\r\nconst Message: FC<MessageProps> = ({ message }) => {\r\n  const { playerName } = useRecoilValue(playerState);\r\n  try {\r\n    const { name, content, timestamp } = JSON.parse(message);\r\n    const selfClass = playerName === name ? \"self\" : \"\";\r\n    return (\r\n      <div className={`message ${selfClass}`}>\r\n        <small className=\"message-name\">\r\n          {name.replace(/-.*$/g, \"\")} <em>(ID: {name.replace(/^.*-/g, \"\")})</em>\r\n        </small>\r\n        <strong className=\"message-content\">{content}</strong>\r\n        {/* <small className=\"message-date\">\r\n          <em>{dateTimeFromTimestamp(timestamp)}</em>\r\n        </small> */}\r\n      </div>\r\n    );\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nfunction isOldMessage(prevProps: MessageProps, nextProps: MessageProps) {\r\n  return prevProps.message === nextProps.message;\r\n}\r\n\r\nexport default memo(Message, isOldMessage);\r\n","import { FC, useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport messagesState from \"../../recoil/atoms/messagesState\";\r\n\r\nconst MessagesBox: FC = () => {\r\n  const { messages } = useRecoilValue(messagesState);\r\n\r\n  useEffect(() => {\r\n    const messagesBox = document.getElementById(\"messages-box\");\r\n    if (messagesBox) {\r\n      messagesBox.scrollTo({\r\n        behavior: \"smooth\",\r\n        top: messagesBox.scrollHeight,\r\n      });\r\n    }\r\n  }, [messages.length]);\r\n\r\n  return (\r\n    <div id=\"messages-box\" className=\"messages-box\">\r\n      {messages.map(\r\n        (message, index) =>\r\n          message && <Message key={index} message={message.content} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessagesBox;\r\n","import { Response } from \"../hooks/useAsync\";\r\nimport BASE_API from \"./CONSTANTS\";\r\n\r\nexport interface ActivePlayersResponse extends Response {\r\n  data: string[];\r\n}\r\n\r\nconst getActivePlayers = (): Promise<ActivePlayersResponse> => {\r\n  return fetch(`${BASE_API}/users`)\r\n    .then((res) => res.json())\r\n    .then(\r\n      (response) => response,\r\n      // Note: it's important to handle errors here\r\n      // instead of a catch() block so that we don't swallow\r\n      // exceptions from actual bugs in components.\r\n      (error) => error\r\n    );\r\n};\r\n\r\nexport { getActivePlayers };\r\n","export function preventReRender() {\r\n  return true;\r\n}\r\n","import { FC, memo } from \"react\";\r\n\r\ninterface ActivePlayer {\r\n  playerName: string;\r\n}\r\n\r\nconst ActivePlayer: FC<ActivePlayer> = ({ playerName }) => {\r\n  return (\r\n    <li className=\"active-player\">\r\n      <strong>{playerName.replace(/-.*$/g, \"\")}</strong>\r\n      <small>\r\n        <em>ID: {playerName.replace(/^.*-/g, \"\")}</em>\r\n      </small>\r\n    </li>\r\n  );\r\n};\r\n\r\nfunction areSameProps(prevProps: ActivePlayer, nextProps: ActivePlayer) {\r\n  return prevProps.playerName === nextProps.playerName;\r\n}\r\n\r\nexport default memo(ActivePlayer, areSameProps);\r\n","import { memo, useEffect } from \"react\";\r\nimport { ActivePlayersResponse, getActivePlayers } from \"../../api/user\";\r\nimport useAsync, { ResponseStatus } from \"../../hooks/useAsync\";\r\nimport { preventReRender } from \"../../utils/memo\";\r\nimport ActivePlayer from \"./ActivePlayer\";\r\n\r\nconst ListActivePlayers = () => {\r\n  const {\r\n    status,\r\n    value: activePlayersResponse,\r\n    error,\r\n    execute,\r\n  } = useAsync<ActivePlayersResponse>(getActivePlayers, true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"timeoutId\");\r\n    const timeoutId = setTimeout(() => {\r\n      execute();\r\n    }, 30000);\r\n\r\n    return () => {\r\n      timeoutId && clearTimeout(timeoutId);\r\n    };\r\n  }, [status]);\r\n\r\n  return (\r\n    <ul className=\"active-players-box\">\r\n      {status === ResponseStatus.SUCCESS &&\r\n        activePlayersResponse?.data?.map(\r\n          (activePlayer: string, index: number) => (\r\n            <ActivePlayer\r\n              playerName={activePlayer}\r\n              key={activePlayer.replace(/^.*-/g, \"\")}\r\n            />\r\n          )\r\n        )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default memo(ListActivePlayers, preventReRender);\r\n","import { FC, FormEventHandler, useCallback, useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport useWebSocket, { ReadyState } from \"react-use-websocket\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport messagesState from \"../recoil/atoms/messagesState\";\r\nimport playerState from \"../recoil/atoms/playerState\";\r\nimport ChatBox from \"./Chat/ChatBox\";\r\nimport MessagesBox from \"./Chat/MessagesBox\";\r\nimport ListActivePlayers from \"./Chat/ListActivePlayers\";\r\nimport { BASE_WS_URL } from \"../types/chat\";\r\n\r\ninterface ChatRoomProps {\r\n  room: string;\r\n}\r\n\r\nconst ChatRoom: FC<ChatRoomProps> = ({ room }) => {\r\n  const { t } = useTranslation();\r\n  const { playerName } = useRecoilValue(playerState);\r\n  const { playPopUpOffSound } = useRecoilValue(gameSoundState);\r\n  const setMessagesState = useSetRecoilState(messagesState);\r\n  const [socketUrl] = useState(`${BASE_WS_URL}/chat`);\r\n  const { sendJsonMessage, readyState, lastJsonMessage, lastMessage } =\r\n    useWebSocket(socketUrl, {\r\n      reconnectAttempts: 10,\r\n      reconnectInterval: 3000,\r\n      retryOnError: true,\r\n      shouldReconnect: () => true,\r\n      queryParams: {\r\n        username: playerName,\r\n      },\r\n      onMessage: (event) => {\r\n        playPopUpOffSound && playPopUpOffSound();\r\n      },\r\n    });\r\n\r\n  const reTryConnectSocket = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    lastJsonMessage &&\r\n      setMessagesState(({ messages }) => ({\r\n        messages: [...messages, lastJsonMessage],\r\n      }));\r\n  }, [lastMessage]);\r\n\r\n  const handleClickSendMessage = useCallback((message) => {\r\n    const messageJson = {\r\n      command: 2,\r\n      channel: \"general\",\r\n      name: playerName,\r\n      content: message,\r\n      timestamp: Date.now(),\r\n    };\r\n    // playPopUpOnSound();\r\n    sendJsonMessage(messageJson);\r\n  }, []);\r\n\r\n  const handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\r\n    event.preventDefault();\r\n    const inputMessage = event.currentTarget.message;\r\n    inputMessage.setAttribute(\"disabled\", \"true\");\r\n    const message = inputMessage.value.replace(\r\n      /\\b(dit|du|fuck|cu|dcm|dm|dcm|cat)\\b/g,\r\n      \"*\"\r\n    );\r\n    if (message && message.trim() !== \"\") {\r\n      handleClickSendMessage(message);\r\n      inputMessage.value = \"\";\r\n    } else {\r\n      alert(t(\"Please enter your message\"));\r\n    }\r\n    inputMessage.removeAttribute(\"disabled\");\r\n    inputMessage.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-room\">\r\n      <div className=\"chat-container\">\r\n        {readyState === ReadyState.OPEN && (\r\n          <>\r\n            <div className=\"chat-box-container\">\r\n              <MessagesBox />\r\n              <ChatBox handleSubmit={handleSubmit} />\r\n            </div>\r\n            <ListActivePlayers />\r\n          </>\r\n        )}\r\n        {readyState === ReadyState.CLOSED && (\r\n          <div className=\"service-status\">\r\n            {t(\"Service is not available now.\")}\r\n            <strong className=\"clickable\" onClick={reTryConnectSocket}>\r\n              {t(\"Please try again\")}\r\n            </strong>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { Helmet } from \"react-helmet\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport ChatRoom from \"../components/ChatRoom\";\r\nimport SwitchLanguage from \"../components/SwitchLanguage\";\r\nimport Welcome from \"../components/Welcome\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport playerState from \"../recoil/atoms/playerState\";\r\nimport { Routes } from \"../routes/CONSTANTS\";\r\n\r\nconst MultiPlayerPage = () => {\r\n  const { t } = useTranslation();\r\n  const { playPopUpOnSound, playGlugSound } = useRecoilValue(gameSoundState);\r\n\r\n  const showInDevelopment = () => {\r\n    playGlugSound && playGlugSound();\r\n    alert(t(\"In development\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-board\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Pika pika! - Multi player</title>\r\n      </Helmet>\r\n      <div className=\"game-board\">\r\n        <ChatRoom room=\"general\" />\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <div className=\"game-info\">\r\n          <h1 className=\"game-title\">{t(\"Multi player\")}</h1>\r\n          <Welcome />\r\n        </div>\r\n        <div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-coming-soon\">{t(\"Coming soon...\")}</p>\r\n            <button onClick={showInDevelopment}>{t(\"Make match\")}</button>\r\n            <button onClick={showInDevelopment}>\r\n              {t(\"Find random match\")}\r\n            </button>\r\n            <Link to={Routes.MAIN_PAGE}>\r\n              <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n                {t(\"Main menu\")}\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <p className=\"mobile-helper\">{t(\"Scroll down to chat\")}</p>\r\n        <SwitchLanguage />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiPlayerPage;\r\n","import { FC, memo } from \"react\";\r\nimport { GameStatus, Pokemon } from \"../../types/game\";\r\n\r\ntype PokemonCardProps = {\r\n  pokemon: Pokemon;\r\n  rowIndex: number;\r\n  colIndex: number;\r\n  isSelected: number | boolean;\r\n  status: GameStatus;\r\n  selectPokemon: (\r\n    pokemonId: string,\r\n    rowIndex: number,\r\n    colIndex: number\r\n  ) => void;\r\n};\r\n\r\nconst PokemonCard: FC<PokemonCardProps> = ({\r\n  pokemon,\r\n  rowIndex,\r\n  colIndex,\r\n  isSelected,\r\n  status,\r\n  selectPokemon,\r\n}) => {\r\n  const selected = isSelected ? \"selected\" : \"\";\r\n  const hidden = pokemon.matched ? \"hidden\" : \"\";\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${pokemon.image ?? \"\"})`,\r\n      }}\r\n      className={`pokemon-card ${selected} ${hidden}`}\r\n      onClick={() => {\r\n        if (\r\n          !isSelected &&\r\n          !pokemon.matched &&\r\n          status === GameStatus.RUNNING &&\r\n          pokemon.nid\r\n        ) {\r\n          selectPokemon(pokemon.nid, rowIndex, colIndex);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nfunction propsAreEquals(\r\n  prevProps: PokemonCardProps,\r\n  nextProps: PokemonCardProps\r\n) {\r\n  return (\r\n    prevProps.pokemon.nid === nextProps.pokemon.nid &&\r\n    prevProps.pokemon.image === nextProps.pokemon.image &&\r\n    prevProps.pokemon.matched === nextProps.pokemon.matched &&\r\n    prevProps.isSelected === nextProps.isSelected &&\r\n    prevProps.status === nextProps.status\r\n  );\r\n}\r\n\r\nexport default memo(PokemonCard, propsAreEquals);\r\n","import { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { useGameActions } from \"../../hooks/useGameActions\";\r\nimport selectedPokemonsState from \"../../recoil/atoms/selectedPokemonsState\";\r\n\r\nimport { GameMode, GameStatus, Pokemon } from \"../../types/game\";\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\ntype PokemonRowProps = {\r\n  pokemons: Pokemon[];\r\n  rowIndex: number;\r\n  mode: GameMode;\r\n  status: GameStatus;\r\n};\r\n\r\nconst PokemonRow: FC<PokemonRowProps> = ({\r\n  pokemons,\r\n  rowIndex,\r\n  mode,\r\n  status,\r\n}) => {\r\n  const selectedPokemons = useRecoilValue(selectedPokemonsState);\r\n  const { selectPokemon } = useGameActions(mode);\r\n  return (\r\n    <>\r\n      {pokemons.map((pokemon, index) => (\r\n        <PokemonCard\r\n          key={`card-${index}`}\r\n          pokemon={pokemon}\r\n          rowIndex={rowIndex}\r\n          colIndex={index}\r\n          isSelected={\r\n            pokemon.nid !== undefined &&\r\n            selectedPokemons.findIndex(({ nid }) => nid === pokemon.nid) >= 0\r\n          }\r\n          selectPokemon={selectPokemon}\r\n          status={status}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonRow;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport gameState from \"../recoil/atoms/gameState\";\r\nimport playerState from \"../recoil/atoms/playerState\";\r\nimport {\r\n  GameLevel,\r\n  GameMode,\r\n  GameStatus,\r\n  nextLevel,\r\n  Pokemon,\r\n} from \"../types/game\";\r\nimport {\r\n  generatePokemonMatrix,\r\n  checkCompletedLevel,\r\n  hasAnyConnectLine,\r\n  reShufflePokemonList,\r\n} from \"../utils/game\";\r\nimport { useGameActions } from \"./useGameActions\";\r\n\r\nexport default function useGameEngine(mode: GameMode) {\r\n  const location = useLocation();\r\n  const {\r\n    playFanfareSound,\r\n    playLevelUpSound,\r\n    playCompletedGameSound,\r\n    playYouWinSound,\r\n  } = useRecoilValue(gameSoundState);\r\n  const {\r\n    initGame,\r\n    replayGame,\r\n    endGame,\r\n    addNewRankingScore,\r\n    updateNewRankingScore,\r\n  } = useGameActions(mode);\r\n  const setGame = useSetRecoilState(gameState);\r\n  const currentPlayer = useRecoilValue(playerState);\r\n  const { matrix, row, col, status, pokemons, level } =\r\n    useRecoilValue(gameState);\r\n  const shuffleMatrix = (pokemons: Record<string, Pokemon>) => {\r\n    const newShufflePokemons = reShufflePokemonList(pokemons);\r\n    const { pokemonMatrix, pokemons: newPokemons } = generatePokemonMatrix(\r\n      newShufflePokemons,\r\n      row,\r\n      col\r\n    );\r\n    setGame({\r\n      pokemons: newPokemons,\r\n      matrix: pokemonMatrix,\r\n      level,\r\n      row,\r\n      col,\r\n      status: GameStatus.RUNNING,\r\n    });\r\n  };\r\n\r\n  // Setup game\r\n  useEffect(() => {\r\n    if (status === GameStatus.PENDING) {\r\n      // playFanfareSound && playFanfareSound();\r\n      initGame(level);\r\n      addNewRankingScore(mode, currentPlayer.playerName);\r\n    }\r\n    return () => {\r\n      // cleanup\r\n    };\r\n  }, [status, initGame]);\r\n\r\n  // Check game completed and post result\r\n  useEffect(() => {\r\n    if (status === GameStatus.COMPLETED) {\r\n      if (currentPlayer.rankingId) {\r\n        updateNewRankingScore(\r\n          currentPlayer.rankingId,\r\n          mode,\r\n          currentPlayer.playerName,\r\n          currentPlayer.playerTiming\r\n        );\r\n      }\r\n    }\r\n  }, [currentPlayer.rankingId, currentPlayer.playerTiming]);\r\n\r\n  // Check completed one level and re-start new one higher level\r\n  useEffect(() => {\r\n    if (checkCompletedLevel(pokemons)) {\r\n      const levelUp: GameLevel = nextLevel[level];\r\n      if (level !== levelUp || mode === GameMode.SURVIVAL_MODE) {\r\n        initGame(levelUp, GameStatus.RUNNING);\r\n        playCompletedGameSound && playCompletedGameSound();\r\n      } else {\r\n        if (mode === GameMode.SPEED_MODE) {\r\n          playYouWinSound && playYouWinSound();\r\n          setGame({\r\n            matrix,\r\n            row,\r\n            col,\r\n            pokemons,\r\n            level,\r\n            status: GameStatus.COMPLETED,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      const { foundConnectLine } = hasAnyConnectLine(\r\n        pokemons,\r\n        matrix,\r\n        row,\r\n        col\r\n      );\r\n      if (Object.keys(pokemons).length && foundConnectLine === false) {\r\n        shuffleMatrix(pokemons);\r\n        playLevelUpSound && playLevelUpSound();\r\n      }\r\n    }\r\n  }, [pokemons]);\r\n\r\n  // Setup new game if access directly from browser\r\n  useEffect(() => {\r\n    if (status === GameStatus.RUNNING) {\r\n      // playFanfareSound && playFanfareSound();\r\n      initGame(GameLevel.LEVEL_1);\r\n    }\r\n  }, [location]);\r\n\r\n  return {\r\n    initGame,\r\n    replayGame,\r\n    endGame,\r\n    matrix,\r\n    row,\r\n    col,\r\n    status,\r\n    level,\r\n  };\r\n}\r\n","import PokemonRow from \"./Game/PokemonRow\";\r\nimport useGameEngine from \"../hooks/useGameEngine\";\r\nimport { GameMode } from \"../types/game\";\r\nimport { FC } from \"react\";\r\n\r\nconst GameBoard: FC<{ mode: GameMode }> = ({ mode }) => {\r\n  const { matrix, row, col, status } = useGameEngine(mode);\r\n\r\n  return (\r\n    <div className={`game-pokemon board-${row}x${col}`}>\r\n      {matrix &&\r\n        matrix.map((pokemons, index) => (\r\n          <PokemonRow\r\n            mode={mode}\r\n            key={`row-${index}`}\r\n            rowIndex={index}\r\n            pokemons={pokemons}\r\n            status={status}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameBoard;\r\n","import { FC, memo, useEffect, useRef } from \"react\";\r\nimport { PointCoords } from \"../../types/game\";\r\n\r\ntype LineCardProps = {\r\n  point?: PointCoords;\r\n  suggested: boolean;\r\n  rowIndex: number;\r\n  colIndex: number;\r\n};\r\n\r\nconst LineCard: FC<LineCardProps> = ({\r\n  point,\r\n  suggested,\r\n  rowIndex,\r\n  colIndex,\r\n}) => {\r\n  const type = point && point.type ? `${point.type}-point` : \"\";\r\n  const direction =\r\n    point && point.direction ? `${point.direction}-direction` : \"\";\r\n  const pointClass = point ? `in-line ${direction} ${type}` : \"\";\r\n  const suggestedClass = suggested ? `suggested` : pointClass;\r\n  const lineRef = useRef<HTMLDivElement>(null);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (lineRef.current) {\r\n        direction && lineRef.current.classList.remove(direction);\r\n        type && lineRef.current.classList.remove(type);\r\n      }\r\n    }, 300);\r\n    return () => {};\r\n  }, [lineRef, direction, type]);\r\n\r\n  return (\r\n    <div ref={lineRef} className={`line-card ${suggestedClass}`}>\r\n      <strong>\r\n        {rowIndex},{colIndex}\r\n      </strong>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction propsAreEquals(prevProps: LineCardProps, nextProps: LineCardProps) {\r\n  if (prevProps.point === undefined && nextProps.point === undefined) {\r\n    return prevProps.suggested === nextProps.suggested;\r\n  }\r\n\r\n  return (\r\n    prevProps.suggested === nextProps.suggested &&\r\n    prevProps.point?.direction === nextProps.point?.direction &&\r\n    prevProps.point?.type === nextProps.point?.type\r\n  );\r\n}\r\n\r\nexport default memo(LineCard, propsAreEquals);\r\n","import { FC } from \"react\";\r\nimport { PointCoords, Pokemon } from \"../../types/game\";\r\nimport { checkPointInLine } from \"../../utils/game\";\r\nimport LineCard from \"./LineCard\";\r\n\r\ntype LineRowProps = {\r\n  cards: Pokemon[] | number[];\r\n  rowIndex: number;\r\n  connectingLinePoints: PointCoords[];\r\n  suggestPoints: [PointCoords | undefined, PointCoords | undefined];\r\n};\r\n\r\nconst LineRow: FC<LineRowProps> = ({\r\n  cards,\r\n  rowIndex,\r\n  connectingLinePoints,\r\n  suggestPoints,\r\n}) => {\r\n  return (\r\n    <>\r\n      {cards.map((_, colIndex) => (\r\n        <LineCard\r\n          key={`card-${colIndex}`}\r\n          rowIndex={rowIndex}\r\n          colIndex={colIndex}\r\n          point={checkPointInLine(connectingLinePoints, { rowIndex, colIndex })}\r\n          suggested={\r\n            suggestPoints &&\r\n            suggestPoints.findIndex(\r\n              (suggestPoint) =>\r\n                suggestPoint?.rowIndex === rowIndex &&\r\n                suggestPoint?.colIndex === colIndex\r\n            ) >= 0\r\n          }\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineRow;\r\n","import { FC } from \"react\";\r\nimport LineRow from \"./Game/LineRow\";\r\nimport useGameOverlayEngine from \"../hooks/useGameOverlayEngine\";\r\nimport { GameMode } from \"../types/game\";\r\n\r\ntype GameOverlayProps = {\r\n  mode: GameMode;\r\n};\r\n\r\nconst GameOverlay: FC<GameOverlayProps> = ({ mode }) => {\r\n  const { connectingLinePoints, suggestPoints, matrix, row, col } =\r\n    useGameOverlayEngine(mode);\r\n\r\n  const columnCards = new Array(col + 2).fill(false);\r\n\r\n  return (\r\n    <div className={`game-overlay board-${row}x${col}`}>\r\n      {matrix &&\r\n        matrix.map((_, index) => (\r\n          <LineRow\r\n            key={`row-${index}`}\r\n            cards={columnCards}\r\n            rowIndex={index}\r\n            connectingLinePoints={connectingLinePoints}\r\n            suggestPoints={suggestPoints}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOverlay;\r\n","import { useRecoilValue } from \"recoil\";\r\nimport gameState from \"../recoil/atoms/gameState\";\r\nimport gameOverlayState from \"../recoil/atoms/gameOverlayState\";\r\nimport { GameMode } from \"../types/game\";\r\n\r\nexport default function useGameOverlayEngine(mode: GameMode) {\r\n  const { connectingLinePoints, suggestPoints } =\r\n    useRecoilValue(gameOverlayState);\r\n  const { matrix, row, col, status } = useRecoilValue(gameState);\r\n\r\n  return {\r\n    connectingLinePoints,\r\n    suggestPoints,\r\n    matrix,\r\n    row,\r\n    col,\r\n    status,\r\n  };\r\n}\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport gameState from \"../../recoil/atoms/gameState\";\r\n\r\nconst GameLevel = () => {\r\n  const { t } = useTranslation();\r\n  const { level } = useRecoilValue(gameState);\r\n  return (\r\n    <h3 className=\"game-title\">\r\n      {t(\"Level\")} {level} / 14\r\n    </h3>\r\n  );\r\n};\r\n\r\nexport default GameLevel;\r\n","import { FC, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport gameState from \"../../recoil/atoms/gameState\";\r\nimport playerState from \"../../recoil/atoms/playerState\";\r\nimport {\r\n  GameMode,\r\n  GameStatus,\r\n  PENALTY_TIME,\r\n  PENDING_TIME,\r\n  SUGGEST_TIME,\r\n} from \"../../types/game\";\r\nimport { timeConvert } from \"../../utils/time\";\r\nimport gameOverlayState from \"../../recoil/atoms/gameOverlayState\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\nimport { useGameActions } from \"../../hooks/useGameActions\";\r\nimport { hasAnyConnectLine } from \"../../utils/game\";\r\n\r\nconst GameTiming: FC<{ hasTiming: boolean }> = ({ hasTiming = false }) => {\r\n  const { t } = useTranslation();\r\n  const { status, pokemons, matrix, row, col } = useRecoilValue(gameState);\r\n  const { playRisingPopSound, playGlugSound } = useRecoilValue(gameSoundState);\r\n  const [currentPlayer, setPlayer] = useRecoilState(playerState);\r\n  const [{ connectingLinePoints }, setGameOverlay] =\r\n    useRecoilState(gameOverlayState);\r\n  const [timingState, setTimingState] = useState(0);\r\n  const timing = useRef(0);\r\n  const suggestTiming = useRef(0);\r\n  const pendingTiming = useRef(PENDING_TIME);\r\n  const { startGame } = useGameActions(GameMode.SPEED_MODE);\r\n\r\n  // count timing when running, stop when completed\r\n  useEffect(() => {\r\n    let timeoutId: NodeJS.Timeout | undefined = undefined;\r\n\r\n    if (status === GameStatus.PENDING && hasTiming) {\r\n      timing.current = 0;\r\n    }\r\n\r\n    if (status === GameStatus.RUNNING) {\r\n      if (hasTiming) {\r\n        if (suggestTiming.current >= SUGGEST_TIME) {\r\n          const { foundConnectLine, fromPoint, toPoint } = hasAnyConnectLine(\r\n            pokemons,\r\n            matrix,\r\n            row,\r\n            col\r\n          );\r\n          if (foundConnectLine) {\r\n            setGameOverlay((gameOverlay) => ({\r\n              ...gameOverlay,\r\n              suggestPoints: [fromPoint, toPoint],\r\n            }));\r\n          }\r\n          suggestTiming.current = 0;\r\n        }\r\n      }\r\n      timeoutId = setTimeout(() => {\r\n        timing.current++;\r\n        suggestTiming.current++;\r\n        setTimingState(timingState + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    // update timing to make score\r\n    if (status === GameStatus.COMPLETED) {\r\n      if (timeoutId) {\r\n        clearTimeout(timeoutId);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      timeoutId && clearTimeout(timeoutId);\r\n    };\r\n  }, [status, timingState]);\r\n\r\n  useEffect(() => {\r\n    let intervalId: NodeJS.Timeout | undefined = undefined;\r\n    if (status === GameStatus.PENDING) {\r\n      if (hasTiming) {\r\n        setGameOverlay((gameOverlay) => ({\r\n          ...gameOverlay,\r\n          suggestPoints: [undefined, undefined],\r\n        }));\r\n      }\r\n\r\n      timing.current = 0;\r\n      pendingTiming.current = PENDING_TIME;\r\n      const countdownEl = document.getElementById(\"count-down-pending-timing\");\r\n      if (countdownEl) countdownEl.innerText = pendingTiming.current.toString();\r\n      intervalId = setInterval(() => {\r\n        if (pendingTiming.current <= 1) {\r\n          intervalId && clearInterval(intervalId);\r\n          pendingTiming.current = PENDING_TIME;\r\n          startGame();\r\n        } else {\r\n          pendingTiming.current--;\r\n        }\r\n        const countdownEl = document.getElementById(\r\n          \"count-down-pending-timing\"\r\n        );\r\n        if (countdownEl)\r\n          countdownEl.innerText = pendingTiming.current.toString();\r\n      }, 1000);\r\n    }\r\n\r\n    if (status === GameStatus.COMPLETED) {\r\n      intervalId && clearInterval(intervalId);\r\n      if (hasTiming) {\r\n        suggestTiming.current = 0;\r\n        setPlayer({ ...currentPlayer, playerTiming: timing.current });\r\n      }\r\n    }\r\n    return () => {\r\n      suggestTiming.current = 0;\r\n      pendingTiming.current = PENDING_TIME;\r\n      intervalId && clearInterval(intervalId);\r\n    };\r\n  }, [status]);\r\n\r\n  // check rule time\r\n  useEffect(() => {\r\n    if (connectingLinePoints.length === 1) {\r\n      playGlugSound && playGlugSound();\r\n      timing.current += PENALTY_TIME;\r\n    }\r\n    if (connectingLinePoints.length > 1) {\r\n      suggestTiming.current = 0;\r\n      playRisingPopSound && playRisingPopSound();\r\n    }\r\n  }, [connectingLinePoints]);\r\n\r\n  return (\r\n    <>\r\n      {!hasTiming && (\r\n        <div\r\n          key=\"count-down\"\r\n          id=\"count-down-pending-timing\"\r\n          className=\"overlay-pending-timing\"\r\n        >\r\n          {pendingTiming.current}\r\n        </div>\r\n      )}\r\n      <p className=\"text-center\">\r\n        {t(\"Your time\")}: {timeConvert(timing.current)}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameTiming;\r\n","import { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport gameState from \"../../recoil/atoms/gameState\";\r\nimport playerState from \"../../recoil/atoms/playerState\";\r\nimport { GameStatus } from \"../../types/game\";\r\n\r\nconst GameTitle: FC<{ title: string }> = ({ title }) => {\r\n  const { t } = useTranslation();\r\n  const { playerName } = useRecoilValue(playerState);\r\n  const { status } = useRecoilValue(gameState);\r\n  return (\r\n    <h1 className=\"game-title\">\r\n      {status === GameStatus.COMPLETED\r\n        ? t(\"Congratulations\") + \" \" + playerName.replace(/-.*$/g, \"\")\r\n        : title}\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default GameTitle;\r\n","import { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport playerState from \"../../recoil/atoms/playerState\";\r\n\r\nconst GameReplay: FC<{ action: Function }> = ({ action }) => {\r\n  const { t } = useTranslation();\r\n  const { playerName } = useRecoilValue(playerState);\r\n  return (\r\n    <p>\r\n      <button onClick={() => action(playerName)}>{t(\"Replay\")}</button>\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default GameReplay;\r\n","import { FC } from \"react\";\r\n\r\nimport { GameMode } from \"../../types/game\";\r\nimport { useGameActions } from \"../../hooks/useGameActions\";\r\nimport GameLevel from \"./GameLevel\";\r\nimport GameTiming from \"./GameTiming\";\r\nimport GameTitle from \"./GameTitle\";\r\nimport GameReplay from \"./GameReplay\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst GameSpeedInfo: FC<{ hasTiming?: boolean }> = ({ hasTiming = false }) => {\r\n  const { t } = useTranslation();\r\n  const { replayGame } = useGameActions(GameMode.SPEED_MODE);\r\n\r\n  return (\r\n    <div className=\"game-info\">\r\n      <GameTitle title={t(\"Speed mode\")} />\r\n      <GameLevel />\r\n      <GameTiming hasTiming={hasTiming} />\r\n      <GameReplay action={replayGame} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSpeedInfo;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes } from \"../routes/CONSTANTS\";\r\nimport GameBoard from \"../components/GameBoard\";\r\nimport GameOverlay from \"../components/GameOverlay\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport gameState from \"../recoil/atoms/gameState\";\r\nimport GameSpeedInfo from \"../components/Game/GameSpeedInfo\";\r\nimport SwitchLanguage from \"../components/SwitchLanguage\";\r\nimport { GameMode } from \"../types/game\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SpeedModePage = () => {\r\n  const { t } = useTranslation();\r\n  const { status } = useRecoilValue(gameState);\r\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Pika pika! - Speed mode board</title>\r\n      </Helmet>\r\n      <div className={`game-board game-${status}`}>\r\n        <GameSpeedInfo />\r\n        <GameOverlay mode={GameMode.SPEED_MODE} />\r\n        <GameBoard mode={GameMode.SPEED_MODE} />\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <GameSpeedInfo hasTiming />\r\n        <div>\r\n          <blockquote className=\"game-helper\">\r\n            {t(\"Please complete all levels as fast as you can\")}\r\n          </blockquote>\r\n          <blockquote className=\"game-helper\">\r\n            {t(\"Choosing the wrong pair will increase the time\")}\r\n          </blockquote>\r\n        </div>\r\n        <Link to={Routes.SINGLE_PLAYER_PAGE}>\r\n          <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n            {t(\"Back\")}\r\n          </button>\r\n        </Link>\r\n        <p className=\"mobile-helper\">{t(\"Scroll down to play\")}</p>\r\n        <SwitchLanguage />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedModePage;\r\n","import { FC, useEffect, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { useGameActions } from \"../../hooks/useGameActions\";\r\nimport gameOverlayState from \"../../recoil/atoms/gameOverlayState\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\nimport gameState from \"../../recoil/atoms/gameState\";\r\nimport playerState from \"../../recoil/atoms/playerState\";\r\nimport {\r\n  BASE_START_TIME,\r\n  BONUS_TIME,\r\n  GameMode,\r\n  GameStatus,\r\n  PENALTY_TIME,\r\n  PENDING_TIME,\r\n  SUGGEST_TIME,\r\n} from \"../../types/game\";\r\nimport { hasAnyConnectLine } from \"../../utils/game\";\r\nimport { timeConvert } from \"../../utils/time\";\r\n\r\nconst GameSurvivalTiming: FC<{ hasTiming: boolean }> = ({\r\n  hasTiming = false,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { status, pokemons, matrix, row, col } = useRecoilValue(gameState);\r\n  const { playRisingPopSound, playGlugSound } = useRecoilValue(gameSoundState);\r\n  const [timingState, setTimingState] = useState(0);\r\n  const timing = useRef(0);\r\n  const remainTiming = useRef(BASE_START_TIME);\r\n  const pendingTiming = useRef(PENDING_TIME);\r\n  const suggestTiming = useRef(0);\r\n  const [currentPlayer, setPlayer] = useRecoilState(playerState);\r\n  const { endGame, startGame } = useGameActions(GameMode.SURVIVAL_MODE);\r\n  const [{ connectingLinePoints }, setGameOverlay] =\r\n    useRecoilState(gameOverlayState);\r\n\r\n  // count timing when running, stop when completed\r\n  useEffect(() => {\r\n    let timeoutId: NodeJS.Timeout | undefined = undefined;\r\n\r\n    if (status === GameStatus.PENDING && hasTiming) {\r\n      timing.current = 0;\r\n      remainTiming.current = BASE_START_TIME;\r\n    }\r\n\r\n    if (status === GameStatus.RUNNING) {\r\n      if (hasTiming) {\r\n        if (suggestTiming.current >= SUGGEST_TIME) {\r\n          const { foundConnectLine, fromPoint, toPoint } = hasAnyConnectLine(\r\n            pokemons,\r\n            matrix,\r\n            row,\r\n            col\r\n          );\r\n          if (foundConnectLine) {\r\n            setGameOverlay((gameOverlay) => ({\r\n              ...gameOverlay,\r\n              suggestPoints: [fromPoint, toPoint],\r\n            }));\r\n          }\r\n          suggestTiming.current = 0;\r\n        }\r\n      }\r\n      if (remainTiming.current <= 0) {\r\n        if (hasTiming) {\r\n          endGame();\r\n        }\r\n      } else {\r\n        timeoutId = setTimeout(() => {\r\n          timing.current++;\r\n          suggestTiming.current++;\r\n          remainTiming.current--;\r\n          setTimingState(timingState + 1);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    // update timing to make score\r\n    if (status === GameStatus.COMPLETED) {\r\n      if (timeoutId) clearTimeout(timeoutId);\r\n    }\r\n    return () => {\r\n      timeoutId && clearTimeout(timeoutId);\r\n    };\r\n  }, [status, timingState]);\r\n\r\n  useEffect(() => {\r\n    let intervalId: NodeJS.Timeout | undefined = undefined;\r\n    if (status === GameStatus.PENDING) {\r\n      if (hasTiming) {\r\n        setGameOverlay((gameOverlay) => ({\r\n          ...gameOverlay,\r\n          suggestPoints: [undefined, undefined],\r\n        }));\r\n      }\r\n      timing.current = 0;\r\n      pendingTiming.current = PENDING_TIME;\r\n      const countdownEl = document.getElementById(\"count-down-pending-timing\");\r\n      if (countdownEl) countdownEl.innerText = pendingTiming.current.toString();\r\n      intervalId = setInterval(() => {\r\n        if (pendingTiming.current <= 1) {\r\n          intervalId && clearInterval(intervalId);\r\n          pendingTiming.current = PENDING_TIME;\r\n          startGame();\r\n        } else {\r\n          pendingTiming.current--;\r\n        }\r\n        const countdownEl = document.getElementById(\r\n          \"count-down-pending-timing\"\r\n        );\r\n        if (countdownEl)\r\n          countdownEl.innerText = pendingTiming.current.toString();\r\n      }, 1000);\r\n    }\r\n\r\n    if (status === GameStatus.COMPLETED) {\r\n      intervalId && clearInterval(intervalId);\r\n      if (hasTiming) {\r\n        setPlayer({ ...currentPlayer, playerTiming: timing.current });\r\n      }\r\n    }\r\n    return () => {\r\n      pendingTiming.current = PENDING_TIME;\r\n      intervalId && clearInterval(intervalId);\r\n    };\r\n  }, [status]);\r\n\r\n  // check rule time\r\n  useEffect(() => {\r\n    if (connectingLinePoints.length === 1) {\r\n      playGlugSound && playGlugSound();\r\n      remainTiming.current -= PENALTY_TIME;\r\n    }\r\n    if (connectingLinePoints.length > 1) {\r\n      playRisingPopSound && playRisingPopSound();\r\n      remainTiming.current += BONUS_TIME;\r\n      suggestTiming.current = 0;\r\n    }\r\n  }, [connectingLinePoints]);\r\n\r\n  return (\r\n    <>\r\n      {!hasTiming && (\r\n        <div id=\"count-down-pending-timing\" className=\"overlay-pending-timing\">\r\n          {pendingTiming.current}\r\n        </div>\r\n      )}\r\n      <p className=\"text-center\">\r\n        {t(\"Your time\")}: {timeConvert(timing.current)}\r\n      </p>\r\n      <p className=\"text-center\">\r\n        {t(\"Remaining time\")}: {timeConvert(remainTiming.current)}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameSurvivalTiming;\r\n","import { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useGameActions } from \"../../hooks/useGameActions\";\r\nimport { GameMode } from \"../../types/game\";\r\nimport GameLevel from \"./GameLevel\";\r\nimport GameReplay from \"./GameReplay\";\r\nimport GameSurvivalTiming from \"./GameSurvivalTiming\";\r\nimport GameTitle from \"./GameTitle\";\r\n\r\nconst GameSurvivalInfo: FC<{ hasTiming?: boolean }> = ({\r\n  hasTiming = false,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const { replayGame } = useGameActions(GameMode.SURVIVAL_MODE);\r\n\r\n  return (\r\n    <div className=\"game-info\">\r\n      <GameTitle title={t(\"Survival mode\")} />\r\n      <GameLevel />\r\n      <GameSurvivalTiming hasTiming={hasTiming} />\r\n      <GameReplay action={replayGame} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSurvivalInfo;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Routes } from \"../routes/CONSTANTS\";\r\nimport GameBoard from \"../components/GameBoard\";\r\nimport GameOverlay from \"../components/GameOverlay\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport gameState from \"../recoil/atoms/gameState\";\r\nimport SwitchLanguage from \"../components/SwitchLanguage\";\r\nimport GameSurvivalInfo from \"../components/Game/GameSurvivalInfo\";\r\nimport { GameMode } from \"../types/game\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SurvivalModePage = () => {\r\n  const { t } = useTranslation();\r\n  const { status } = useRecoilValue(gameState);\r\n  const { playPopUpOnSound } = useRecoilValue(gameSoundState);\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Pika pika! - Survival mode board</title>\r\n      </Helmet>\r\n      <div className={`game-board game-${status}`}>\r\n        <GameSurvivalInfo />\r\n        <GameOverlay mode={GameMode.SURVIVAL_MODE} />\r\n        <GameBoard mode={GameMode.SURVIVAL_MODE} />\r\n      </div>\r\n      <div className=\"sidebar\">\r\n        <GameSurvivalInfo hasTiming />\r\n        <div>\r\n          <blockquote className=\"game-helper\">\r\n            {t(\"Try your best not to run out of time as long as possible\")}\r\n          </blockquote>\r\n          <blockquote className=\"game-helper\">\r\n            {t(\"Your time will increase when you match a pair of pokemon\")}\r\n          </blockquote>\r\n          <blockquote className=\"game-helper\">\r\n            {t(\"Choosing the wrong pair will decrease the time\")}\r\n          </blockquote>\r\n        </div>\r\n        <Link to={Routes.SINGLE_PLAYER_PAGE}>\r\n          <button onClick={() => playPopUpOnSound && playPopUpOnSound()}>\r\n            {t(\"Back\")}\r\n          </button>\r\n        </Link>\r\n        <p className=\"mobile-helper\">{t(\"Scroll down to play\")}</p>\r\n        <SwitchLanguage />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SurvivalModePage;\r\n","import { useTranslation } from \"react-i18next\";\nimport { Helmet } from \"react-helmet\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { useSetRecoilState } from \"recoil\";\nimport playerState from \"../recoil/atoms/playerState\";\nimport { FormEventHandler } from \"react\";\nimport SwitchLanguage from \"../components/SwitchLanguage\";\nimport { useHistory } from \"react-router-dom\";\nimport { Routes } from \"../routes/CONSTANTS\";\nimport { nanoid } from \"nanoid\";\n\nconst PlayerPage = () => {\n  const { t } = useTranslation();\n  const history = useHistory();\n  const setPlayer = useSetRecoilState(playerState);\n  const [_, saveLocalPlayerName] = useLocalStorage(\"playerName\", \"\");\n\n  const handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    const playerName = event.currentTarget.playerName.value;\n    if (playerName && playerName.trim() !== \"\") {\n      if (playerName.match(/^[a-zA-Z0-9 ]*$/gim)) {\n        const newPlayerName = playerName + \"-\" + nanoid(6);\n        saveLocalPlayerName(newPlayerName);\n        setPlayer({ playerName: newPlayerName, playerTiming: 0 });\n        history.push(Routes.MAIN_PAGE);\n      } else {\n        alert(t(\"Accept alphabet and digit only.\"));\n      }\n    } else {\n      alert(t(\"Please enter your name\"));\n    }\n  };\n\n  return (\n    <div className=\"main-board\">\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Pika pika! - Player board</title>\n      </Helmet>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            name=\"playerName\"\n            autoFocus\n            placeholder={t(\"Enter your name here\")}\n            maxLength={20}\n            autoComplete=\"off\"\n          />\n          <button>{t(\"Submit\")}</button>\n        </form>\n        <SwitchLanguage />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerPage;\n","import { atom } from \"recoil\";\r\n\r\nconst toggleSoundState = atom<{ music: number; effect: number }>({\r\n  key: \"TOGGLE_SOUND\",\r\n  default: {\r\n    music: 0,\r\n    effect: 1,\r\n  },\r\n});\r\n\r\nexport default toggleSoundState;\r\n","import { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport gameSoundState from \"../recoil/atoms/gameSoundState\";\r\nimport toggleSoundState from \"../recoil/atoms/toggleSoundState\";\r\n\r\nconst ToggleSound = () => {\r\n  const [sound, toggleSound] = useRecoilState(toggleSoundState);\r\n  const { playDisableSound } = useRecoilValue(gameSoundState);\r\n  const classSound = sound.effect ? \"icono-volumeMedium\" : \"icono-volumeMute\";\r\n\r\n  return (\r\n    <div\r\n      className=\"toggle-sound-effect\"\r\n      onClick={() => {\r\n        toggleSound((prevValue) => ({\r\n          ...prevValue,\r\n          effect: prevValue.effect === 1 ? 0 : 1,\r\n        }));\r\n        if (sound) {\r\n          playDisableSound && playDisableSound();\r\n        }\r\n      }}\r\n    >\r\n      <i className={classSound}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleSound;\r\n","import { useRecoilState } from \"recoil\";\r\nimport toggleSoundState from \"../recoil/atoms/toggleSoundState\";\r\n\r\nconst ToggleMusic = () => {\r\n  const [sound, toggleSound] = useRecoilState(toggleSoundState);\r\n  const classSound = sound.music ? \"icono-blue\" : \"icono-black\";\r\n\r\n  return (\r\n    <div\r\n      className=\"toggle-music-effect\"\r\n      onClick={() => {\r\n        toggleSound((prevValue) => ({\r\n          ...prevValue,\r\n          music: prevValue.music === 1 ? 0 : 1,\r\n        }));\r\n      }}\r\n    >\r\n      <i className={`icono-music ${classSound}`}></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleMusic;\r\n","import \"./App.css\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport { Routes } from \"./routes/CONSTANTS\";\r\nimport SinglePlayerPage from \"./pages/SinglePlayerPage\";\r\nimport MultiPlayerPage from \"./pages/MultiPlayerPage\";\r\nimport SpeedModePage from \"./pages/SpeedModePage\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport gameSoundState from \"./recoil/atoms/gameSoundState\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"./services/i18n\";\r\nimport { useEffect } from \"react\";\r\nimport useLocalStorage from \"./hooks/useLocalStorage\";\r\nimport SurvivalModePage from \"./pages/SurvivalModePage\";\r\nimport playerState from \"./recoil/atoms/playerState\";\r\nimport PlayerPage from \"./pages/PlayerPage\";\r\nimport ToggleSound from \"./components/ToggleSound\";\r\nimport ToggleMusic from \"./components/ToggleMusic\";\r\n\r\nfunction App() {\r\n  const { t } = useTranslation();\r\n  const { soundReady } = useRecoilValue(gameSoundState);\r\n  const history = useHistory();\r\n  const [currentPlayer, setPlayer] = useRecoilState(playerState);\r\n  const [language] = useLocalStorage(\"language\", \"vi\");\r\n  const [prevPlayerName, saveLocalPlayerName] = useLocalStorage(\r\n    \"playerName\",\r\n    \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    i18n.changeLanguage(language);\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      prevPlayerName &&\r\n      prevPlayerName !== \"\" &&\r\n      prevPlayerName.replace(/-.*$/g, \"\").match(/^[a-zA-Z0-9 ]*$/gim)\r\n    ) {\r\n      if (\r\n        currentPlayer.playerName.trim() !== \"\" &&\r\n        currentPlayer.playerName\r\n          .replace(/-.*$/g, \"\")\r\n          .match(/^[a-zA-Z0-9 ]*$/gim)\r\n      ) {\r\n        setPlayer({ playerName: currentPlayer.playerName, playerTiming: 0 });\r\n      } else {\r\n        setPlayer({ playerName: prevPlayerName, playerTiming: 0 });\r\n      }\r\n    } else {\r\n      saveLocalPlayerName(\"\");\r\n      history.push(Routes.PLAYER_PAGE);\r\n    }\r\n  }, [prevPlayerName]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {soundReady && (\r\n        <>\r\n          <ToggleMusic />\r\n          <ToggleSound />\r\n        </>\r\n      )}\r\n      {!soundReady && <h1>{t(\"Preparing resource...\")}</h1>}\r\n      {soundReady && (\r\n        <Switch>\r\n          <Route path={Routes.MAIN_PAGE} exact>\r\n            <MainPage />\r\n          </Route>\r\n          <Route path={Routes.SINGLE_PLAYER_PAGE} exact>\r\n            <SinglePlayerPage />\r\n          </Route>\r\n          <Route path={Routes.MULTI_PLAYER_PAGE} exact>\r\n            <MultiPlayerPage />\r\n          </Route>\r\n          <Route path={Routes.SPEED_MODE_PAGE} exact>\r\n            <SpeedModePage />\r\n          </Route>\r\n          <Route path={Routes.SURVIVAL_MODE_PAGE} exact>\r\n            <SurvivalModePage />\r\n          </Route>\r\n          <Route path={Routes.PLAYER_PAGE} exact>\r\n            <PlayerPage />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <MainPage />\r\n          </Route>\r\n        </Switch>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import useSound from \"use-sound\";\r\nimport { SpriteMap } from \"use-sound/dist/types\";\r\n\r\nimport menuOpenSound from \"../assets/sound/menu-open.mp3\";\r\nimport disableSound from \"../assets/sound/disable-sound.mp3\";\r\nimport enableSound from \"../assets/sound/enable-sound.mp3\";\r\nimport onSound from \"../assets/sound/switch-on.mp3\";\r\nimport offSound from \"../assets/sound/switch-off.mp3\";\r\nimport biteSound from \"../assets/sound/bite.mp3\";\r\nimport fanfareSound from \"../assets/sound/fanfare.mp3\";\r\nimport glugSound from \"../assets/sound/glug-a.mp3\";\r\nimport risingPopSound from \"../assets/sound/rising-pops.mp3\";\r\nimport completeGameSound from \"../assets/sound/game-completion.wav\";\r\nimport failedGameSound from \"../assets/sound/gamers-fail-game.mp3\";\r\nimport nearlyEndTimeSound from \"../assets/sound/time-limited.wav\";\r\nimport levelUpSound from \"../assets/sound/levelup.mp3\";\r\nimport popDownSound from \"../assets/sound/pop-down.mp3\";\r\nimport popUpOnSound from \"../assets/sound/pop-up-on.mp3\";\r\nimport popUpOffSound from \"../assets/sound/pop-up-off.mp3\";\r\nimport youWinSound from \"../assets/sound/you-win.mp3\";\r\nimport gameSongSound from \"../assets/sound/game-song.mp3\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport toggleSoundState from \"../recoil/atoms/toggleSoundState\";\r\n\r\nexport enum Sound {\r\n  MENU_OPEN = \"MENU_OPEN\",\r\n  BITE = \"BITE\",\r\n  DISABLE = \"DISABLE\",\r\n  ENABLE = \"ENABLE\",\r\n  ON = \"ON\",\r\n  OFF = \"OFF\",\r\n  FANFARE = \"FANFARE\",\r\n  GLUG = \"GLUG\",\r\n  RISING_POP = \"RISING_POP\",\r\n  COMPLETE_GAME = \"COMPLETE_GAME\",\r\n  FAIL_GAME = \"FAIL_GAME\",\r\n  NEARLY_END_TIME = \"NEARLY_END_TIME\",\r\n  LEVEL_UP = \"LEVEL_UP\",\r\n  POP_DOWN = \"POP_DOWN\",\r\n  POP_UP_ON = \"POP_UP_ON\",\r\n  POP_UP_OFF = \"POP_UP_OFF\",\r\n  YOU_WIN = \"YOU_WIN\",\r\n  GAME_SONG = \"GAME_SONG\",\r\n}\r\n\r\ninterface SoundOptions {\r\n  id?: string;\r\n  volume?: number;\r\n  playbackRate?: number;\r\n  interrupt?: boolean;\r\n  soundEnabled?: boolean;\r\n  sprite?: SpriteMap;\r\n  onload?: () => void;\r\n}\r\n\r\nexport default function usePlaySound(sound?: Sound) {\r\n  const { music, effect } = useRecoilValue(toggleSoundState);\r\n  const defaultConfigSound: SoundOptions = {\r\n    interrupt: true,\r\n    volume: effect,\r\n  };\r\n  let soundPath = menuOpenSound;\r\n  if (sound) {\r\n    switch (sound) {\r\n      case Sound.BITE:\r\n        soundPath = biteSound;\r\n        break;\r\n      case Sound.COMPLETE_GAME:\r\n        soundPath = completeGameSound;\r\n        break;\r\n      case Sound.DISABLE:\r\n        soundPath = disableSound;\r\n        break;\r\n      case Sound.ENABLE:\r\n        soundPath = enableSound;\r\n        break;\r\n      case Sound.ON:\r\n        soundPath = onSound;\r\n        break;\r\n      case Sound.OFF:\r\n        soundPath = offSound;\r\n        break;\r\n      case Sound.FAIL_GAME:\r\n        soundPath = failedGameSound;\r\n        break;\r\n      case Sound.GLUG:\r\n        soundPath = glugSound;\r\n        break;\r\n      case Sound.FANFARE:\r\n        soundPath = fanfareSound;\r\n        break;\r\n      case Sound.RISING_POP:\r\n        soundPath = risingPopSound;\r\n        break;\r\n      case Sound.NEARLY_END_TIME:\r\n        soundPath = nearlyEndTimeSound;\r\n        break;\r\n      case Sound.LEVEL_UP:\r\n        soundPath = levelUpSound;\r\n        break;\r\n      case Sound.POP_DOWN:\r\n        soundPath = popDownSound;\r\n        break;\r\n      case Sound.POP_UP_ON:\r\n        soundPath = popUpOnSound;\r\n        break;\r\n      case Sound.POP_UP_OFF:\r\n        soundPath = popUpOffSound;\r\n        break;\r\n      case Sound.YOU_WIN:\r\n        soundPath = youWinSound;\r\n        break;\r\n      case Sound.GAME_SONG:\r\n        soundPath = gameSongSound;\r\n        // defaultConfigSound.volume = music;\r\n        break;\r\n      default:\r\n        soundPath = menuOpenSound;\r\n        break;\r\n    }\r\n  }\r\n\r\n  const [\r\n    play,\r\n    { sound: loadedSound, stop: stopSound, pause: pauseSound, duration },\r\n  ] = useSound(soundPath, defaultConfigSound);\r\n\r\n  return {\r\n    playSound: play,\r\n    loadedSound,\r\n    stopSound,\r\n    pauseSound,\r\n    duration,\r\n    music,\r\n    effect,\r\n  };\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/menu-open.019cf647.mp3\";","export default __webpack_public_path__ + \"static/media/disable-sound.477d0574.mp3\";","export default __webpack_public_path__ + \"static/media/enable-sound.00d0be95.mp3\";","export default __webpack_public_path__ + \"static/media/switch-on.88d10ee7.mp3\";","export default __webpack_public_path__ + \"static/media/switch-off.e5ebe933.mp3\";","export default __webpack_public_path__ + \"static/media/bite.aea7caff.mp3\";","export default __webpack_public_path__ + \"static/media/fanfare.8807360a.mp3\";","export default __webpack_public_path__ + \"static/media/glug-a.b9f1fa99.mp3\";","export default __webpack_public_path__ + \"static/media/rising-pops.7eda816b.mp3\";","export default __webpack_public_path__ + \"static/media/game-completion.a7022fca.wav\";","export default __webpack_public_path__ + \"static/media/gamers-fail-game.1bab0c1d.mp3\";","export default __webpack_public_path__ + \"static/media/time-limited.3894918f.wav\";","export default __webpack_public_path__ + \"static/media/levelup.3dc0430f.mp3\";","export default __webpack_public_path__ + \"static/media/pop-down.cc0a5518.mp3\";","export default __webpack_public_path__ + \"static/media/pop-up-on.b776a1ef.mp3\";","export default __webpack_public_path__ + \"static/media/pop-up-off.83c6ba5b.mp3\";","export default __webpack_public_path__ + \"static/media/you-win.70d95733.mp3\";","export default __webpack_public_path__ + \"static/media/game-song.c7ee5596.mp3\";","import { memo, useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst BiteSound = () => {\r\n  const { playSound: playBiteSound, loadedSound } = usePlaySound(Sound.BITE);\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playBiteSound }));\r\n    }\r\n  }, [loadedSound, playBiteSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nfunction areLoaded() {\r\n  return true;\r\n}\r\n\r\nexport default memo(BiteSound, areLoaded);\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst CompletedGameSound = () => {\r\n  const { playSound: playCompletedGameSound, loadedSound } = usePlaySound(\r\n    Sound.COMPLETE_GAME\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playCompletedGameSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playCompletedGameSound]);\r\n  return null;\r\n};\r\n\r\nexport default CompletedGameSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst OpenMenuSound = () => {\r\n  const { playSound: playOpenMenuSound, loadedSound } = usePlaySound(\r\n    Sound.MENU_OPEN\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playOpenMenuSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playOpenMenuSound]);\r\n  return null;\r\n};\r\n\r\nexport default OpenMenuSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst DisableSound = () => {\r\n  const { playSound: playDisableSound, loadedSound } = usePlaySound(\r\n    Sound.DISABLE\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playDisableSound }));\r\n    }\r\n  }, [loadedSound, playDisableSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nexport default DisableSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst EnableSound = () => {\r\n  const { playSound: playEnableSound, loadedSound } = usePlaySound(\r\n    Sound.ENABLE\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playEnableSound }));\r\n    }\r\n  }, [loadedSound, playEnableSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nexport default EnableSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst FanfareSound = () => {\r\n  const { playSound: playFanfareSound, loadedSound } = usePlaySound(\r\n    Sound.FANFARE\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playFanfareSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playFanfareSound]);\r\n  return null;\r\n};\r\n\r\nexport default FanfareSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst FailedGameSound = () => {\r\n  const { playSound: playFailedGameSound, loadedSound } = usePlaySound(\r\n    Sound.FAIL_GAME\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playFailedGameSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playFailedGameSound]);\r\n  return null;\r\n};\r\n\r\nexport default FailedGameSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst GameSongSound = () => {\r\n  const {\r\n    playSound: playGameSong,\r\n    loadedSound,\r\n    duration,\r\n  } = usePlaySound(Sound.GAME_SONG);\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({\r\n        ...sounds,\r\n        soundReady: true,\r\n        gameSongDuration: duration ?? 0,\r\n        playGameSong,\r\n      }));\r\n    }\r\n  }, [loadedSound]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameSongSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst LevelUpSound = () => {\r\n  const { playSound: playLevelUpSound, loadedSound } = usePlaySound(\r\n    Sound.LEVEL_UP\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playLevelUpSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playLevelUpSound]);\r\n  return null;\r\n};\r\n\r\nexport default LevelUpSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst NearlyEndTimeSound = () => {\r\n  const { playSound: playNearlyEndTimeSound, loadedSound } = usePlaySound(\r\n    Sound.NEARLY_END_TIME\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playNearlyEndTimeSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playNearlyEndTimeSound]);\r\n  return null;\r\n};\r\n\r\nexport default NearlyEndTimeSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst OffSound = () => {\r\n  const { playSound: playOffSound, loadedSound } = usePlaySound(Sound.OFF);\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playOffSound }));\r\n    }\r\n  }, [loadedSound, playOffSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nexport default OffSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst OnSound = () => {\r\n  const { playSound: playOnSound, loadedSound } = usePlaySound(Sound.ON);\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playOnSound }));\r\n    }\r\n  }, [loadedSound, playOnSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nexport default OnSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst PopDownSound = () => {\r\n  const { playSound: playPopDownSound, loadedSound } = usePlaySound(\r\n    Sound.POP_DOWN\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playPopDownSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playPopDownSound]);\r\n  return null;\r\n};\r\n\r\nexport default PopDownSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst PopUpOffSound = () => {\r\n  const { playSound: playPopUpOffSound, loadedSound } = usePlaySound(\r\n    Sound.POP_UP_OFF\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playPopUpOffSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playPopUpOffSound]);\r\n  return null;\r\n};\r\n\r\nexport default PopUpOffSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst PopUpOnSound = () => {\r\n  const { playSound: playPopUpOnSound, loadedSound } = usePlaySound(\r\n    Sound.POP_UP_ON\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playPopUpOnSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playPopUpOnSound]);\r\n  return null;\r\n};\r\n\r\nexport default PopUpOnSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst YouWinSound = () => {\r\n  const { playSound: playYouWinSound, loadedSound } = usePlaySound(\r\n    Sound.YOU_WIN\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playYouWinSound }));\r\n    }\r\n  }, [loadedSound, playYouWinSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nexport default YouWinSound;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst RisingPopSound = () => {\r\n  const { playSound: playRisingPopSound, loadedSound } = usePlaySound(\r\n    Sound.RISING_POP\r\n  );\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playRisingPopSound }));\r\n    }\r\n  }, [loadedSound, playRisingPopSound, setSounds]);\r\n  return null;\r\n};\r\n\r\nexport default RisingPopSound;\r\n","import ReactPlayer from \"react-player/youtube\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport toggleSoundState from \"../../recoil/atoms/toggleSoundState\";\r\n\r\nconst YoutubeThemeSong = () => {\r\n  const { music } = useRecoilValue(toggleSoundState);\r\n  return (\r\n    <div className=\"game-theme\">\r\n      <ReactPlayer\r\n        url=\"https://www.youtube.com/watch?v=6ZUDiC6TB-k\"\r\n        playing={music ? true : false}\r\n        loop\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YoutubeThemeSong;\r\n","import { useEffect } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\r\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\r\n\r\nconst GlugSound = () => {\r\n  const { playSound: playGlugSound, loadedSound } = usePlaySound(Sound.GLUG);\r\n  const setSounds = useSetRecoilState(gameSoundState);\r\n  useEffect(() => {\r\n    if (loadedSound !== null) {\r\n      setSounds((sounds) => ({ ...sounds, playGlugSound }));\r\n    }\r\n  }, [loadedSound, setSounds, playGlugSound]);\r\n  return null;\r\n};\r\n\r\nexport default GlugSound;\r\n","import { FC } from \"react\";\r\nimport BiteSound from \"./Sound/BiteSound\";\r\nimport CompletedGameSound from \"./Sound/CompletedGameSound\";\r\nimport OpenMenuSound from \"./Sound/OpenMenuSound\";\r\nimport DisableSound from \"./Sound/DisableSound\";\r\nimport EnableSound from \"./Sound/EnableSound\";\r\nimport FanfareSound from \"./Sound/FanfareSound\";\r\nimport FailedGameSound from \"./Sound/FailedGameSound\";\r\nimport GameSongSound from \"./Sound/GameSongSound\";\r\nimport LevelUpSound from \"./Sound/LevelUpSound\";\r\nimport NearlyEndTimeSound from \"./Sound/NearlyEndTimeSound\";\r\nimport OffSound from \"./Sound/OffSound\";\r\nimport OnSound from \"./Sound/OnSound\";\r\nimport PopDownSound from \"./Sound/PopDownSound\";\r\nimport PopUpOffSound from \"./Sound/PopUpOffSound\";\r\nimport PopUpOnSound from \"./Sound/PopUpOnSound\";\r\nimport YouWinSound from \"./Sound/YouWinSound\";\r\nimport RisingPopSound from \"./Sound/RisingPopSound\";\r\nimport YoutubeThemeSong from \"./Sound/YoutubeThemeSong\";\r\nimport GlugSound from \"./Sound/GlugSound\";\r\n\r\nconst SoundProvider: FC = ({ children }) => {\r\n  return (\r\n    <>\r\n      <YoutubeThemeSong />\r\n      <BiteSound />\r\n      <CompletedGameSound />\r\n      <DisableSound />\r\n      <EnableSound />\r\n      <FailedGameSound />\r\n      <FanfareSound />\r\n      <GameSongSound />\r\n      <LevelUpSound />\r\n      <NearlyEndTimeSound />\r\n      <OffSound />\r\n      <OnSound />\r\n      <OpenMenuSound />\r\n      <PopDownSound />\r\n      <PopUpOffSound />\r\n      <PopUpOnSound />\r\n      <RisingPopSound />\r\n      <YouWinSound />\r\n      <GlugSound />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SoundProvider;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport SoundProvider from \"./components/SoundProvider\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <SoundProvider>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </SoundProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}